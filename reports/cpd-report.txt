Found a 621 line (3521 tokens) duplication in the following files: 
Starting at line 47 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 38 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

public class King extends Piece {

	public boolean wasMotion = false;// maybe change to: 'wasMotioned'
	// public boolean checked = false;
	public static short value = 99;
	ArrayList<IMove> moveBehaviour;

	public King(IChessboard chessboard, Player player, ArrayList<IMove> moveBehaviour) {

		super(chessboard, player, "King"); // call initializer of super type:
											// Piece
		this.symbol = "K";
		this.moveBehaviour = moveBehaviour;

	}

	/**
	 * Annotation to superclass Piece changing pawns location
	 * 
	 * @return ArrayList with new position of piece
	 */
	public ArrayList<Square> allMoves(boolean ignoreKing) {
		ArrayList<Square> list = new ArrayList<Square>();
		for (IMove iMove : moveBehaviour) {
			list.addAll(iMove.getMoves(this, false));
		}
		return list;
	}

	/**
	 * Method to check is the king is checked
	 * 
	 * @return bool true if king is not save, else returns false
	 */
	public boolean isChecked() {
		return !isSafe(this.getSquare());
	}

	/**
	 * Method to check is the king is checked or stalemated
	 * 
	 * @return int 0 if nothing, 1 if checkmate, else returns 2
	 */
	public int isCheckmatedOrStalematedOld() {
		/*
		 * returns: 0-nothing, 1-checkmate, 2-stalemate
		 */
		if (this.allMoves(false).size() == 0) {
			for (int i = 0; i < 8; ++i) {
				for (int j = 0; j < 8; ++j) {
					if (getChessboard().getSquares()[i][j].piece != null
							&& getChessboard().getSquares()[i][j].piece.getPlayer() == this.getPlayer()
							&& getChessboard().getSquares()[i][j].piece.allMoves(false).size() != 0) {
						return 0;
					}
				}
			}

			if (this.isChecked()) {
				return 1;
			} else {
				return 2;
			}
		} else {
			return 0;
		}
	}

	public int isCheckmatedOrStalemated() {
		/*
		 * returns: 0-nothing, 1-checkmate, 2-stalemate
		 */
		if (this.allMoves(false).size() == 0) {
			for (int i = 0; i < 24; ++i) {
				for (int j = 0; j < 6; ++j) {
					if (getChessboard().getSquares()[i][j].piece != null
							&& getChessboard().getSquares()[i][j].piece.getPlayer() == this.getPlayer()
							&& getChessboard().getSquares()[i][j].piece.allMoves(false).size() != 0) {
						return 0;
					}
				}
			}

			if (this.isChecked()) {
				return 1;
			} else {
				return 2;
			}
		} else {
			return 0;
		}
	}

	/**
	 * Method to check is the king is checked by an opponent
	 * 
	 * @param s
	 *            Square where is a king
	 * @return bool true if king is save, else returns false
	 */
	public boolean isSafeOld(Square s) // A bit confusing code.
	{
		// Rook & Queen
		for (int i = s.getPozY() + 1; i <= 7; ++i) // up
		{
			if (this.getChessboard().getSquares()[s.getPozX()][i].piece == null
					|| this.getChessboard().getSquares()[s.getPozX()][i].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[s.getPozX()][i].piece.getPlayer() != this.getPlayer()) // if
			// isn't
			// our
			// piece
			{
				if (this.getChessboard().getSquares()[s.getPozX()][i].piece.getName().equals("Rook")
						|| this.getChessboard().getSquares()[s.getPozX()][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int i = s.getPozY() - 1; i >= 0; --i) // down
		{
			if (this.getChessboard().getSquares()[s.getPozX()][i].piece == null
					|| this.getChessboard().getSquares()[s.getPozX()][i].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[s.getPozX()][i].piece.getPlayer() != this.getPlayer()) // if
			// isn't
			// our
			// piece
			{
				if (this.getChessboard().getSquares()[s.getPozX()][i].piece.getName().equals("Rook")
						|| this.getChessboard().getSquares()[s.getPozX()][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int i = s.getPozX() - 1; i >= 0; --i) // left
		{
			if (this.getChessboard().getSquares()[i][s.getPozY()].piece == null
					|| this.getChessboard().getSquares()[i][s.getPozY()].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[i][s.getPozY()].piece.getPlayer() != this.getPlayer()) // if
			// isn't
			// our
			// piece
			{
				if (this.getChessboard().getSquares()[i][s.getPozY()].piece.getName().equals("Rook")
						|| this.getChessboard().getSquares()[i][s.getPozY()].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int i = s.getPozX() + 1; i <= 7; ++i) // right
		{
			if (this.getChessboard().getSquares()[i][s.getPozY()].piece == null
					|| this.getChessboard().getSquares()[i][s.getPozY()].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[i][s.getPozY()].piece.getPlayer() != this.getPlayer()) // if
			// isn't
			// our
			// piece
			{
				if (this.getChessboard().getSquares()[i][s.getPozY()].piece.getName().equals("Rook")
						|| this.getChessboard().getSquares()[i][s.getPozY()].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		// Bishop & Queen
		for (int h = s.getPozX() - 1, i = s.getPozY() + 1; !pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (this.getChessboard().getSquares()[h][i].piece == null
					|| this.getChessboard().getSquares()[h][i].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[h][i].piece.getPlayer() != this.getPlayer()) // if
																										// isn't
																										// our
																										// piece
			{
				if (this.getChessboard().getSquares()[h][i].piece.getName().equals("Bishop")
						|| this.getChessboard().getSquares()[h][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int h = s.getPozX() - 1, i = s.getPozY() - 1; !pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (this.getChessboard().getSquares()[h][i].piece == null
					|| this.getChessboard().getSquares()[h][i].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[h][i].piece.getPlayer() != this.getPlayer()) // if
																										// isn't
																										// our
																										// piece
			{
				if (this.getChessboard().getSquares()[h][i].piece.getName().equals("Bishop")
						|| this.getChessboard().getSquares()[h][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int h = s.getPozX() + 1, i = s.getPozY() + 1; !pieceBehaviour.isout(h, i); ++h, ++i) // right-up
		{
			if (this.getChessboard().getSquares()[h][i].piece == null
					|| this.getChessboard().getSquares()[h][i].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[h][i].piece.getPlayer() != this.getPlayer()) // if
																										// isn't
																										// our
																										// piece
			{
				if (this.getChessboard().getSquares()[h][i].piece.getName().equals("Bishop")
						|| this.getChessboard().getSquares()[h][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int h = s.getPozX() + 1, i = s.getPozY() - 1; !pieceBehaviour.isout(h, i); ++h, --i) // right-down
		{
			if (this.getChessboard().getSquares()[h][i].piece == null
					|| this.getChessboard().getSquares()[h][i].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[h][i].piece.getPlayer() != this.getPlayer()) // if
																										// isn't
																										// our
																										// piece
			{
				if (this.getChessboard().getSquares()[h][i].piece.getName().equals("Bishop")
						|| this.getChessboard().getSquares()[h][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		// Knight
		int newX, newY;

		// 1
		newX = s.getPozX() - 2;
		newY = s.getPozY() + 1;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 2
		newX = s.getPozX() - 1;
		newY = s.getPozY() + 2;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 3
		newX = s.getPozX() + 1;
		newY = s.getPozY() + 2;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 4
		newX = s.getPozX() + 2;
		newY = s.getPozY() + 1;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 5
		newX = s.getPozX() + 2;
		newY = s.getPozY() - 1;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 6
		newX = s.getPozX() + 1;
		newY = s.getPozY() - 2;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 7
		newX = s.getPozX() - 1;
		newY = s.getPozY() - 2;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 8
		newX = s.getPozX() - 2;
		newY = s.getPozY() - 1;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}
		/*
		 * // King King otherKing; <<<<<<< HEAD:src/jchess/pieces/King.java if
		 * (this == getChessboard().kingWhite) { otherKing =
		 * getChessboard().kingBlack; ======= if (this ==
		 * getChessboard().initial.kingWhite) { otherKing =
		 * getChessboard().initial.kingBlack; >>>>>>>
		 * code_refactoring:src/main/java/pieces/King.java } else { otherKing =
		 * getChessboard().initial.kingWhite; }
		 * 
		 * if (s.getPozX() <= otherKing.getSquare().getPozX() + 1 && s.getPozX()
		 * >= otherKing.getSquare().getPozX() - 1 && s.getPozY() <=
		 * otherKing.getSquare().getPozY() + 1 && s.getPozY() >=
		 * otherKing.getSquare().getPozY() - 1) { return false; }
		 */
		// Pawn
		if (this.getPlayer().isGoDown()) // check if player "go" down or up
		{// System.out.println("go down");
			newX = s.getPozX() - 1;
			newY = s.getPozY() + 1;
			if (!pieceBehaviour.isout(newX, newY)) {
				if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
				// on
				// this
				// sqhuare
				// isn't
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
				// is
				// our
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Pawn")) {
					return false;
				}
			}
			newX = s.getPozX() + 1;
			if (!pieceBehaviour.isout(newX, newY)) {
				if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
				// on
				// this
				// sqhuare
				// isn't
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
				// is
				// our
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Pawn")) {
					return false;
				}
			}
		} else {// System.out.println("go up");
			newX = s.getPozX() - 1;
			newY = s.getPozY() - 1;
			if (!pieceBehaviour.isout(newX, newY)) {
				if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
				// on
				// this
				// sqhuare
				// isn't
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
				// is
				// our
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Pawn")) {
					return false;
				}
			}
			newX = s.getPozX() + 1;
			if (!pieceBehaviour.isout(newX, newY)) {
				if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
				// on
				// this
				// sqhuare
				// isn't
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
				// is
				// our
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Pawn")) {
					return false;
				}
			}
		}

		return true;
	}

	public boolean isSafe(Square s) // A bit confusing code.
	{

			for (int i = 0; i < 24; i++) {
				for (int j = 0; j < 6; j++) {
					if (getChessboard().getSquares()[i][j].piece != null) {
						Piece piece = getChessboard().getSquares()[i][j].piece;
						if (piece.getPlayer() != this.getPlayer()) {
							ArrayList<Square> pieceMoves = piece.allMoves(true);
							if (pieceMoves.contains(s)) {
								return false;
							}
						}
					}
				}
			}
		
		return true;
	}

	/**
	 * Method to check will the king be safe when move
	 * 
	 * @return bool true if king is save, else returns false
	 */
	public boolean willBeSafeWhenMoveOtherPiece(Square sqIsHere, Square sqWillBeThere) // long
=====================================================================
Found a 509 line (2942 tokens) duplication in the following files: 
Starting at line 51 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java

public class SquareBoard implements IChessboard {

	public static final int top = 0;
	public static final int bottom = 7;

	// public Graphics graph;
	ArrayList<Square> moves;
	private Settings settings;
	// -------- for undo ----------
	private Square undo1_sq_begin = null;
	private Square undo1_sq_end = null;
	private Piece undo1_piece_begin = null;
	public Piece undo1_piece_end;
	public Piece ifWasEnPassant;
	public Piece ifWasCastling;
	public boolean breakCastling;
	public MovesTable moves_history;
	// ----------------------------
	// For En passant:
	// |-> Pawn whose in last turn moved two square
	public static Pawn twoSquareMovedPawn = null;
	public static Pawn twoSquareMovedPawn2 = null;

	ChessboardLayout board_layout = new ChessboardLayout("chessboard.png", "sel_square.png", "able_square.png");
	public SquareBoardInitialization initial;
	private SquareBoardDisplay display;

	/**
	 * Chessboard class constructor
	 * 
	 * @param settings
	 *            reference to Settings class object for this chessboard
	 * @param moves_history
	 *            reference to MovesTable class object for this chessboard
	 */
	public SquareBoard(Settings settings, MovesTable moves_history) {
		this.settings = settings;
		initial = new SquareBoardInitialization(settings.upsideDown, this);
		display = new SquareBoardDisplay(null, null, new Point(0, 0), settings.renderLabels, settings.upsideDown, this);
		this.moves_history = moves_history;

	}/*--endOf-Chessboard--*/

	/**
	 * method to get reference to square from given x and y integeres
	 * 
	 * @param x
	 *            x position on chessboard
	 * @param y
	 *            y position on chessboard
	 * @return reference to searched square
	 */
	public Square getSquare(int x, int y) {
		if ((x > this.get_height()) || (y > this.get_widht())) // test if click
																// is out of
																// chessboard
		{
			System.out.println("click out of chessboard.");
			return null;
		}
		if (this.settings.renderLabels) {
			x -= this.display.upDownLabel.getHeight(null);
			y -= this.display.upDownLabel.getHeight(null);
		}
		double square_x = (int) (x / display.square_height);// count which field in X
													// was clicked
		double square_y = (int) (y / display.square_height);// count which field in Y
													// was clicked
		/**
		if (square_x > (int) square_x) // if X is more than X parsed to Integer
		{
			square_x = (int) square_x + 1;// parse to integer and increment
		}
		if (square_y > (int) square_y) // if X is more than X parsed to Integer
		{
			square_y = (int) square_y + 1;// parse to integer and increment
		}
		**/
		// Square newActiveSquare =
		// this.squares[(int)square_x-1][(int)square_y-1];//4test
		System.out.println("square_x: " + square_x + " square_y: " + square_y + " \n"); // 4tests

		try {
			return initial.getSquares()[(int) square_x][(int) square_y];
		} catch (java.lang.ArrayIndexOutOfBoundsException exc) {
			System.out.println("!!Array out of bounds when getting Square with Chessboard.getSquare(int,int) : " + exc);
			return null;
		}
	}

	/**
	 * Method selecting piece in chessboard
	 * 
	 * @param sq
	 *            square to select (when clicked))
	 */
	public void select(Square sq) {
		this.display.activeSquare = sq;
		this.display.active_x_square = sq.getPozX();
		this.display.active_y_square = sq.getPozY();

		// this.draw();//redraw
		System.out.println("active_x: " + this.display.active_x_square + " active_y: " + this.display.active_y_square);// 4tests
		display.repaint();

	}/*--endOf-select--*/

	/**
	 * Method set variables active_x_square & active_y_square to 0 values.
	 */
	public void unselect() {
		this.display.active_x_square = -1;
		this.display.active_y_square = -1;
		this.display.activeSquare = null;
		// this.draw();//redraw
		display.repaint();
	}/*--endOf-unselect--*/

	public int get_widht() {
		return this.get_widht(false);
	}

	public int get_height() {
		return this.get_height(false);
	}

	public int get_widht(boolean includeLables) {
		return this.display.getHeight();
	}/*--endOf-get_widht--*/

	public int get_height(boolean includeLabels) {
		if (this.settings.renderLabels) {
			return board_layout.image.getHeight(null) + display.upDownLabel.getHeight(null);
		}
		return board_layout.image.getHeight(null);
	}/*--endOf-get_height--*/

	public int get_square_height() {
		return (int) this.display.square_height;
	}

	public void move(Square begin, Square end) {
		move(begin, end, true);
	}

	/**
	 * Method to move piece over chessboard
	 * 
	 * @param xFrom
	 *            from which x move piece
	 * @param yFrom
	 *            from which y move piece
	 * @param xTo
	 *            to which x move piece
	 * @param yTo
	 *            to which y move piece
	 */
	public void move(int xFrom, int yFrom, int xTo, int yTo) {

		try {
			Square fromSQ = this.initial.getSquares()[xFrom][yFrom];
			Square toSQ = this.initial.getSquares()[xTo][yTo];
			this.move(fromSQ, toSQ, true);
		} catch (java.lang.IndexOutOfBoundsException exc) {
			System.out.println("error moving piece: " + exc);
		}
	}

	public void move(Square begin, Square end, boolean refresh) {
		this.move(begin, end, refresh, true);
	}

	/**
	 * Method move piece from square to square
	 * 
	 * @param begin
	 *            square from which move piece
	 * @param end
	 *            square where we want to move piece *
	 * @param refresh
	 *            chessboard, default: true
	 */
	public void move(Square begin, Square end, boolean refresh, boolean clearForwardHistory) {

		castling wasCastling = MovesTable.castling.none;
		Piece promotedPiece = null;
		boolean wasEnPassant = false;
		
		if (end.piece != null) {
			end.piece.setSquare(null);
		}

		Square tempBegin = new Square(begin);// 4 moves history
		Square tempEnd = new Square(end); // 4 moves history
		// for undo
		
		undo1_piece_begin = begin.piece;
		undo1_sq_begin = begin;
		undo1_piece_end = end.piece;
		undo1_sq_end = end;
		ifWasEnPassant = null;
		ifWasCastling = null;
		breakCastling = false;
		// ---

		twoSquareMovedPawn2 = twoSquareMovedPawn;

		begin.piece.setSquare(end);// set square of piece to ending
		end.piece = begin.piece;// for ending square set piece from beginin
								// square
		begin.piece = null;// make null piece for begining square

		if (end.piece.getName().equals("King")) {
			if (!((King) end.piece).wasMotion) {
				breakCastling = true;
				((King) end.piece).wasMotion = true;
			}

			// Castling
			if (begin.getPozX() + 2 == end.getPozX()) {
				move(initial.getSquares()[7][begin.getPozY()], initial.getSquares()[end.getPozX() - 1][begin.getPozY()],
						false, false);
				ifWasCastling = end.piece; // for undo
				wasCastling = MovesTable.castling.shortCastling;
				// this.moves_history.addMove(tempBegin, tempEnd,
				// clearForwardHistory, wasCastling, wasEnPassant);
				// return;
			} else if (begin.getPozX() - 2 == end.getPozX()) {
				move(initial.getSquares()[0][begin.getPozY()], initial.getSquares()[end.getPozX() + 1][begin.getPozY()],
						false, false);
				ifWasCastling = end.piece; // for undo
				wasCastling = MovesTable.castling.longCastling;
				// this.moves_history.addMove(tempBegin, tempEnd,
				// clearForwardHistory, wasCastling, wasEnPassant);
				// return;
			}
			// endOf Castling
		} else if (end.piece.getName().equals("Rook")) {
			if (!((Rook) end.piece).wasMotion()) {
				breakCastling = true;
				((Rook) end.piece).setWasMotion(true);
			}
		} else if (end.piece.getName().equals("Pawn")) {
			if (twoSquareMovedPawn != null
					&& initial.getSquares()[end.getPozX()][begin.getPozY()] == twoSquareMovedPawn.getSquare()) // en
																												// passant
			{
				ifWasEnPassant = initial.getSquares()[end.getPozX()][begin.getPozY()].piece; // for
																								// undo

				tempEnd.piece = initial.getSquares()[end.getPozX()][begin.getPozY()].piece; // ugly
																							// hack
																							// -
																							// put
																							// taken
																							// pawn
																							// in
																							// en
																							// passant
																							// plasty
																							// do
																							// end
																							// square

				initial.getSquares()[end.getPozX()][begin.getPozY()].piece = null;
				wasEnPassant = true;
			}

			if (begin.getPozY() - end.getPozY() == 2 || end.getPozY() - begin.getPozY() == 2) // moved
																								// two
																								// square
			{
				breakCastling = true;
				twoSquareMovedPawn = (Pawn) end.piece;
			} else {
				twoSquareMovedPawn = null; // erase last saved move (for En
											// passant)
			}

			if (end.piece.getSquare().getPozY() == 0 || end.piece.getSquare().getPozY() == 7) // promote
																								// Pawn
			{
				if (clearForwardHistory) {
					String color;
					if (end.piece.getPlayer().getColor() == Player.colors.white) {
						color = "W"; // promotionWindow was show with pieces in
										// this color
					} else {
						color = "B";
					}

					String newPiece = JChessApp.getJcv().showPawnPromotionBox(color); // return
																						// name
																						// of
																						// new
																						// piece

					if (newPiece.equals("Queen")) // transform pawn to queen
					{
						ArrayList <IMove> queenMoves = new ArrayList<>();
						queenMoves.add(new RookMoves());
						queenMoves.add(new BishopMoves());
						
						Queen queen = new Queen(this, end.piece.getPlayer(),queenMoves);
						queen.setChessboard(end.piece.getChessboard());
						queen.setPlayer(end.piece.getPlayer());
						queen.setSquare(end.piece.getSquare());
						end.piece = queen;
					} else if (newPiece.equals("Rook")) // transform pawn to
														// rook
					{
						ArrayList <IMove> rookMoves = new ArrayList<>();
						rookMoves.add(new RookMoves());
						Rook rook = new Rook(this, end.piece.getPlayer(), rookMoves);
						rook.setChessboard(end.piece.getChessboard());
						rook.setPlayer(end.piece.getPlayer());
						rook.setSquare(end.piece.getSquare());
						end.piece = rook;
					} else if (newPiece.equals("Bishop")) // transform pawn to
															// bishop
					{	ArrayList <IMove> bishopMoves = new ArrayList<>();
						bishopMoves.add(new BishopMoves());
						Bishop bishop = new Bishop(this, end.piece.getPlayer(), bishopMoves);
						bishop.setChessboard(end.piece.getChessboard());
						bishop.setPlayer(end.piece.getPlayer());
						bishop.setSquare(end.piece.getSquare());
						end.piece = bishop;
					} else // transform pawn to knight
					{	ArrayList <IMove> knightMoves = new ArrayList<>();
						knightMoves.add(new KnightMoves());
						Knight knight = new Knight(this, end.piece.getPlayer(), knightMoves);
						knight.setChessboard(end.piece.getChessboard());
						knight.setPlayer(end.piece.getPlayer());
						knight.setSquare(end.piece.getSquare());
						end.piece = knight;
					}
					promotedPiece = end.piece;
				}
			}
		} else if (!end.piece.getName().equals("Pawn")) {
			twoSquareMovedPawn = null; // erase last saved move (for En passant)
		}
		// }

		if (refresh) {
			this.unselect();// unselect square
			display.repaint();
		}

		if (clearForwardHistory) {
			moves_history.clearMoveForwardStack();
			moves_history.addMove(tempBegin, tempEnd, true, wasCastling, wasEnPassant, promotedPiece);
		} else {
			moves_history.addMove(tempBegin, tempEnd, false, wasCastling, wasEnPassant, promotedPiece);
		}
	}/* endOf-move()- */

	public boolean redo() {
		return redo(true);
	}

	public boolean redo(boolean refresh) {
		if (this.settings.gameType == Settings.gameTypes.local) // redo only for
																// local game
		{
			Move first = moves_history.redo();

			Square from = null;
			Square to = null;

			if (first != null) {
				from = first.getFrom();
				to = first.getTo();

				this.move(this.initial.getSquares()[from.getPozX()][from.getPozY()],
						this.initial.getSquares()[to.getPozX()][to.getPozY()], true, false);
				if (first.getPromotedPiece() != null) {
					Pawn pawn = (Pawn) this.initial.getSquares()[to.getPozX()][to.getPozY()].piece;
					pawn.setSquare(null);

					this.initial.getSquares()[to.getPozX()][to.getPozY()].piece = first.getPromotedPiece();
					Piece promoted = this.initial.getSquares()[to.getPozX()][to.getPozY()].piece;
					promoted.setSquare(this.initial.getSquares()[to.getPozX()][to.getPozY()]);
				}
				return true;
			}

		}
		return false;
	}

	public boolean undo() {
		return undo(true);
	}

	public synchronized boolean undo(boolean refresh) // undo last move
	{
		Move last = moves_history.undo();

		if (last != null && last.getFrom() != null) {
			Square begin = last.getFrom();
			Square end = last.getTo();
			try {
				Piece moved = last.getMovedPiece();
				this.initial.getSquares()[begin.getPozX()][begin.getPozY()].piece = moved;

				moved.setSquare(this.initial.getSquares()[begin.getPozX()][begin.getPozY()]);

				Piece taken = last.getTakenPiece();
				if (last.getCastlingMove() != castling.none) {
					Piece rook = null;
					if (last.getCastlingMove() == castling.shortCastling) {
						rook = this.initial.getSquares()[end.getPozX() - 1][end.getPozY()].piece;
						this.initial.getSquares()[7][begin.getPozY()].piece = rook;
						rook.setSquare(this.initial.getSquares()[7][begin.getPozY()]);
						this.initial.getSquares()[end.getPozX() - 1][end.getPozY()].piece = null;
					} else {
						rook = this.initial.getSquares()[end.getPozX() + 1][end.getPozY()].piece;
						this.initial.getSquares()[0][begin.getPozY()].piece = rook;
						rook.setSquare(this.initial.getSquares()[0][begin.getPozY()]);
						this.initial.getSquares()[end.getPozX() + 1][end.getPozY()].piece = null;
					}
					((King) moved).wasMotion = false;
					((Rook) rook).setWasMotion(false);
					breakCastling = false;
				} else if (moved.getName().equals("Rook")) {
					((Rook) moved).setWasMotion(false);
				} else if (moved.getName().equals("Pawn") && last.wasEnPassant()) {
					Pawn pawn = (Pawn) last.getTakenPiece();
					this.initial.getSquares()[end.getPozX()][begin.getPozY()].piece = pawn;
					pawn.setSquare(this.initial.getSquares()[end.getPozX()][begin.getPozY()]);

				} else if (moved.getName().equals("Pawn") && last.getPromotedPiece() != null) {
					Piece promoted = this.initial.getSquares()[end.getPozX()][end.getPozY()].piece;
					promoted.setSquare(null);
					this.initial.getSquares()[end.getPozX()][end.getPozY()].piece = null;
				}

				// check one more move back for en passant
				Move oneMoveEarlier = moves_history.getLastMoveFromHistory();
				if (oneMoveEarlier != null && oneMoveEarlier.wasPawnTwoFieldsMove()) {
					Piece canBeTakenEnPassant = this.initial.getSquares()[oneMoveEarlier.getTo()
							.getPozX()][oneMoveEarlier.getTo().getPozY()].piece;
					if (canBeTakenEnPassant.getName().equals("Pawn")) {
						this.twoSquareMovedPawn = (Pawn) canBeTakenEnPassant;
					}
				}

				if (taken != null && !last.wasEnPassant()) {
					this.initial.getSquares()[end.getPozX()][end.getPozY()].piece = taken;
					taken.setSquare(this.initial.getSquares()[end.getPozX()][end.getPozY()]);
				} else {
					this.initial.getSquares()[end.getPozX()][end.getPozY()].piece = null;
				}

				if (refresh) {
					this.unselect();// unselect square
					display.repaint();
				}

			} catch (java.lang.ArrayIndexOutOfBoundsException exc) {
				return false;
			} catch (java.lang.NullPointerException exc) {
				return false;
			}

			return true;
		} else {
			return false;
		}
	}

	public ChessboardDisplay getDisplay() {
		return display;
	}

	public void setPieces( Player[] players) {
		initial.setPieces(players[0], players[1]);
	}

	public Square[][] getSquares() {
		return initial.getSquares();
	}

	public SquareBoardInitialization getInitial() {
		return initial;
	}

	public Square getActiveSquare() {
		return display.activeSquare;
	}

	public void setActiveSquare(Square sq) {
		display.activeSquare = sq;
	}

	public King getKing(Player player) {
		if (player.getColor().equals(Player.colors.white)) {
			return initial.kingWhite;
		} else if (player.getColor().equals(Player.colors.black)) {
			return initial.kingBlack;
		}
		return null;
	}

	public Piece getTwoSquareMovedPawn() {
		return twoSquareMovedPawn;
	}
}
=====================================================================
Found a 552 line (2738 tokens) duplication in the following files: 
Starting at line 54 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Game.java
Starting at line 54 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Game.java

public class Game extends JPanel implements MouseListener, ComponentListener {

	private Settings settings;
	public boolean blockedChessboard;
	private IChessboard chessboard;
	private Player activePlayer;
	private GameClock gameClock;
	private Client client;
	private MovesTable moves;
	private Chat chat;

	public Game() {

		moves = new MovesTable(this);
		settings = new Settings();
		chessboard = new CircleBoard(this.getSettings(), this.getMoves());

		initializeChessboardPanel();
		initializeClock();
		initializeMovesHistory();
		initializeChat();

		this.blockedChessboard = false;
		this.setLayout(null);
		this.addComponentListener(this);
		this.setDoubleBuffered(true);
	}

	private void initializeChat() {
		this.setChat(new Chat());
		this.getChat().setSize(new Dimension(380, 100));
		this.getChat().setLocation(new Point(0, 500));
		this.getChat().setMinimumSize(new Dimension(400, 100));
	}

	private void initializeMovesHistory() {
		JScrollPane movesHistory = this.getMoves().getScrollPane();
		movesHistory.setSize(new Dimension(180, 350));
		movesHistory.setLocation(new Point(500, 121));
		this.add(movesHistory);
	}

	private void initializeClock() {
		setGameClock(new GameClock(this));
		getGameClock().setSize(new Dimension(200, 100));
		getGameClock().setLocation(new Point(500, 0));
		this.add(getGameClock());
	}

	private void initializeChessboardPanel() {
		chessboard.getDisplay().setVisible(true);
		chessboard.getDisplay().addMouseListener(this);
		chessboard.getDisplay().setLocation(new Point(0, 0));
		this.add(chessboard.getDisplay());
	}

	/**
	 * Method to save actual state of game
	 * 
	 * @param path
	 *            address of place where game will be saved
	 */
	public void saveGame(File path) {
		File file = path;
		FileWriter fileW = null;
		try {
			fileW = new FileWriter(file);
		} catch (java.io.IOException exc) {
			// System.err.println("error creating fileWriter: " + exc);
			LogToFile.log(exc, "Error", "error creating fileWriter: " + exc.getMessage());
			JOptionPane.showMessageDialog(this, Settings.lang("error_writing_to_file") + ": " + exc);
			return;
		}
		String str = new String("");
		String info = new String("[Event \"Game\"]\n[Date \"" + Calendar.YEAR + "." + Calendar.MONTH + 1 + "."
				+ Calendar.DAY_OF_MONTH + "\"]\n" + "[White \"" + this.getSettings().playerWhite.name + "\"]\n[Black \""
				+ this.getSettings().playerBlack.name + "\"]\n\n");
		str += info;
		str += this.getMoves().getMovesInString();
		try {
			fileW.write(str);
			fileW.flush();
			fileW.close();
		} catch (java.io.IOException exc) {
			// System.out.println("error writing to file: " + exc);
			LogToFile.log(exc, "Error", "error writing to file: " + exc.getMessage());
			JOptionPane.showMessageDialog(this, Settings.lang("error_writing_to_file") + ": " + exc);
			return;
		}
		JOptionPane.showMessageDialog(this, Settings.lang("game_saved_properly"));
	}

	/**
	 * Loading game method(loading game state from the earlier saved file)
	 * 
	 * @param file
	 *            File where is saved game
	 */

	static public void loadGame(File file) {
		FileReader fileR = null;
		try {
			fileR = new FileReader(file);
		} catch (java.io.IOException exc) {
			// System.out.println("Something wrong reading file: " + exc);
			LogToFile.log(exc, "Error", "Something wrong reading file: " + exc.getMessage());
			return;
		}
		BufferedReader br = new BufferedReader(fileR);
		String tempStr = new String();
		String blackName, whiteName, blueName;
		try {
			tempStr = getLineWithVar(br, new String("[White"));
			whiteName = getValue(tempStr);
			tempStr = getLineWithVar(br, new String("[Black"));
			blackName = getValue(tempStr);
			tempStr = getLineWithVar(br, new String("[Blue"));
			blueName = getValue(tempStr);
			tempStr = getLineWithVar(br, new String("1."));
		} catch (ReadGameError err) {
			// System.out.println("Error reading file: " + err);
			LogToFile.log(err, "Error", "Error reading file: " + err.getMessage());
			return;
		}
		Game newGUI = JChessApp.getJcv().addNewTab(whiteName + " vs. " + blackName + " vs. " + blueName);
		Settings locSetts = newGUI.getSettings();
		locSetts.playerBlack.name = blackName;
		locSetts.playerWhite.name = whiteName;
		locSetts.playerBlue.name = blueName;

		locSetts.playerBlack.setType(Player.playerTypes.localUser);
		locSetts.playerWhite.setType(Player.playerTypes.localUser);
		locSetts.playerBlue.setType(Player.playerTypes.localUser);

		locSetts.gameMode = Settings.gameModes.loadGame;
		locSetts.gameType = Settings.gameTypes.local;

		newGUI.newGame();
		// newGUI.blockedChessboard = true;
		newGUI.getMoves().setMoves(tempStr);
		// newGUI.blockedChessboard = false;
		newGUI.chessboard.getDisplay().repaint();
	}

	/**
	 * Method checking in with of line there is an error
	 * 
	 * @param br
	 *            BufferedReader class object to operate on
	 * @param srcStr
	 *            String class object with text which variable you want to get
	 *            in file
	 * @return String with searched variable in file (whole line)
	 * @throws ReadGameError
	 *             class object when something goes wrong when reading file
	 */
	static public String getLineWithVar(BufferedReader br, String srcStr) throws ReadGameError {
		String str = new String();
		while (true) {
			try {
				str = br.readLine();
			} catch (java.io.IOException exc) {
				// System.out.println("Something wrong reading file: " + exc);
				LogToFile.log(exc, "Error", "Something wrong reading file: " + exc.getMessage());
			}
			if (str == null) {
				throw new ReadGameError();
			}
			if (str.startsWith(srcStr)) {
				return str;
			}
		}
	}

	/**
	 * Method to get value from loaded txt line
	 * 
	 * @param line
	 *            Line which is read
	 * @return result String with loaded value
	 * @throws ReadGameError
	 *             object class when something goes wrong
	 */
	static public String getValue(String line) throws ReadGameError {
		// System.out.println("getValue called with: "+line);
		int from = line.indexOf("\"");
		int to = line.lastIndexOf("\"");
		int size = line.length() - 1;
		String result = new String();
		if (to < from || from > size || to > size || to < 0 || from < 0) {
			throw new ReadGameError();
		}
		try {
			result = line.substring(from + 1, to);
		} catch (java.lang.StringIndexOutOfBoundsException exc) {
			// System.out.println("error getting value: " + exc);
			LogToFile.log(exc, "Error", "error getting value: " + exc.getMessage());
			return "none";
		}
		return result;
	}

	/**
	 * Method to Start new game
	 *
	 */
	public void newGame() {
		chessboard.setPieces(
				new Player[] { getSettings().playerWhite, getSettings().playerBlack, getSettings().playerBlue });

		activePlayer = getSettings().playerWhite;
		if (activePlayer.playerType != Player.playerTypes.localUser) {
			this.blockedChessboard = true;
		}
		Game activeGame = JChessApp.getJcv().getActiveTabGame();

		activeGame.chessboard.getDisplay().repaint();
		activeGame.repaint();
		chessboard.getDisplay().repaint();
		this.repaint();
	}

	/**
	 * Method to end game
	 * 
	 * @param message
	 *            what to show player(s) at end of the game (for example "draw",
	 *            "black wins" etc.)
	 */
	public void endGame(String message) {
		this.blockedChessboard = true;
		System.out.println(message);
		JOptionPane.showMessageDialog(null, message);
	}

	/**
	 * Method to switch active players after move
	 */
	public void switchActive() {
		if (activePlayer == getSettings().playerWhite) {
			activePlayer = getSettings().playerBlack;
		} else if (activePlayer == getSettings().playerBlack) {
			activePlayer = getSettings().playerBlue;
		} else if (activePlayer == getSettings().playerBlue) {
			activePlayer = getSettings().playerWhite;
		}

		this.getGameClock().switch_clocks();
	}

	/**
	 * Method of getting the active player
	 * 
	 * @return player The player which have a move
	 */
	public Player getActivePlayer() {
		return this.activePlayer;
	}

	/**
	 * Method to go to next move (checks if game is local/network etc.)
	 */
	public void nextMove() {
		switchActive();

		System.out.println("next move, active player: " + activePlayer.name + ", color: "
				+ activePlayer.getColor().name() + ", type: " + activePlayer.playerType.name());
		if (activePlayer.playerType == Player.playerTypes.localUser) {
			this.blockedChessboard = false;
		} else if (activePlayer.playerType == Player.playerTypes.networkUser) {
			this.blockedChessboard = true;
		} else if (activePlayer.playerType == Player.playerTypes.computer) {
			// ? if nothing here then delete
		}
	}

	/**
	 * Method to simulate Move to check if it's correct etc. (usable for network
	 * game).
	 * 
	 * @param beginX
	 *            from which X (on chessboard) move starts
	 * @param beginY
	 *            from which Y (on chessboard) move starts
	 * @param endX
	 *            to which X (on chessboard) move go
	 * @param endY
	 *            to which Y (on chessboard) move go
	 */
	public boolean simulateMove(int beginX, int beginY, int endX, int endY) {
		try {
			chessboard.select(chessboard.getSquares()[beginX][beginY]);
			if (chessboard.getActiveSquare().piece.allMoves(false).indexOf(chessboard.getSquares()[endX][endY]) != -1) // move
			{
				chessboard.move(chessboard.getSquares()[beginX][beginY], chessboard.getSquares()[endX][endY]);
			} else {
				System.out.println("Bad move");
				return false;
			}
			chessboard.unselect();
			nextMove();

			return true;

		} catch (StringIndexOutOfBoundsException exc) {
			return false;
		} catch (ArrayIndexOutOfBoundsException exc) {
			return false;
		} catch (NullPointerException exc) {
			return false;
		} finally {
			Logger.getLogger(Game.class.getName()).log(Level.SEVERE, null, "ERROR");
		}
	}

	public boolean undo() {
		boolean status = false;

		if (this.getSettings().gameType == Settings.gameTypes.local) {
			status = chessboard.undo();
			if (status) {
				this.switchActive();
			} else {
				chessboard.getDisplay().repaint();// repaint for sure
			}
		} else if (this.getSettings().gameType == Settings.gameTypes.network) {
			this.getClient().sendUndoAsk();
			status = true;
		}
		return status;
	}

	public boolean rewindToBegin() {
		boolean result = false;

		if (this.getSettings().gameType == Settings.gameTypes.local) {
			while (chessboard.undo()) {
				result = true;
			}
		} else {
			throw new UnsupportedOperationException(Settings.lang("operation_supported_only_in_local_game"));
		}

		return result;
	}

	public boolean rewindToEnd() throws UnsupportedOperationException {
		boolean result = false;

		if (this.getSettings().gameType == Settings.gameTypes.local) {
			while (chessboard.redo()) {
				result = true;
			}
		} else {
			throw new UnsupportedOperationException(Settings.lang("operation_supported_only_in_local_game"));
		}

		return result;
	}

	public boolean redo() {
		boolean status = chessboard.redo();
		if (this.getSettings().gameType == Settings.gameTypes.local) {
			if (status) {
				this.nextMove();
			} else {
				chessboard.getDisplay().repaint();// repaint for sure
			}
		} else {
			throw new UnsupportedOperationException(Settings.lang("operation_supported_only_in_local_game"));
		}
		return status;
	}

	public void mousePressed(MouseEvent event) {
		if (event.getButton() == MouseEvent.BUTTON3) // right button
		{
			this.undo();
		} else if (event.getButton() == MouseEvent.BUTTON2 && getSettings().gameType == Settings.gameTypes.local) {
			this.redo();
		} else if (event.getButton() == MouseEvent.BUTTON1) // left button
		{

			if (!blockedChessboard) {
				try {
					int x = event.getX();// get X position of mouse
					int y = event.getY();// get Y position of mouse

					Square sq = chessboard.getSquare(x, y);
					if ((sq == null && chessboard.getActiveSquare() == null)
							|| (this.chessboard.getActiveSquare() == null && sq.piece != null
									&& sq.piece.getPlayer() != this.activePlayer)) {
						return;
					}

					if (sq.piece != null && sq.piece.getPlayer() == this.activePlayer
							&& sq != chessboard.getActiveSquare()) {
						chessboard.unselect();
						chessboard.select(sq);
					} else if (chessboard.getActiveSquare() == sq) // unselect
					{
						chessboard.unselect();
					} else if (chessboard.getActiveSquare() != null && chessboard.getActiveSquare().piece != null
							&& chessboard.getActiveSquare().piece.allMoves(false).indexOf(sq) != -1) // move
					{
						if (getSettings().gameType == Settings.gameTypes.local) {
							chessboard.move(chessboard.getActiveSquare(), sq);
						} else if (getSettings().gameType == Settings.gameTypes.network) {
							getClient().sendMove(chessboard.getActiveSquare().getPozX(),
									chessboard.getActiveSquare().getPozY(), sq.getPozX(), sq.getPozY());
							chessboard.move(chessboard.getActiveSquare(), sq);
						}

						chessboard.unselect();

						// switch player
						this.nextMove();

						// checkmate or stalemate
						King king = chessboard.getKing(this.activePlayer);

						switch (king.isCheckmatedOrStalemated()) {
						case 1:
							this.endGame("Checkmate! " + king.getPlayer().getColor().toString() + " player lose!");
							break;
						case 2:
							this.endGame("Stalemate! Draw!");
							break;
						}
					}

				} catch (NullPointerException exc) {
					// System.err.println(exc.getMessage());
					LogToFile.log(exc, "Error", "NullPointerException " + exc.getMessage());
					chessboard.getDisplay().repaint();
					return;
				}
			} else if (blockedChessboard) {
				// System.out.println("Chessboard is blocked");
				LogToFile.log(null, "INFO", "Chessboard is blocked");
			}
		}
		// chessboard.repaint();
	}

	public void componentResized(ComponentEvent e) {
		int height = this.getHeight() >= this.getWidth() ? this.getWidth() : this.getHeight();
		int chess_height = (int) Math.round((height * 0.8) / 8) * 8;
		this.chessboard.getDisplay().resizeChessboard((int) chess_height);
		chess_height = this.chessboard.getDisplay().getHeight();
		this.getMoves().getScrollPane().setLocation(new Point(chess_height + 5, 100));
		this.getMoves().getScrollPane().setSize(this.getMoves().getScrollPane().getWidth(), chess_height - 100);
		this.getGameClock().setLocation(new Point(chess_height + 5, 0));
		if (this.getChat() != null) {
			this.getChat().setLocation(new Point(0, chess_height + 5));
			this.getChat().setSize(new Dimension(chess_height, this.getHeight() - (chess_height + 5)));
		}
	}

	public Settings getSettings() {
		return settings;
	}

	public void setSettings(Settings settings) {
		this.settings = settings;
	}

	public Chat getChat() {
		return chat;
	}

	public void setChat(Chat chat) {
		this.chat = chat;
	}

	public Client getClient() {
		return client;
	}

	public void setClient(Client client) {
		this.client = client;
	}

	public IChessboard getChessboard() {
		return chessboard;
	}

	public void setChessboard(SquareBoard chessboard) {
		this.chessboard = chessboard;
	}

	public MovesTable getMoves() {
		return moves;
	}

	public void setMoves(MovesTable moves) {
		this.moves = moves;
	}

	public GameClock getGameClock() {
		return gameClock;
	}

	public void setGameClock(GameClock gameClock) {
		this.gameClock = gameClock;
	}

	@Override
	public void componentMoved(ComponentEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void componentShown(ComponentEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void componentHidden(ComponentEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub

	}
}

class ReadGameError extends Exception {
}
=====================================================================
Found a 555 line (2734 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\MovesTable.java
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\MovesTable.java

public class MovesTable extends AbstractTableModel {

	private ArrayList<String> move = new ArrayList<String>();
	private int columnsNum = 3;
	private int rowsNum = 0;
	private String[] names = new String[] { Settings.lang("white"), Settings.lang("black"), Settings.lang("blue") };
	private MyDefaultTableModel tableModel;
	private JScrollPane scrollPane;
	private JTable table;
	private boolean enterBlack = false;

	protected Stack<Move> moveBackStack = new Stack<Move>();
	protected Stack<Move> moveForwardStack = new Stack<Move>();
	private Game game;

	public enum castling {
		none, shortCastling, longCastling
	}

	public MovesTable(Game game) {
		super();
		this.tableModel = new MyDefaultTableModel();
		this.table = new JTable(this.tableModel);
		this.scrollPane = new JScrollPane(this.table);
		this.scrollPane.setMaximumSize(new Dimension(100, 100));
		this.table.setMinimumSize(new Dimension(100, 100));
		this.tableModel.addColumn(this.names[0]);
		this.tableModel.addColumn(this.names[1]);
		this.addTableModelListener(null);
		this.tableModel.addTableModelListener(null);
		this.scrollPane.setAutoscrolls(true);

		this.game = game;// I think that this class should not have access to
							// the game!

	}

	@Override
	public String getValueAt(int x, int y) {
		return this.move.get((y * 2) - 1 + (x - 1));
	}

	@Override
	public int getRowCount() {
		return this.rowsNum;
	}

	@Override
	public int getColumnCount() {
		return this.columnsNum;
	}

	protected void addRow() {
		this.tableModel.addRow(new String[2]);
	}

	protected void addCastling(String move) {
		this.move.remove(this.move.size() - 1);// remove last element (move of
												// Rook)
		if (!this.enterBlack) {
			this.tableModel.setValueAt(move, this.tableModel.getRowCount() - 1, 1);// replace
																					// last
																					// value
		} else {
			this.tableModel.setValueAt(move, this.tableModel.getRowCount() - 1, 0);// replace
																					// last
																					// value
		}
		this.move.add(move);// add new move (O-O or O-O-O)
	}

	@Override
	public boolean isCellEditable(int a, int b) {
		return false;
	}

	/**
	 * Method of adding new moves to the table
	 * 
	 * @param str
	 *            String which in is saved player move
	 */
	protected void addMove2Table(String str) {
		try {
			if (!this.enterBlack) {
				this.addRow();
				this.rowsNum = this.tableModel.getRowCount() - 1;
				this.tableModel.setValueAt(str, rowsNum, 0);
			} else {
				this.tableModel.setValueAt(str, rowsNum, 1);
				this.rowsNum = this.tableModel.getRowCount() - 1;
			}
			this.enterBlack = !this.enterBlack;
			this.table.scrollRectToVisible(table.getCellRect(table.getRowCount() - 1, 0, true));// scroll
																								// to
																								// down

		} catch (java.lang.ArrayIndexOutOfBoundsException exc) {
			if (this.rowsNum > 0) {
				this.rowsNum--;
				addMove2Table(str);
			}
		}
	}

	/**
	 * Method of adding new move
	 * 
	 * @param move
	 *            String which in is capt player move
	 */
	public void addMove(String move) {
		if (isMoveCorrect(move)) {
			this.move.add(move);
			this.addMove2Table(move);
			this.moveForwardStack.clear();
		}

	}
	
	public void addMove(Square begin, Square end, boolean registerInHistory, castling castlingMove,
			boolean wasEnPassant, Piece promotedPiece) {

		String locMove = new String(begin.piece.getSymbol());

		if (game.getSettings().upsideDown) {
			locMove += Character.toString((char) ((SquareBoard.bottom - begin.getPozX()) + 97));// add
																								// letter
																								// of
																								// Square
																								// from
																								// which
																								// move
																								// was
																								// made
			locMove += Integer.toString(begin.getPozY() + 1);// add number of
																// Square from
																// which move
																// was made
		} else {
			locMove += Character.toString((char) (begin.getPozX() + 97));// add
																			// letter
																			// of
																			// Square
																			// from
																			// which
																			// move
																			// was
																			// made
			locMove += Integer.toString(8 - begin.getPozY());// add number of
																// Square from
																// which move
																// was made
		}

		if (end.piece != null) {
			locMove += "x";// take down opponent piece
		} else {
			locMove += "-";// normal move
		}

		if (game.getSettings().upsideDown) {
			locMove += Character.toString((char) ((SquareBoard.bottom - end.getPozX()) + 97));// add
																								// letter
																								// of
																								// Square
																								// to
																								// which
																								// move
																								// was
																								// made
			locMove += Integer.toString(end.getPozY() + 1);// add number of
															// Square to which
															// move was made
		} else {
			locMove += Character.toString((char) (end.getPozX() + 97));// add
																		// letter
																		// of
																		// Square
																		// to
																		// which
																		// move
																		// was
																		// made
			locMove += Integer.toString(8 - end.getPozY());// add number of
															// Square to which
															// move was made
		}

		if (begin.piece.getSymbol().equals("") && begin.getPozX() - end.getPozX() != 0 && end.piece == null) {
			locMove += "(e.p)";// pawn take down opponent en passant
			wasEnPassant = true;
		}
		if ((!this.enterBlack && this.game.getChessboard().getKing(game.getSettings().playerBlack).isChecked())
				|| (this.enterBlack && this.game.getChessboard().getKing(game.getSettings().playerWhite).isChecked())) {// if
																							// checked

			if ((!this.enterBlack && this.game.getChessboard().getKing(game.getSettings().playerBlack).isCheckmatedOrStalemated() == 1)
					|| (this.enterBlack && this.game.getChessboard().getKing(game.getSettings().playerWhite).isCheckmatedOrStalemated() == 1)) {// check
																													// if
																													// checkmated
				locMove += "#";// check mate
			} else {
				locMove += "+";// check
			}
		}
		if (castlingMove == castling.shortCastling) {
			this.addCastling("0-0");
		} else if (castlingMove == castling.longCastling) {
			this.addCastling("0-0-0");
		} else {
			this.move.add(locMove);
			this.addMove2Table(locMove);
		}
		this.scrollPane.scrollRectToVisible(new Rectangle(0, this.scrollPane.getHeight() - 2, 1, 1));

		if (registerInHistory) {
			this.moveBackStack.add(new Move(new Square(begin), new Square(end), begin.piece, end.piece, castlingMove,
					wasEnPassant, promotedPiece));
		}
	}

	public void clearMoveForwardStack() {
		this.moveForwardStack.clear();
	}

	public JScrollPane getScrollPane() {
		return this.scrollPane;
	}

	public ArrayList<String> getMoves() {
		return this.move;
	}

	public synchronized Move getLastMoveFromHistory() {
		try {
			Move last = this.moveBackStack.get(this.moveBackStack.size() - 1);
			return last;
		} catch (java.lang.ArrayIndexOutOfBoundsException exc) {
			return null;
		}
	}

	public synchronized Move getNextMoveFromHistory() {
		try {
			Move next = this.moveForwardStack.get(this.moveForwardStack.size() - 1);
			return next;
		} catch (java.lang.ArrayIndexOutOfBoundsException exc) {
			return null;
		}

	}

	public synchronized Move undo() {
		try {
			Move last = this.moveBackStack.pop();
			if (last != null) {
				if (this.game.getSettings().gameType == Settings.gameTypes.local) // moveForward
																					// /
																					// redo
																					// available
																					// only
																					// for
																					// local
																					// game
				{
					this.moveForwardStack.push(last);
				}
				if (this.enterBlack) {
					this.tableModel.setValueAt("", this.tableModel.getRowCount() - 1, 0);
					this.tableModel.removeRow(this.tableModel.getRowCount() - 1);

					if (this.rowsNum > 0) {
						this.rowsNum--;
					}
				} else {
					if (this.tableModel.getRowCount() > 0) {
						this.tableModel.setValueAt("", this.tableModel.getRowCount() - 1, 1);
					}
				}
				this.move.remove(this.move.size() - 1);
				this.enterBlack = !this.enterBlack;
			}
			return last;
		} catch (java.util.EmptyStackException exc) {
			this.enterBlack = false;
			return null;
		} catch (java.lang.ArrayIndexOutOfBoundsException exc) {
			return null;
		}
	}

	public synchronized Move redo() {
		try {
			if (this.game.getSettings().gameType == Settings.gameTypes.local) {
				Move first = this.moveForwardStack.pop();
				this.moveBackStack.push(first);

				return first;
			}
			return null;
		} catch (java.util.EmptyStackException exc) {
			return null;
		}

	}

	/**
	 * Method with is checking is the move is correct
	 * 
	 * @param move
	 *            String which in is capt player move
	 * @return boolean 1 if the move is correct, else 0
	 */
	
	static public boolean isMoveCorrect(String move) {
		if (move.equals("O-O") || move.equals("O-O-O")) {
			return true;
		}
		try {
			int from = 0;
			int sign = move.charAt(from);// get First
			switch (sign) // if sign of piece, get next
			{
			case 66: // B like Bishop
			case 75: // K like King
			case 78: // N like Knight
			case 81: // Q like Queen
			case 82:
				from = 1;
				break; // R like Rook
			}
			sign = move.charAt(from);
			System.out.println(sign);
			if (sign < 97 || sign > 104) // if lower than 'a' or higher than 'h'
			{
				return false;
			}
			sign = move.charAt(from + 1);
			if (sign < 49 || sign > 56) // if lower than '1' or higher than '8'
			{
				return false;
			}
			if (move.length() > 3) // if is equal to 3 or lower, than it's in
									// short notation, no more checking needed
			{
				sign = move.charAt(from + 2);
				if (sign != 45 && sign != 120) // if isn't '-' and 'x'
				{
					return false;
				}
				sign = move.charAt(from + 3);
				if (sign < 97 || sign > 104) // if lower than 'a' or higher than
												// 'h'
				{
					return false;
				}
				sign = move.charAt(from + 4);
				if (sign < 49 || sign > 56) // if lower than '1' or higher than
											// '8'
				{
					return false;
				}
			}
		} catch (java.lang.StringIndexOutOfBoundsException exc) {
			return false;
		}

		return true;
	}

	public void addMoves(ArrayList<String> list) {
		for (String singleMove : list) {
			if (isMoveCorrect(singleMove)) {
				this.addMove(singleMove);
			}
		}
	}

	/**
	 * Method of getting the moves in string
	 * 
	 * @return str String which in is capt player move
	 */

	public String getMovesInString() {
		int n = 1;
		int i = 0;
		String str = new String();
		for (String locMove : this.getMoves()) {
			if (i % 2 == 0) {
				str += n + ". ";
				n += 1;
			}
			str += locMove + " ";
			i += 1;
		}
		return str;
	}

	/**
	 * Method to set all moves from String with validation test (useful for
	 * network game)
	 * 
	 * @param moves
	 *            String to set in String like PGN with full-notation format
	 */

	public void setMoves(String moves) {
		int from = 0;
		int to = 0;
		int n = 1;
		ArrayList<String> tempArray = new ArrayList<String>();
		int tempStrSize = moves.length() - 1;
		while (true) {
			from = moves.indexOf(" ", from);
			to = moves.indexOf(" ", from + 1);
			// System.out.println(from+">"+to);
			try {
				tempArray.add(moves.substring(from + 1, to).trim());
			} catch (java.lang.StringIndexOutOfBoundsException exc) {
				//System.out.println("error parsing file to load: " + exc);
				LogToFile.log(exc, "Error", "error parsing file to load: " + exc.getMessage());
				break;
			}
			if (n % 2 == 0) {
				from = moves.indexOf(".", to);
				if (from < to) {
					break;
				}
			} else {
				from = to;
			}
			n += 1;
			if (from > tempStrSize || to > tempStrSize) {
				break;
			}
		}
		for (String locMove : tempArray) // test if moves are written correctly
		{
			if (!MovesTable.isMoveCorrect(locMove.trim())) // if not
			{
				JOptionPane.showMessageDialog(this.game, Settings.lang("invalid_file_to_load") + move);
				return;// show message and finish reading game
			}
		}
		boolean canMove = false;
		for (String locMove : tempArray) {
			if (locMove.equals("O-O-O") || locMove.equals("O-O")) // if castling
			{
				int[] values = new int[4];
				if (locMove.equals("O-O-O")) {
					if (this.game.getActivePlayer().getColor() == Player.colors.black) // if
																						// black
																						// turn
					{
						values = new int[] { 4, 0, 2, 0 };// move value for
															// castling (King
															// move)
					} else {
						values = new int[] { 4, 7, 2, 7 };// move value for
															// castling (King
															// move)
					}
				} else if (locMove.equals("O-O")) // if short castling
				{
					if (this.game.getActivePlayer().getColor() == Player.colors.black) // if
																						// black
																						// turn
					{
						values = new int[] { 4, 0, 6, 0 };// move value for
															// castling (King
															// move)
					} else {
						values = new int[] { 4, 7, 6, 7 };// move value for
															// castling (King
															// move)
					}
				}
				canMove = this.game.simulateMove(values[0], values[1], values[2], values[3]);

				if (!canMove) // if move is illegal
				{
					JOptionPane.showMessageDialog(this.game, Settings.lang("illegal_move_on") + locMove);
					return;// finish reading game and show message
				}
				continue;
			}
			from = 0;
			int num = locMove.charAt(from);
			if (num <= 90 && num >= 65) {
				from = 1;
			}
			int xFrom = 9; // set to higher value than chessboard has fields, to
							// cause error if piece won't be found
			int yFrom = 9;
			int xTo = 9;
			int yTo = 9;
			boolean pieceFound = false;
			if (locMove.length() <= 3) {
				Square[][] squares = this.game.getChessboard().getSquares();
				xTo = locMove.charAt(from) - 97;// from ASCII
				yTo = SquareBoard.bottom - (locMove.charAt(from + 1) - 49);// from
																			// ASCII
				for (int i = 0; i < squares.length && !pieceFound; i++) {
					for (int j = 0; j < squares[i].length && !pieceFound; j++) {
						if (squares[i][j].piece == null || this.game.getActivePlayer().getColor() != squares[i][j].piece
								.getPlayer().getColor()) {
							continue;
						}
						ArrayList<Square> pieceMoves = squares[i][j].piece.allMoves(false);
						for (Object square : pieceMoves) {
							Square currSquare = (Square) square;
							if (currSquare.getPozX() == xTo && currSquare.getPozY() == yTo) {
								xFrom = squares[i][j].piece.getSquare().getPozX();
								yFrom = squares[i][j].piece.getSquare().getPozY();
								pieceFound = true;
							}
						}
					}
				}
			} else {
				xFrom = locMove.charAt(from) - 97;// from ASCII
				yFrom = SquareBoard.bottom - (locMove.charAt(from + 1) - 49);// from
																			// ASCII
				xTo = locMove.charAt(from + 3) - 97;// from ASCII
				yTo = SquareBoard.bottom - (locMove.charAt(from + 4) - 49);// from
																			// ASCII
			}
			canMove = this.game.simulateMove(xFrom, yFrom, xTo, yTo);
			if (!canMove) // if move is illegal
			{
				JOptionPane.showMessageDialog(this.game, Settings.lang("illegal_move_on") + locMove);
				this.game.getChessboard().unselect();
				return;// finish reading game and show message
			}
		}
	}
}
/*
 * Overriding DefaultTableModel and isCellEditable method (history cannot be
 * edited by player)
 */

class MyDefaultTableModel extends DefaultTableModel {

	MyDefaultTableModel() {
		super();
	}

	@Override
	public boolean isCellEditable(int a, int b) {
		return false;
	}
}
=====================================================================
Found a 308 line (2258 tokens) duplication in the following files: 
Starting at line 227 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 227 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java

	private void initComponents() {

		mainPanel = new javax.swing.JPanel();
		gamesPane = new main.java.gui.JChessTabbedPane();
		menuBar = new javax.swing.JMenuBar();
		javax.swing.JMenu fileMenu = new javax.swing.JMenu();
		newGameItem = new javax.swing.JMenuItem();
		loadGameItem = new javax.swing.JMenuItem();
		saveGameItem = new javax.swing.JMenuItem();
		javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
		gameMenu = new javax.swing.JMenu();
		moveBackItem = new javax.swing.JMenuItem();
		moveForwardItem = new javax.swing.JMenuItem();
		rewindToBegin = new javax.swing.JMenuItem();
		rewindToEnd = new javax.swing.JMenuItem();
		optionsMenu = new javax.swing.JMenu();
		themeSettingsMenu = new javax.swing.JMenuItem();
		javax.swing.JMenu helpMenu = new javax.swing.JMenu();
		javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
		statusPanel = new javax.swing.JPanel();
		javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
		statusMessageLabel = new javax.swing.JLabel();
		statusAnimationLabel = new javax.swing.JLabel();
		progressBar = new javax.swing.JProgressBar();

		mainPanel.setMaximumSize(new java.awt.Dimension(800, 600));
		mainPanel.setMinimumSize(new java.awt.Dimension(800, 600));
		mainPanel.setName("mainPanel"); // NOI18N
		mainPanel.setPreferredSize(new java.awt.Dimension(800, 600));

		gamesPane.setName("gamesPane"); // NOI18N

		javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
		mainPanel.setLayout(mainPanelLayout);
		mainPanelLayout
				.setHorizontalGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(mainPanelLayout.createSequentialGroup().addContainerGap()
								.addComponent(gamesPane, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
								.addContainerGap()));
		mainPanelLayout.setVerticalGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(mainPanelLayout.createSequentialGroup().addContainerGap().addComponent(gamesPane,
						javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)));

		menuBar.setName("menuBar"); // NOI18N

		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application
				.getInstance(main.java.JChessApp.class).getContext().getResourceMap(JChessView.class);
		fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
		fileMenu.setName("fileMenu"); // NOI18N

		newGameItem.setAccelerator(
				javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
		newGameItem.setText(resourceMap.getString("newGameItem.text")); // NOI18N
		newGameItem.setName("newGameItem"); // NOI18N
		fileMenu.add(newGameItem);
		newGameItem.addActionListener(this);

		loadGameItem.setAccelerator(
				javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
		loadGameItem.setText(resourceMap.getString("loadGameItem.text")); // NOI18N
		loadGameItem.setName("loadGameItem"); // NOI18N
		fileMenu.add(loadGameItem);
		loadGameItem.addActionListener(this);

		saveGameItem.setAccelerator(
				javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
		saveGameItem.setText(resourceMap.getString("saveGameItem.text")); // NOI18N
		saveGameItem.setName("saveGameItem"); // NOI18N
		fileMenu.add(saveGameItem);
		saveGameItem.addActionListener(this);

		javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(main.java.JChessApp.class)
				.getContext().getActionMap(JChessView.class, this);
		exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
		exitMenuItem.setName("exitMenuItem"); // NOI18N
		fileMenu.add(exitMenuItem);

		menuBar.add(fileMenu);

		gameMenu.setText(resourceMap.getString("gameMenu.text")); // NOI18N
		gameMenu.setName("gameMenu"); // NOI18N

		moveBackItem.setAccelerator(
				javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
		moveBackItem.setText(resourceMap.getString("moveBackItem.text")); // NOI18N
		moveBackItem.setName("moveBackItem"); // NOI18N
		moveBackItem.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				moveBackItemMouseClicked(evt);
			}
		});
		moveBackItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				moveBackItemActionPerformed(evt);
			}
		});
		gameMenu.add(moveBackItem);

		moveForwardItem.setAccelerator(
				javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
		moveForwardItem.setText(resourceMap.getString("moveForwardItem.text")); // NOI18N
		moveForwardItem.setName("moveForwardItem"); // NOI18N
		moveForwardItem.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				moveForwardItemMouseClicked(evt);
			}
		});
		moveForwardItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				moveForwardItemActionPerformed(evt);
			}
		});
		gameMenu.add(moveForwardItem);

		rewindToBegin.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z,
				java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
		rewindToBegin.setText(resourceMap.getString("rewindToBegin.text")); // NOI18N
		rewindToBegin.setName("rewindToBegin"); // NOI18N
		rewindToBegin.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				rewindToBeginActionPerformed(evt);
			}
		});
		gameMenu.add(rewindToBegin);

		rewindToEnd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y,
				java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
		rewindToEnd.setText(resourceMap.getString("rewindToEnd.text")); // NOI18N
		rewindToEnd.setName("rewindToEnd"); // NOI18N
		rewindToEnd.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				rewindToEndActionPerformed(evt);
			}
		});
		gameMenu.add(rewindToEnd);

		menuBar.add(gameMenu);

		optionsMenu.setText(resourceMap.getString("optionsMenu.text")); // NOI18N
		optionsMenu.setName("optionsMenu"); // NOI18N

		themeSettingsMenu.setText(resourceMap.getString("themeSettingsMenu.text")); // NOI18N
		themeSettingsMenu.setName("themeSettingsMenu"); // NOI18N
		optionsMenu.add(themeSettingsMenu);
		themeSettingsMenu.addActionListener(this);

		menuBar.add(optionsMenu);

		helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
		helpMenu.setName("helpMenu"); // NOI18N

		aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
		aboutMenuItem.setName("aboutMenuItem"); // NOI18N
		helpMenu.add(aboutMenuItem);

		menuBar.add(helpMenu);

		statusPanel.setName("statusPanel"); // NOI18N

		statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

		statusMessageLabel.setName("statusMessageLabel"); // NOI18N

		statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

		progressBar.setName("progressBar"); // NOI18N

		javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
		statusPanel.setLayout(statusPanelLayout);
		statusPanelLayout.setHorizontalGroup(statusPanelLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
				.addGroup(statusPanelLayout.createSequentialGroup().addContainerGap().addComponent(statusMessageLabel)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 616, Short.MAX_VALUE)
						.addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(statusAnimationLabel).addContainerGap()));
		statusPanelLayout.setVerticalGroup(statusPanelLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(statusPanelLayout.createSequentialGroup()
						.addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(statusMessageLabel).addComponent(statusAnimationLabel).addComponent(
										progressBar, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(3, 3, 3)));

		setComponent(mainPanel);
		setMenuBar(menuBar);
		setStatusBar(statusPanel);
	}// </editor-fold>//GEN-END:initComponents

	private void moveBackItemActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_moveBackItemActionPerformed
	{// GEN-HEADEREND:event_moveBackItemActionPerformed
		if (gui != null && gui.game != null) {
			gui.game.undo();
		} else {
			try {
				Game activeGame = this.getActiveTabGame();
				if (!activeGame.undo()) {
					JOptionPane.showMessageDialog(null, "Nie da sie cofnac!");
				}
			} catch (java.lang.ArrayIndexOutOfBoundsException exc) {
				JOptionPane.showMessageDialog(null, "Brak aktywnej karty!");
			} catch (UnsupportedOperationException exc) {
				JOptionPane.showMessageDialog(null, exc.getMessage());
			}
		}

	}// GEN-LAST:event_moveBackItemActionPerformed

	private void moveBackItemMouseClicked(java.awt.event.MouseEvent evt)// GEN-FIRST:event_moveBackItemMouseClicked
	{// GEN-HEADEREND:event_moveBackItemMouseClicked
		// TODO add your handling code here:

	}// GEN-LAST:event_moveBackItemMouseClicked

	private void moveForwardItemMouseClicked(java.awt.event.MouseEvent evt)// GEN-FIRST:event_moveForwardItemMouseClicked
	{// GEN-HEADEREND:event_moveForwardItemMouseClicked
		// TODO add your handling code here:

	}// GEN-LAST:event_moveForwardItemMouseClicked

	private void moveForwardItemActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_moveForwardItemActionPerformed
	{// GEN-HEADEREND:event_moveForwardItemActionPerformed
		// TODO add your handling code here:
		if (gui != null && gui.game != null) {
			gui.game.redo();
		} else {
			try {
				Game activeGame = this.getActiveTabGame();
				if (!activeGame.redo()) {
					JOptionPane.showMessageDialog(null, "W pamieci brak ruchow do przodu!");
				}
			} catch (java.lang.ArrayIndexOutOfBoundsException exc) {
				JOptionPane.showMessageDialog(null, "Brak aktywnej karty!");
			} catch (UnsupportedOperationException exc) {
				JOptionPane.showMessageDialog(null, exc.getMessage());
			}
		}
	}// GEN-LAST:event_moveForwardItemActionPerformed

	private void rewindToBeginActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_rewindToBeginActionPerformed
	{// GEN-HEADEREND:event_rewindToBeginActionPerformed
		try {
			Game activeGame = this.getActiveTabGame();
			if (!activeGame.rewindToBegin()) {
				JOptionPane.showMessageDialog(null, "W pamieci brak ruchow do przodu!");
			}
		} catch (ArrayIndexOutOfBoundsException exc) {
			JOptionPane.showMessageDialog(null, "Brak aktywnej karty!");
		} catch (UnsupportedOperationException exc) {
			JOptionPane.showMessageDialog(null, exc.getMessage());
		}
	}// GEN-LAST:event_rewindToBeginActionPerformed

	private void rewindToEndActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_rewindToEndActionPerformed
	{// GEN-HEADEREND:event_rewindToEndActionPerformed
		try {
			Game activeGame = this.getActiveTabGame();
			if (!activeGame.rewindToEnd()) {
				JOptionPane.showMessageDialog(null, "W pamieci brak ruchow wstecz!");
			}
		} catch (ArrayIndexOutOfBoundsException exc) {
			JOptionPane.showMessageDialog(null, "Brak aktywnej karty!");
		} catch (UnsupportedOperationException exc) {
			JOptionPane.showMessageDialog(null, exc.getMessage());
		}
	}// GEN-LAST:event_rewindToEndActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JMenu gameMenu;
	private javax.swing.JTabbedPane gamesPane;
	private javax.swing.JMenuItem loadGameItem;
	public javax.swing.JPanel mainPanel;
	private javax.swing.JMenuBar menuBar;
	private javax.swing.JMenuItem moveBackItem;
	private javax.swing.JMenuItem moveForwardItem;
	private javax.swing.JMenuItem newGameItem;
	private javax.swing.JMenu optionsMenu;
	private javax.swing.JProgressBar progressBar;
	private javax.swing.JMenuItem rewindToBegin;
	private javax.swing.JMenuItem rewindToEnd;
	private javax.swing.JMenuItem saveGameItem;
	private javax.swing.JLabel statusAnimationLabel;
	private javax.swing.JLabel statusMessageLabel;
	private javax.swing.JPanel statusPanel;
	private javax.swing.JMenuItem themeSettingsMenu;
	// End of variables declaration//GEN-END:variables
	// private JTabbedPaneWithIcon gamesPane;
	private final Timer messageTimer;
	private final Timer busyIconTimer;
	private final Icon idleIcon;
	private final Icon[] busyIcons = new Icon[15];
	private int busyIconIndex = 0;

	private JDialog aboutBox;
	private PawnPromotionWindow promotionBox;
	public JDialog newGameFrame;

	public void componentResized(ComponentEvent e) {
		// System.out.println("jchessView resized!!;");
		LogToFile.log(new UnsupportedOperationException("Not supported yet."), "Error", "jchessView resized!!;");
=====================================================================
Found a 517 line (2063 tokens) duplication in the following files: 
Starting at line 38 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 38 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java

public class Server implements Runnable
{
    public static boolean isPrintEnable = true; //print all messages (print function)

    private static Map<Integer, Table> tables;
    public static int port=4449;
    private static ServerSocket ss;
    private static boolean isRunning=false;

    public static enum connection_info
    {
        all_is_ok(0),
        err_bad_table_ID(1),
        err_table_is_full(2),
        err_game_without_observer(3),
        err_bad_password(4);

        private int value;

        connection_info(int value)
        {
            this.value = value;
        }

        public static connection_info get(int id)
        {
            switch(id)
            {
                case 0:
                    return connection_info.all_is_ok;
                case 1:
                    return connection_info.err_bad_table_ID;
                case 2:
                    return connection_info.err_table_is_full;
                case 3:
                    return connection_info.err_game_without_observer;
                case 4:
                    return connection_info.err_bad_password;
                default:
                    return null;
            }
        }

        public int getValue()
        {
            return value;
        }
    }

    public Server()
    {
        if(!Server.isRunning) //run server if isn't running previous
        {
            runServer();

            Thread thread = new Thread(this);
            thread.start();

            Server.isRunning = true;
        }
    }

    /*
     * Method with is checking is the server is running
     * @return bool true if server is running, else false
     */
    public static boolean isRunning() //is server running?
    {
        return isRunning;
    }

    /*
     * Method to starting a new server
     * It's running a new game server
     */

    private static void runServer() //run server
    {
        try
        {
            ss = new ServerSocket(port);
            print("running");
        }
        catch (IOException ex)
        {
            Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
        }

        tables = new HashMap<Integer, Table>();
    }

    public void run() //listening
    {
        print("listening port: "+port);
        while(true)
        {
            Socket s;
            ObjectInputStream input;
            ObjectOutputStream output;

            try
            {
                s = ss.accept();
                input = new ObjectInputStream(s.getInputStream());
                output = new ObjectOutputStream(s.getOutputStream());

                print("new connection");

                //readed all data
                int tableID = input.readInt();
                print("readed table ID: "+tableID);
                boolean joinAsPlayer = input.readBoolean();
                print("readed joinAsPlayer: "+joinAsPlayer);
                String nick = input.readUTF();
                print("readed nick: "+nick);
                String password = input.readUTF();
                print("readed password: "+password);
                //---------------

                if(!tables.containsKey(tableID))
                {
                    print("bad table ID");
                    output.writeInt(connection_info.err_bad_table_ID.getValue());
                    output.flush();
                    continue;
                }
                Table table = tables.get(tableID);

                if(!table.password.equals(password))
                {
                    print("bad password");
                    output.writeInt(connection_info.err_bad_password.getValue());
                    output.flush();
                    continue;
                }
                 
                if(joinAsPlayer)
                {
                    print("join as player");
                    if(table.isAllPlayers())
                    {
                        print("error: was all players at this table");
                        output.writeInt(connection_info.err_table_is_full.getValue());
                        output.flush();
                        continue;
                    }
                    else
                    {
                        print("wasn't all players at this table");

                        output.writeInt(connection_info.all_is_ok.getValue());
                        output.flush();

                        table.addPlayer(new Client(s, input, output, nick, table));
                        table.sendMessageToAll("** Gracz "+nick+" dołączył do gry **");

                        if(table.isAllPlayers())
                        {
                            table.generateSettings();

                            print("Send settings to all");
                            table.sendSettingsToAll();

                            table.sendMessageToAll("** Nowa gra, zaczna: "+table.clientPlayer1.nick+"**");
                        }
                        else
                        {
                            table.sendMessageToAll("** Oczekiwanie na drugiego gracza **");
                        }
                    }
                }
                else//join as observer
                {
                    print("join as observer");
                    if(!table.canObserversJoin())
                    {
                        print("Observers can't join");
                        output.writeInt(connection_info.err_game_without_observer.getValue());
                        output.flush();
                        continue;
                    }
                    else
                    {
                        output.writeInt(connection_info.all_is_ok.getValue());
                        output.flush();

                        table.addObserver(new Client(s, input, output, nick, table));

                        if(table.clientPlayer2 != null) //all players is playing
                        {
                            table.sendSettingsAndMovesToNewObserver();
                        }

                        table.sendMessageToAll("** Obserwator "+nick+" dołączył do gry **");
                    }
                }
            }
            catch (IOException ex)
            {
                Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
                continue;
            }
        }
    }

    /*
     * Method with is printing the servers message
     *
     */
    private static void print(String str)
    {
        if(isPrintEnable)
            System.out.println("Server: "+str);
    }

    /*
     * Method with is creating a new table
     * @param idTable int witch number of the table
     * @param password String with password
     * @param withObserver bool true if observers available, else false
     * @param enableChat bool true if chat enable, else false
     */
    public void newTable(int idTable, String password, boolean withObserver, boolean enableChat) //create new table
    {
        print("create new table - id: "+idTable);
        tables.put(idTable, new Table(password, withObserver, enableChat));
    }

    /*
     * Method with sets a players settings and pawns
     */

    private class Table //Table: {two player, one chessboard and x observers}
    {
        public Client clientPlayer1;
        public Client clientPlayer2;
        public ArrayList<Client> clientObservers;
        public Settings player1Set;
        public Settings player2Set;
        public Settings observerSettings;
        public String password;
        private boolean canObserversJoin;
        private boolean enableChat;
        private ArrayList<Move> movesList;

        Table(String password, boolean canObserversJoin, boolean enableChat) 
        {
            this.password = password;
            this.enableChat = enableChat;
            this.canObserversJoin = canObserversJoin;

            if(canObserversJoin)
            {
                clientObservers = new ArrayList<Client>();
            }
            
            movesList = new ArrayList<Move>();
        }

        public void generateSettings() //generate settings for both players and observers
        {
            player1Set = new Settings();
            player2Set = new Settings();

            player1Set.gameMode = Settings.gameModes.newGame;
            player1Set.playerWhite.setName(clientPlayer1.nick);
            player1Set.playerBlack.setName(clientPlayer2.nick);
            player1Set.playerWhite.setType(playerTypes.localUser);
            player1Set.playerBlack.setType(playerTypes.networkUser);
            player1Set.gameType = Settings.gameTypes.network;
            player1Set.upsideDown = true;

            player2Set.gameMode = Settings.gameModes.newGame;
            player2Set.playerWhite.setName(clientPlayer1.nick);
            player2Set.playerBlack.setName(clientPlayer2.nick);
            player2Set.playerWhite.setType(playerTypes.networkUser);
            player2Set.playerBlack.setType(playerTypes.localUser);
            player2Set.gameType = Settings.gameTypes.network;
            player2Set.upsideDown = false;

            if(canObserversJoin())
            {
                observerSettings = new Settings();

                observerSettings.gameMode = Settings.gameModes.newGame;
                observerSettings.playerWhite.setName(clientPlayer1.nick);
                observerSettings.playerBlack.setName(clientPlayer2.nick);
                observerSettings.playerWhite.setType(playerTypes.networkUser);
                observerSettings.playerBlack.setType(playerTypes.networkUser);
                observerSettings.gameType = Settings.gameTypes.network;
                observerSettings.upsideDown = true;
            }
        }

        public void sendSettingsToAll() throws IOException //send generated settings to all clients on this table
        {
            print("running function: sendSettingsToAll()");

            clientPlayer1.output.writeUTF("#settings");
            clientPlayer1.output.writeObject(player1Set);
            clientPlayer1.output.flush();

            clientPlayer2.output.writeUTF("#settings");
            clientPlayer2.output.writeObject(player2Set);
            clientPlayer2.output.flush();

            if(canObserversJoin())
            {
                for(Client observer: clientObservers)
                {
                    observer.output.writeUTF("#settings");
                    observer.output.writeObject(observerSettings);
                    observer.output.flush();
                }
            }
        }
        
        //send all settings and moves to new observer
        //warning: used only if game started
        public void sendSettingsAndMovesToNewObserver() throws IOException
        {
            Client observer = clientObservers.get(clientObservers.size()-1);
            
            observer.output.writeUTF("#settings");
            observer.output.writeObject(observerSettings);
            observer.output.flush();
            
            for(Move m: movesList)
            {
                observer.output.writeUTF("#move");
                observer.output.writeInt(m.bX);
                observer.output.writeInt(m.bY);
                observer.output.writeInt(m.eX);
                observer.output.writeInt(m.eY);
                
            }
            observer.output.flush();
        }

        //send new move to other clients without himself
        public void sendMoveToOther(Client sender, int beginX, int beginY, int endX, int endY) throws IOException
        {
            print("running function: sendMoveToOther("+sender.nick+", "+beginX+", "+beginY+", "+endX+", "+endY+")");

            if(sender == clientPlayer1 || sender == clientPlayer2) //only player1 and player2 can move
            {
                if(clientPlayer1 != sender)
                {
                    clientPlayer1.output.writeUTF("#move");
                    clientPlayer1.output.writeInt(beginX);
                    clientPlayer1.output.writeInt(beginY);
                    clientPlayer1.output.writeInt(endX);
                    clientPlayer1.output.writeInt(endY);
                    clientPlayer1.output.flush();
                }
                if(clientPlayer2 != sender)
                {
                    clientPlayer2.output.writeUTF("#move");
                    clientPlayer2.output.writeInt(beginX);
                    clientPlayer2.output.writeInt(beginY);
                    clientPlayer2.output.writeInt(endX);
                    clientPlayer2.output.writeInt(endY);
                    clientPlayer2.output.flush();
                }

                if(canObserversJoin())
                {
                    for(Client observer: clientObservers)
                    {
                        observer.output.writeUTF("#move");
                        observer.output.writeInt(beginX);
                        observer.output.writeInt(beginY);
                        observer.output.writeInt(endX);
                        observer.output.writeInt(endY);
                        observer.output.flush();
                    }
                }
                
                this.movesList.add(new Move(beginX, beginY, endX, endY));
            }
        }

        public void sendMessageToAll(String str) throws IOException
        {
            print("running function: sendMessageToAll("+str+")");

            if(clientPlayer1 != null)
            {
                clientPlayer1.output.writeUTF("#message");
                clientPlayer1.output.writeUTF(str);
                clientPlayer1.output.flush();
            }
            
            if(clientPlayer2 != null)
            {
                clientPlayer2.output.writeUTF("#message");
                clientPlayer2.output.writeUTF(str);
                clientPlayer2.output.flush();
            }

            if(canObserversJoin())
            {
                for(Client observer: clientObservers)
                {
                    observer.output.writeUTF("#message");
                    observer.output.writeUTF(str);
                    observer.output.flush();
                }
             }
        }

        public boolean isAllPlayers() //is it all playing players?
        {
            if(clientPlayer1==null || clientPlayer2==null)
                return false;
            return true;
        }

        public boolean isObservers() //is it any observer?
        {
            return !clientObservers.isEmpty();
        }

        public boolean canObserversJoin() //can wathing game?
        {
            return this.canObserversJoin;
        }

        public void addPlayer(Client client) //join player to game
        {
            if(clientPlayer1 == null)
            {
                clientPlayer1 = client;
                print("Player1 connected");
            }
            else if(clientPlayer2 == null)
            {
                clientPlayer2 = client;
                print("Player2 connected");
            }
        }

        public void addObserver(Client client) //join observer to game
        {
            clientObservers.add(client);
        }

        private class Move
        {
            int bX;
            int bY;
            int eX;
            int eY;

            Move(int bX, int bY, int eX, int eY) //beginX, beginY, endX, endY
            {
                this.bX = bX;
                this.bY = bY;
                this.eX = eX;
                this.eY = eY;
            }
        }
    }

    private class Client implements Runnable //connecting client
    {
        private Socket s;
        public ObjectInputStream input;
        public ObjectOutputStream output;
        public String nick;
        private Table table;

        Client(Socket s, ObjectInputStream input, ObjectOutputStream output, String nick, Table table)
        {
            this.s = s;
            this.input = input;
            this.output = output;
            this.nick = nick;
            this.table = table;

            Thread thread = new Thread(this);
            thread.start();
        }

        public void run() //listening
        {
            print("running function: run()");
            while(true)
            {
                try
                {
                    String in = input.readUTF();

                    if(in.equals("#move"))//new move
                    {
                        int bX = input.readInt();
                        int bY = input.readInt();
                        int eX = input.readInt();
                        int eY = input.readInt();

                        table.sendMoveToOther(this, bX, bY, eX, eY);
                    }
                    if(in.equals("#message"))//new message
                    {
                        String str = input.readUTF();

                        table.sendMessageToAll(nick + ": " + str);
                    }
                }
                catch (IOException ex)
                {
                    Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
}
=====================================================================
Found a 330 line (1809 tokens) duplication in the following files: 
Starting at line 53 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawNetworkSettings.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawNetworkSettings.java

public class DrawNetworkSettings extends JPanel implements ActionListener
{

    private JDialog parent;
    private GridBagLayout gbl;
    private GridBagConstraints gbc;
    private ButtonGroup serverORclient;
    private JRadioButton radioServer;
    private JRadioButton radioClient;
    private JLabel labelNick;
    private JLabel labelPassword;
    private JLabel labelGameID;
    private JLabel labelOptions;
    private JPanel panelOptions;
    private JTextField textNick;
    private JPasswordField textPassword;
    private JTextField textGameID;
    private JButton buttonStart;
    private ServOptionsPanel servOptions;
    private ClientOptionsPanel clientOptions;

    DrawNetworkSettings(JDialog parent)
    {
        super();

        //components
        this.parent = parent;

        this.radioServer = new JRadioButton(Settings.lang("create_server"), true);
        this.radioClient = new JRadioButton(Settings.lang("connect_2_server"), false);
        this.serverORclient = new ButtonGroup();
        this.serverORclient.add(this.radioServer);
        this.serverORclient.add(this.radioClient);
        this.radioServer.addActionListener(this);
        this.radioClient.addActionListener(this);

        this.labelNick = new JLabel(Settings.lang("nickname"));
        this.labelPassword = new JLabel(Settings.lang("password"));
        this.labelGameID = new JLabel(Settings.lang("game_id"));
        this.labelOptions = new JLabel(Settings.lang("server_options"));

        this.textNick = new JTextField();
        this.textPassword = new JPasswordField();
        this.textGameID = new JTextField();

        this.panelOptions = new JPanel();
        this.clientOptions = new ClientOptionsPanel();
        this.servOptions = new ServOptionsPanel();

        this.buttonStart = new JButton(Settings.lang("start"));
        this.buttonStart.addActionListener(this);

        //add components
        this.gbl = new GridBagLayout();
        this.gbc = new GridBagConstraints();
        this.gbc.fill = GridBagConstraints.BOTH;
        this.setLayout(gbl);

        this.gbc.gridx = 0;
        this.gbc.gridy = 0;
        this.gbl.setConstraints(radioServer, gbc);
        this.add(radioServer);

        this.gbc.gridx = 1;
        this.gbc.gridy = 0;
        this.gbl.setConstraints(radioClient, gbc);
        this.add(radioClient);

        this.gbc.gridx = 0;
        this.gbc.gridy = 1;
        this.gbc.gridwidth = 2;
        this.gbl.setConstraints(labelGameID, gbc);
        this.add(labelGameID);

        this.gbc.gridx = 0;
        this.gbc.gridy = 2;
        this.gbc.gridwidth = 2;
        this.gbl.setConstraints(textGameID, gbc);
        this.add(textGameID);

        this.gbc.gridx = 0;
        this.gbc.gridy = 3;
        this.gbc.gridwidth = 2;
        this.gbl.setConstraints(labelNick, gbc);
        this.add(labelNick);

        this.gbc.gridx = 0;
        this.gbc.gridy = 4;
        this.gbc.gridwidth = 2;
        this.gbl.setConstraints(textNick, gbc);
        this.add(textNick);

        this.gbc.gridx = 0;
        this.gbc.gridy = 5;
        this.gbc.gridwidth = 2;
        this.gbl.setConstraints(labelPassword, gbc);
        this.add(labelPassword);

        this.gbc.gridx = 0;
        this.gbc.gridy = 6;
        this.gbc.gridwidth = 2;
        this.gbl.setConstraints(textPassword, gbc);
        this.add(textPassword);

        this.gbc.gridx = 0;
        this.gbc.gridy = 7;
        this.gbc.gridwidth = 2;
        this.gbl.setConstraints(labelOptions, gbc);
        this.add(labelOptions);

        this.gbc.gridx = 0;
        this.gbc.gridy = 8;
        this.gbc.gridwidth = 2;
        this.gbl.setConstraints(panelOptions, gbc);
        this.add(panelOptions);

        this.gbc.gridx = 0;
        this.gbc.gridy = 9;
        this.gbc.gridwidth = 2;
        this.gbl.setConstraints(buttonStart, gbc);
        this.add(buttonStart);

        this.panelOptions.add(servOptions);
    }

    /*Method for showing settings which the player is intrested with
     */
    public void actionPerformed(ActionEvent arg0)
    {
        if (arg0.getSource() == this.radioServer) //show options for server
        {
            this.panelOptions.removeAll();
            this.panelOptions.add(servOptions);
            this.panelOptions.revalidate();
            this.panelOptions.requestFocus();
            this.panelOptions.repaint();
        }
        else if (arg0.getSource() == this.radioClient) //show options for client
        {
            this.panelOptions.removeAll();
            this.panelOptions.add(clientOptions);
            this.panelOptions.revalidate();
            this.panelOptions.requestFocus();
            this.panelOptions.repaint();
        }
        else if (arg0.getSource() == this.buttonStart) //click start button
        {
            String error = "";
            if (this.textGameID.getText().isEmpty())
            {
                error = Settings.lang("fill_game_id") + "\n";
            }
            if (this.textNick.getText().length() == 0)
            {
                error += Settings.lang("fill_name") + "\n";
            }
            if (this.textPassword.getPassword().length <= 4)
            {
                error += Settings.lang("fill_pass_with_more_than_4_signs") + "\n";
            }
            if (this.radioClient.isSelected() && this.clientOptions.textServIP.getText().length() == 0)
            {
                error += Settings.lang("please_fill_field") + " IP \n";
            }
            else if (this.radioClient.isSelected())
            {
                Pattern ipPattern = Pattern.compile("[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}");
                if (!ipPattern.matcher(this.clientOptions.textServIP.getText()).matches())
                {
                    error += Settings.lang("bad_ip_format") + "\n";
                }
            }
            if (error.length() > 0)
            {
                JOptionPane.showMessageDialog(this, error);
                return;
            }
            String pass = this.textPassword.getPassword().toString();
            if (this.radioServer.isSelected())
            {
                Server server = new Server(); //create server
                server.newTable(Integer.parseInt(textGameID.getText()), pass, !servOptions.checkWitchoutObserver.isSelected(), !servOptions.checkDisableChat.isSelected()); //create new table
                //set client options
                clientOptions.textServIP.setText("127.0.0.1");

                try
                {
                    Thread.sleep(100); //wait 100 ms
                }
                catch (InterruptedException ex)
                {
                    Logger.getLogger(DrawNetworkSettings.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            Client client;
            try
            {
                client = new Client(clientOptions.textServIP.getText(), Server.port);//create client
                boolean isJoining = client.join(Integer.parseInt(textGameID.getText()), !clientOptions.checkOnlyWatch.isSelected(), textNick.getText(), MD5.encrypt(textPassword.getPassword().toString()));//join and wait for all players

                if (isJoining) //Client connection: succesful
                {
                    //System.out.println("Client connection: succesful");
                	LogToFile.log(null,"INFO", "Client connection: succesful");
                    //create new game and draw chessboard
                    Game newGUI = JChessApp.getJcv().addNewTab("Network game, table: " + textGameID.getText()/*client.sett.playerWhite.getName()+" vs "+client.sett.playerBlack.getName()*/);
                    client.setGame(newGUI);
                    newGUI.add(newGUI.getChat());

                    newGUI.getChessboard().getDisplay().draw();

                    Thread thread = new Thread(client);
                    thread.start(); //client listening

                    this.parent.setVisible(false);//hide parent
                }
                else
                {
                    JOptionPane.showMessageDialog(this, Settings.lang("error_connecting_to_server"));
                }

            }
            catch (Error err)
            {
                //System.out.println("Client connection: failure");
            	LogToFile.log(null,"INFO", "Client connection: failure");
                JOptionPane.showMessageDialog(this, err);
            }
        }
    }

    /* Method witch is saving the latest network settings
     */
    private class ServOptionsPanel extends JPanel //options for server
    {

        private GridBagLayout gbl;
        private GridBagConstraints gbc;
        private JLabel labelGameTime;
        public JTextField textGameTime;
        public JCheckBox checkWitchoutObserver;
        public JCheckBox checkDisableChat;

        ServOptionsPanel()
        {
            super();

            labelGameTime = new JLabel(Settings.lang("time_game_min"));
            textGameTime = new JTextField();
            checkWitchoutObserver = new JCheckBox(Settings.lang("without_observers"));
            checkDisableChat = new JCheckBox(Settings.lang("without_chat"));

            //temporary disabled options
            this.labelGameTime.setEnabled(false);
            this.textGameTime.setEnabled(false);
            this.checkDisableChat.setEnabled(false);
            //------------------------

            this.gbl = new GridBagLayout();
            this.gbc = new GridBagConstraints();
            this.gbc.fill = GridBagConstraints.BOTH;
            this.setLayout(gbl);

            this.gbc.gridx = 0;
            this.gbc.gridy = 0;
            this.gbc.gridwidth = 2;
            this.gbl.setConstraints(labelGameTime, gbc);
            this.add(labelGameTime);

            this.gbc.gridx = 0;
            this.gbc.gridy = 1;
            this.gbc.gridwidth = 2;
            this.gbl.setConstraints(textGameTime, gbc);
            this.add(textGameTime);

            this.gbc.gridx = 0;
            this.gbc.gridy = 2;
            this.gbc.gridwidth = 1;
            this.gbl.setConstraints(checkWitchoutObserver, gbc);
            this.add(checkWitchoutObserver);

            this.gbc.gridx = 1;
            this.gbc.gridy = 2;
            this.gbc.gridwidth = 1;
            this.gbl.setConstraints(checkDisableChat, gbc);
            this.add(checkDisableChat);
        }
    }

    /* Method responible for drawing clients panel
     */
    private class ClientOptionsPanel extends JPanel //options for client
    {

        private GridBagLayout gbl;
        private GridBagConstraints gbc;
        private JLabel labelServIP;
        public JTextField textServIP;
        public JCheckBox checkOnlyWatch;

        ClientOptionsPanel()
        {
            super();

            this.labelServIP = new JLabel(Settings.lang("server_ip"));
            this.textServIP = new JTextField();
            this.checkOnlyWatch = new JCheckBox(Settings.lang("only_observe"));

            this.gbl = new GridBagLayout();
            this.gbc = new GridBagConstraints();
            this.gbc.fill = GridBagConstraints.BOTH;
            this.setLayout(gbl);

            this.gbc.gridx = 0;
            this.gbc.gridy = 0;
            this.gbl.setConstraints(labelServIP, gbc);
            this.add(labelServIP);

            this.gbc.gridx = 0;
            this.gbc.gridy = 1;
            this.gbl.setConstraints(textServIP, gbc);
            this.add(textServIP);

            this.gbc.gridx = 0;
            this.gbc.gridy = 2;
            this.gbl.setConstraints(checkOnlyWatch, gbc);
            this.add(checkOnlyWatch);
        }
    }
}
=====================================================================
Found a 165 line (1519 tokens) duplication in the following files: 
Starting at line 22 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java

public class JChessAboutBox extends javax.swing.JDialog {

    public JChessAboutBox(java.awt.Frame parent) {
        super(parent);
        initComponents();
        getRootPane().setDefaultButton(closeButton);
        
    }

    @Action public void closeAboutBox() {
        dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        closeButton = new javax.swing.JButton();
        javax.swing.JLabel appTitleLabel = new javax.swing.JLabel();
        javax.swing.JLabel versionLabel = new javax.swing.JLabel();
        javax.swing.JLabel appVersionLabel = new javax.swing.JLabel();
        javax.swing.JLabel homepageLabel = new javax.swing.JLabel();
        javax.swing.JLabel appHomepageLabel = new javax.swing.JLabel();
        javax.swing.JLabel appDescLabel = new javax.swing.JLabel();
        javax.swing.JLabel imageLabel = new javax.swing.JLabel();
        javax.swing.JLabel vendorLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel appVendorLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel appHomepageLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel appHomepageLabel2 = new javax.swing.JLabel();
        javax.swing.JLabel vendorLabel2 = new javax.swing.JLabel();
        javax.swing.JLabel appHomepageLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(main.java.JChessApp.class).getContext().getResourceMap(JChessAboutBox.class);
        setTitle(resourceMap.getString("title")); // NOI18N
        setModal(true);
        setName("aboutBox"); // NOI18N
        setResizable(false);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(main.java.JChessApp.class).getContext().getActionMap(JChessAboutBox.class, this);
        closeButton.setAction(actionMap.get("closeAboutBox")); // NOI18N
        closeButton.setName("closeButton"); // NOI18N

        appTitleLabel.setFont(appTitleLabel.getFont().deriveFont(appTitleLabel.getFont().getStyle() | java.awt.Font.BOLD, appTitleLabel.getFont().getSize()+4));
        appTitleLabel.setText(resourceMap.getString("Application.title")); // NOI18N
        appTitleLabel.setName("appTitleLabel"); // NOI18N

        versionLabel.setFont(versionLabel.getFont().deriveFont(versionLabel.getFont().getStyle() | java.awt.Font.BOLD));
        versionLabel.setText(resourceMap.getString("versionLabel.text")); // NOI18N
        versionLabel.setName("versionLabel"); // NOI18N

        appVersionLabel.setText(resourceMap.getString("Application.version")); // NOI18N
        appVersionLabel.setName("appVersionLabel"); // NOI18N

        homepageLabel.setFont(homepageLabel.getFont().deriveFont(homepageLabel.getFont().getStyle() | java.awt.Font.BOLD));
        homepageLabel.setText(resourceMap.getString("homepageLabel.text")); // NOI18N
        homepageLabel.setName("homepageLabel"); // NOI18N

        appHomepageLabel.setText(resourceMap.getString("Application.homepage")); // NOI18N
        appHomepageLabel.setName("appHomepageLabel"); // NOI18N

        appDescLabel.setText(resourceMap.getString("appDescLabel.text")); // NOI18N
        appDescLabel.setName("appDescLabel"); // NOI18N

        imageLabel.setIcon(resourceMap.getIcon("imageLabel.icon")); // NOI18N
        imageLabel.setName("imageLabel"); // NOI18N

        vendorLabel1.setFont(vendorLabel1.getFont().deriveFont(vendorLabel1.getFont().getStyle() | java.awt.Font.BOLD));
        vendorLabel1.setText(resourceMap.getString("vendorLabel1.text")); // NOI18N
        vendorLabel1.setName("vendorLabel1"); // NOI18N

        appVendorLabel1.setName("appVendorLabel1"); // NOI18N

        appHomepageLabel1.setText(resourceMap.getString("appHomepageLabel1.text")); // NOI18N
        appHomepageLabel1.setName("appHomepageLabel1"); // NOI18N

        appHomepageLabel2.setText(resourceMap.getString("appHomepageLabel2.text")); // NOI18N
        appHomepageLabel2.setName("appHomepageLabel2"); // NOI18N

        vendorLabel2.setFont(vendorLabel2.getFont().deriveFont(vendorLabel2.getFont().getStyle() | java.awt.Font.BOLD));
        vendorLabel2.setText(resourceMap.getString("vendorLabel2.text")); // NOI18N
        vendorLabel2.setName("vendorLabel2"); // NOI18N

        appHomepageLabel3.setText(resourceMap.getString("appHomepageLabel3.text")); // NOI18N
        appHomepageLabel3.setName("appHomepageLabel3"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(imageLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(appTitleLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(appDescLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(versionLabel)
                            .addComponent(homepageLabel)
                            .addComponent(vendorLabel1)
                            .addComponent(vendorLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(appHomepageLabel1)
                                    .addComponent(appHomepageLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(closeButton))
                            .addComponent(appVersionLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(appVendorLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(appHomepageLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(appHomepageLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 194, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(appTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(appDescLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(versionLabel)
                    .addComponent(appVersionLabel))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homepageLabel)
                    .addComponent(appHomepageLabel))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(closeButton)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vendorLabel1)
                            .addComponent(appVendorLabel1)
                            .addComponent(appHomepageLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(appHomepageLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(vendorLabel2)
                                .addComponent(appHomepageLabel3)))
                        .addGap(36, 36, 36))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    // End of variables declaration//GEN-END:variables
    
}
=====================================================================
Found a 243 line (1480 tokens) duplication in the following files: 
Starting at line 22 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 22 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

@SuppressWarnings("serial")
public class SquareBoardDisplay extends ChessboardDisplay {
	public Square activeSquare;
	public Image upDownLabel;
	public Image LeftRightLabel;
	public Point topLeft;
	public int active_x_square;
	public int active_y_square;
	public float square_height;
	
	public static final int img_x = 5;//image x position (used in JChessView class!)
    public static final int img_y = img_x;//image y position (used in JChessView class!)
    public static final int img_widht = 480;//image width
    public static final int img_height = img_widht;//image height
    
	private ChessboardLayout board_layout;
	boolean renderLabels, upsideDown;
	Square[][] squares;
	SquareBoard board;

	public SquareBoardDisplay(Image upDownLabel, Image leftRightLabel, Point topLeft, boolean renderLabels, boolean upsideDown, SquareBoard board) {
		this.upDownLabel = upDownLabel;
		LeftRightLabel = leftRightLabel;
		this.topLeft = topLeft;
		this.board_layout=board.board_layout;
		this.renderLabels= renderLabels;
		this.upsideDown= upsideDown;
		this.squares= board.initial.getSquares();
		this.board= board;
		
		activeSquare = null;
        square_height = img_height / 8;
        active_x_square = -1;
        active_y_square = -1;
        
        this.setDoubleBuffered(true);
        drawLabels((int) square_height);
	}
	
	/**
     * Method to draw Chessboard and their elements (pieces etc.)
     * @deprecated 
     */
    public void draw()
    {
        this.getGraphics().drawImage(board_layout.image, this.getTopLeftPoint().x, this.getTopLeftPoint().y, null);//draw an Image of chessboard
        this.drawLabels();
        this.repaint();
    }/*--endOf-draw--*/


    /**
     * Annotations to superclass Game updateing and painting the crossboard
     */
    @Override
    public void update(Graphics g)
    {
        repaint();
    }

    public Point getTopLeftPoint()
    {
        if (renderLabels)
        {
            return new Point(topLeft.x + upDownLabel.getHeight(null), topLeft.y + upDownLabel.getHeight(null));
        }
        return topLeft;
    }

    @Override
    public void paintComponent(Graphics g)
    {
    	Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        Point topLeftPoint = this.getTopLeftPoint();
        if (renderLabels)
        {
            if(topLeftPoint.x <= 0 && topLeftPoint.y <= 0) //if renderLabels and (0,0), than draw it! (for first run)
            {
                this.drawLabels();
            }
            g2d.drawImage(upDownLabel, 0, 0, null);
            g2d.drawImage(upDownLabel, 0, board_layout.image.getHeight(null) + topLeftPoint.y, null);
            g2d.drawImage(LeftRightLabel, 0, 0, null);
            g2d.drawImage(LeftRightLabel, board_layout.image.getHeight(null) + topLeftPoint.x, 0, null);
        }
        g2d.drawImage(board_layout.image, topLeftPoint.x, topLeftPoint.y, null);//draw an Image of chessboard
        drawPieces(g);
        if ((active_x_square != -1) && (active_y_square != -1)) //if some square is active
        {
            g2d.drawImage(board_layout.selSquare, 
                            (active_x_square * (int) square_height) + topLeftPoint.x,
                            (active_y_square * (int) square_height) + topLeftPoint.y, null);//draw image of selected square
            Square tmpSquare = squares[active_x_square][active_y_square];
            if (tmpSquare.piece != null)
            {
                board.moves = squares[active_x_square][active_y_square].piece.allMoves(false);
                for (Iterator it = board.moves.iterator(); board.moves != null && it.hasNext();)
                {
                    Square sq = (Square) it.next();
                    g2d.drawImage(board_layout.ableSquare, 
                            (sq.getPozX() * (int) square_height) + topLeftPoint.x,
                            (sq.getPozY() * (int) square_height) + topLeftPoint.y, null);
                }
            }

            
        }
    }/*--endOf-paint--*/

	private void drawPieces(Graphics g) {
		for (int i = 0; i < 8; i++) //drawPiecesOnSquares
        {
            for (int y = 0; y < 8; y++)
            {
                if (squares[i][y].piece != null)
                {
                    squares[i][y].piece.draw(g);//draw image of Piece
                }
            }
        }//--endOf--drawPiecesOnSquares
	}


    public void resizeChessboard(int height)
    {
        BufferedImage resized = new BufferedImage(height, height, BufferedImage.TYPE_INT_ARGB_PRE);
        Graphics g = resized.createGraphics();
        g.drawImage(board_layout.orgImage, 0, 0, height, height, null);
        g.dispose();
        board_layout.image = resized.getScaledInstance(height, height, 0);
        square_height = (float) (height / 8);
        if (renderLabels)
        {
            height += 2 * (upDownLabel.getHeight(null));
        }
        this.setSize(height, height);

        resized = new BufferedImage((int)  square_height, (int)  square_height, BufferedImage.TYPE_INT_ARGB_PRE);
        g = resized.createGraphics();
        g.drawImage(board_layout.orgAbleSquare, 0, 0, (int)  square_height, (int)  square_height, null);
        g.dispose();
        board_layout.ableSquare = resized.getScaledInstance((int)  square_height, (int)  square_height, 0);

        resized = new BufferedImage((int)  square_height, (int)  square_height, BufferedImage.TYPE_INT_ARGB_PRE);
        g = resized.createGraphics();
        g.drawImage(board_layout.orgSelSquare, 0, 0, (int)  square_height, (int)  square_height, null);
        g.dispose();
        board_layout.selSquare = resized.getScaledInstance((int)  square_height, (int)  square_height, 0);
        this.drawLabels();
    }

    protected void drawLabels()
    {
        this.drawLabels((int) square_height);
    }

    protected final void drawLabels(int square_height)
    {
        //BufferedImage uDL = new BufferedImage(800, 800, BufferedImage.TYPE_3BYTE_BGR);
        int min_label_height = 20;
        int labelHeight = (int) Math.ceil(square_height / 4);
        labelHeight = (labelHeight < min_label_height) ? min_label_height : labelHeight;
        int labelWidth =  (int) Math.ceil(square_height * 8 + (2 * labelHeight)); 
        BufferedImage uDL = new BufferedImage(labelWidth + min_label_height, labelHeight, BufferedImage.TYPE_3BYTE_BGR);
        Graphics2D uDL2D = (Graphics2D) uDL.createGraphics();
        uDL2D.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        uDL2D.setColor(Color.white);

        uDL2D.fillRect(0, 0, labelWidth + min_label_height, labelHeight);
        uDL2D.setColor(Color.black);
        uDL2D.setFont(new Font("Arial", Font.BOLD, 12));
        int addX = (square_height / 2);
        if (renderLabels)
        {
            addX += labelHeight;
        }

        String[] letters =
        {
            "a", "b", "c", "d", "e", "f", "g", "h"
        };
        if (!upsideDown)
        {
            for (int i = 1; i <= letters.length; i++)
            {
                uDL2D.drawString(letters[i - 1], (square_height * (i - 1)) + addX, 10 + (labelHeight / 3));
            }
        }
        else
        {
            int j = 1;
            for (int i = letters.length; i > 0; i--, j++)
            {
                uDL2D.drawString(letters[i - 1], (square_height * (j - 1)) + addX, 10 + (labelHeight / 3));
            }
        }
        uDL2D.dispose();
        upDownLabel = uDL;

        uDL = new BufferedImage(labelHeight, labelWidth + min_label_height, BufferedImage.TYPE_3BYTE_BGR);
        uDL2D = (Graphics2D) uDL.createGraphics();
        uDL2D.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        uDL2D.setColor(Color.white);
        //uDL2D.fillRect(0, 0, 800, 800);
        uDL2D.fillRect(0, 0, labelHeight, labelWidth + min_label_height);
        uDL2D.setColor(Color.black);
        uDL2D.setFont(new Font("Arial", Font.BOLD, 12));

        if (upsideDown)
        {
            for (int i = 1; i <= 8; i++)
            {
                uDL2D.drawString(new Integer(i).toString(), 3 + (labelHeight / 3), (square_height * (i - 1)) + addX);
            }
        }
        else
        {
            int j = 1;
            for (int i = 8; i > 0; i--, j++)
            {
                uDL2D.drawString(new Integer(i).toString(), 3 + (labelHeight / 3), (square_height * (j - 1)) + addX);
            }
        }
        uDL2D.dispose();
        LeftRightLabel = uDL;
    }
    public void componentMoved(ComponentEvent e)
    {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void componentShown(ComponentEvent e)
    {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void componentHidden(ComponentEvent e)
    {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

}
=====================================================================
Found a 202 line (1350 tokens) duplication in the following files: 
Starting at line 19 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 23 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java

	public Square activeSquare;
	public Image upDownLabel;
	public Image LeftRightLabel;
	public Point topLeftPoint;
	public int active_x_square;
	public int active_y_square;
	
	public static final int img_x = 5;//image x position (used in JChessView class!)
    public static final int img_y = img_x;//image y position (used in JChessView class!)
    public static final int img_widht = 480;//image width
    public static final int img_height = img_widht;//image height
    
	private ChessboardLayout board_layout;
	boolean renderLabels, upsideDown;
	Square[][] squares;
	CircleBoard board;
	
	public CircleBoardDisplay(Image upDownLabel, Image leftRightLabel, Point topLeft, boolean renderLabels, boolean upsideDown, CircleBoard board) {
		this.upDownLabel = upDownLabel;
		LeftRightLabel = leftRightLabel;
		this.topLeftPoint = topLeft;
		this.board_layout=board.board_layout;
		this.renderLabels= renderLabels;
		this.upsideDown= upsideDown;
		this.squares= board.initial.getSquares();
		this.board= board;
		activeSquare = null;
		active_x_square = -1;
        active_y_square = -1;
        
        this.setDoubleBuffered(true);
        drawLabels(get_square_height());
	}
	
	
	public void paintComponent(Graphics g) {
		Graphics2D g2d = (Graphics2D) g;
		g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		
		if (renderLabels) {
			if (topLeftPoint.x <= 0 && topLeftPoint.y <= 0) {
				drawLabels(get_square_height());
			}

			g2d.drawImage(this.upDownLabel, 0, 0, null);
			g2d.drawImage(this.upDownLabel, 0, board_layout.image.getHeight(null) + topLeftPoint.y, null);
			g2d.drawImage(this.LeftRightLabel, 0, 0, null);
			g2d.drawImage(this.LeftRightLabel, board_layout.image.getHeight(null) + topLeftPoint.x, 0, null);
		}
		g2d.drawImage(board_layout.image, topLeftPoint.x, topLeftPoint.y, null);
		drawPieces(g);
		drawHighlightedSquares(g2d);
		
	}/*--endOf-paint--*/ 
	

	private void drawPieces(Graphics g) {
		for (int i = 0; i < 24; i++) // drawPiecesOnSquares
		{
			for (int y = 0; y < 6; y++) {
				if (squares[i][y].piece != null) {
					squares[i][y].piece.draw(g);// draw image of Piece
				}
			}
		} // --endOf--drawPiecesOnSquares
	}

	public Point indexToCartesian(Point p1){
		int xi = p1.x;
		int yi = p1.y;
		
		int ri = (int) (getRadius() - (yi + 1) * get_square_height());
		int rs = (int) (ri + get_square_height());

		int a1 = (6 - xi) * 15;
		int a2 = a1 - 15;
		int rm = (rs + ri) / 2;
		int am = (a1 + a2) / 2;

		int xm = (int) (topLeftPoint.x + getRadius() + (int) (rm * Math.cos(Math.toRadians(am))) - get_square_height() / 2);
		int ym = (int) (topLeftPoint.y + getRadius() - (int) (rm * Math.sin(Math.toRadians(am))) - get_square_height() / 2);
		
		return new Point(xm, ym);

	}
	
	public void drawHighlightedSquares(Graphics2D g2d) {

		if (activeSquare != null) {
			int xi = activeSquare.getPozX();
			int yi = activeSquare.getPozY();
			
			Point pm = indexToCartesian(new Point(xi, yi));

			int xm = pm.x;
			int ym = pm.y;
			
			Image tempImage = board_layout.orgSelSquare;
			BufferedImage resized = resizeImage(tempImage, get_square_height());
			board_layout.selSquare = resized.getScaledInstance(get_square_height(), get_square_height(), 0);
			g2d.drawImage(board_layout.selSquare, xm, ym, null);
			
			if (activeSquare.piece != null)
            {
                ArrayList<Square> moves = activeSquare.piece.allMoves(false);
                for (Square sq : moves)
                {
                   Point p_sq = indexToCartesian(new Point(sq.getPozX(),sq.getPozY()));
                    
                    tempImage = board_layout.orgAbleSquare;
                    resized = resizeImage(tempImage,get_square_height());
        			board_layout.ableSquare = resized.getScaledInstance(get_square_height(), get_square_height(), 0);
        			
                    g2d.drawImage(board_layout.ableSquare, p_sq.x, p_sq.y, null);
                }
            }

		}
	}


	private BufferedImage resizeImage(Image tempImage, int height) {
		BufferedImage resized = new BufferedImage(height, height, BufferedImage.TYPE_INT_ARGB_PRE);
		Graphics2D imageGr = (Graphics2D) resized.createGraphics();
		imageGr.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		imageGr.drawImage(tempImage, 0, 0, height, height, null);
		imageGr.dispose();
		return resized;
	}

	public void resizeChessboard(int height) {
		BufferedImage resized = resizeImage(board_layout.orgImage, height);
		board_layout.image = resized.getScaledInstance(height, height, 0);
		
		int square_height = (height - height / 3) / 6;

		if (renderLabels) {
			height += 2 * (this.upDownLabel.getHeight(null));
		}
		
		this.setSize(height, height);
		this.drawLabels(square_height);
	}

	protected final void drawLabels(float square_height2) {
		// BufferedImage uDL = new BufferedImage(800, 800,
		// BufferedImage.TYPE_3BYTE_BGR);
		int min_label_height = 20;
		int labelHeight = (int) Math.ceil(square_height2 / 4);
		labelHeight = (labelHeight < min_label_height) ? min_label_height : labelHeight;
		int labelWidth = (int) Math.ceil(square_height2 * 8 + (2 * labelHeight));
		BufferedImage uDL = new BufferedImage(labelWidth + min_label_height, labelHeight, BufferedImage.TYPE_3BYTE_BGR);
		Graphics2D uDL2D = (Graphics2D) uDL.createGraphics();
		uDL2D.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		uDL2D.setColor(Color.white);

		uDL2D.fillRect(0, 0, labelWidth + min_label_height, labelHeight);
		uDL2D.setColor(Color.black);
		uDL2D.setFont(new Font("Arial", Font.BOLD, 12));
		int addX = (int) (square_height2 / 2);
		if (renderLabels) {
			addX += labelHeight;
		}

		String[] letters = { "a", "b", "c", "d", "e", "f", "g", "h" };

		int j = 1;
		for (int i = letters.length; i > 0; i--, j++) {
			uDL2D.drawString(letters[i - 1], (square_height2 * (j - 1)) + addX, 10 + (labelHeight / 3));
		}

		uDL2D.dispose();
		this.upDownLabel = uDL;

		uDL = new BufferedImage(labelHeight, labelWidth + min_label_height, BufferedImage.TYPE_3BYTE_BGR);
		uDL2D = (Graphics2D) uDL.createGraphics();
		uDL2D.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		uDL2D.setColor(Color.white);
		// uDL2D.fillRect(0, 0, 800, 800);
		uDL2D.fillRect(0, 0, labelHeight, labelWidth + min_label_height);
		uDL2D.setColor(Color.black);
		uDL2D.setFont(new Font("Arial", Font.BOLD, 12));

		j = 1;
		for (int i = 8; i > 0; i--, j++) {
			uDL2D.drawString(new Integer(i).toString(), 3 + (labelHeight / 3), (square_height2 * (j - 1)) + addX);
		}

		uDL2D.dispose();
		this.LeftRightLabel = uDL;
	}


	public int getUpDownLabelHeight() {
		return upDownLabel.getHeight(null);
	}


	public int getHeight()
    {
        return board_layout.image.getHeight(null);
    }/*--endOf-get_height--*/
=====================================================================
Found a 308 line (1334 tokens) duplication in the following files: 
Starting at line 29 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 29 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

public class Table
{//Table: {two player, one chessboard and x observers}

    public SClient clientPlayer1;
    public SClient clientPlayer2;
    public ArrayList<SClient> clientObservers;
    public Settings player1Set;
    public Settings player2Set;
    public Settings observerSettings;
    public String password;
    private boolean canObserversJoin;
    private boolean enableChat;
    private ArrayList<Move> movesList;

    Table(String password, boolean canObserversJoin, boolean enableChat)
    {
        this.password = password;
        this.enableChat = enableChat;
        this.canObserversJoin = canObserversJoin;

        if (canObserversJoin)
        {
            clientObservers = new ArrayList<SClient>();
        }

        movesList = new ArrayList<Move>();
    }

    public void generateSettings() //generate settings for both players and observers
    {

        player1Set = new Settings();
        player2Set = new Settings();

        player1Set.gameMode = Settings.gameModes.newGame;
        player1Set.playerWhite.setName(clientPlayer1.nick);
        player1Set.playerBlack.setName(clientPlayer2.nick);
        player1Set.playerWhite.setType(Player.playerTypes.localUser);
        player1Set.playerBlack.setType(Player.playerTypes.networkUser);
        player1Set.gameType = Settings.gameTypes.network;
        player1Set.upsideDown = true;

        player2Set.gameMode = Settings.gameModes.newGame;
        player2Set.playerWhite.setName(clientPlayer1.nick);
        player2Set.playerBlack.setName(clientPlayer2.nick);
        player2Set.playerWhite.setType(Player.playerTypes.networkUser);
        player2Set.playerBlack.setType(Player.playerTypes.localUser);
        player2Set.gameType = Settings.gameTypes.network;
        player2Set.upsideDown = false;

        if (canObserversJoin())
        {
            observerSettings = new Settings();

            observerSettings.gameMode = Settings.gameModes.newGame;
            observerSettings.playerWhite.setName(clientPlayer1.nick);
            observerSettings.playerBlack.setName(clientPlayer2.nick);
            observerSettings.playerWhite.setType(Player.playerTypes.networkUser);
            observerSettings.playerBlack.setType(Player.playerTypes.networkUser);
            observerSettings.gameType = Settings.gameTypes.network;
            observerSettings.upsideDown = true;
        }
    }

    public void sendSettingsToAll() throws IOException //send generated settings to all clients on this table
    {

        Server.print("running function: sendSettingsToAll()");

        clientPlayer1.output.writeUTF("#settings");
        clientPlayer1.output.writeObject(player1Set);
        clientPlayer1.output.flush();

        clientPlayer2.output.writeUTF("#settings");
        clientPlayer2.output.writeObject(player2Set);
        clientPlayer2.output.flush();

        if (canObserversJoin())
        {
            for (SClient observer : clientObservers)
            {
                observer.output.writeUTF("#settings");
                observer.output.writeObject(observerSettings);
                observer.output.flush();
            }
        }
    }

    //send all settings and moves to new observer
    //warning: used only if game started
    public void sendSettingsAndMovesToNewObserver() throws IOException
    {
        SClient observer = clientObservers.get(clientObservers.size() - 1);

        observer.output.writeUTF("#settings");
        observer.output.writeObject(observerSettings);
        observer.output.flush();

        for (Move m : movesList)
        {
            observer.output.writeUTF("#move");
            observer.output.writeInt(m.bX);
            observer.output.writeInt(m.bY);
            observer.output.writeInt(m.eX);
            observer.output.writeInt(m.eY);

        }
        observer.output.flush();
    }

    //send new move to other clients without himself
    public void sendMoveToOther(SClient sender, int beginX, int beginY, int endX, int endY) throws IOException
    {
        Server.print("running function: sendMoveToOther(" + sender.nick + ", " + beginX + ", " + beginY + ", " + endX + ", " + endY + ")");

        if (sender == clientPlayer1 || sender == clientPlayer2) //only player1 and player2 can move
        {
            SClient receiver = (clientPlayer1 == sender) ? clientPlayer2 : clientPlayer1;
            receiver.output.writeUTF("#move");
            receiver.output.writeInt(beginX);
            receiver.output.writeInt(beginY);
            receiver.output.writeInt(endX);
            receiver.output.writeInt(endY);
            receiver.output.flush();
            
            if (canObserversJoin())
            {
                for (SClient observer : clientObservers)
                {
                    observer.output.writeUTF("#move");
                    observer.output.writeInt(beginX);
                    observer.output.writeInt(beginY);
                    observer.output.writeInt(endX);
                    observer.output.writeInt(endY);
                    observer.output.flush();
                }
            }

            this.movesList.add(new Move(beginX, beginY, endX, endY));
        }
    }
    
    public void sendUndoToAll( SClient sender, String msg ) throws IOException
    {
        if( sender == clientPlayer1 || sender == clientPlayer2 )
        {
            this.sendToAll(sender, msg);
            try
            {
                this.movesList.remove( this.movesList.size()-1 );
            }
            catch(ArrayIndexOutOfBoundsException exc)
            {
                return;
            }
        }
    }

    
    public void sendToAll( SClient sender, String msg ) throws IOException
    {
        if( sender == clientPlayer1 || sender == clientPlayer2 )
        {
            SClient receiver = (clientPlayer1 == sender) ? clientPlayer2 : clientPlayer1;
            receiver.output.writeUTF( msg );
            receiver.output.flush();
            
            if (canObserversJoin())
            {
                for (SClient observer : clientObservers)
                {
                    observer.output.writeUTF( msg );
                    observer.output.flush();
                }
            }            
        }
    }
    
    
    public void sendToOtherPlayer( SClient sender, String msg ) throws IOException
    {
        if( sender == clientPlayer1 || sender == clientPlayer2 )
        {
            SClient receiver = (clientPlayer1 == sender) ? clientPlayer2 : clientPlayer1;
            receiver.output.writeUTF( msg );
            receiver.output.flush();     
        }
    }

    //send message about error with connection to other client
    //send only if sender is player (not observer)
    public void sendErrorConnectionToOther(SClient sender) throws IOException
    {
        Server.print("running function: sendErrorConnectionToOther(" + sender.nick + ")");

        if (sender == clientPlayer1 || sender == clientPlayer2) //only player1 and player2 can move
        {
            if (clientPlayer1 != sender)
            {
                clientPlayer1.output.writeUTF("#errorConnection");
                clientPlayer1.output.flush();
            }
            if (clientPlayer2 != sender)
            {
                clientPlayer2.output.writeUTF("#errorConnection");
                clientPlayer2.output.flush();
            }

            if (canObserversJoin())
            {
                for (SClient observer : clientObservers)
                {
                    observer.output.writeUTF("#errorConnection");
                    observer.output.flush();
                }
            }
        }
    }

    public void sendMessageToAll(String str) throws IOException
    {
        Server.print("running function: sendMessageToAll(" + str + ")");

        if (clientPlayer1 != null)
        {
            clientPlayer1.output.writeUTF("#message");
            clientPlayer1.output.writeUTF(str);
            clientPlayer1.output.flush();
        }

        if (clientPlayer2 != null)
        {
            clientPlayer2.output.writeUTF("#message");
            clientPlayer2.output.writeUTF(str);
            clientPlayer2.output.flush();
        }

        if (canObserversJoin())
        {
            for (SClient observer : clientObservers)
            {
                observer.output.writeUTF("#message");
                observer.output.writeUTF(str);
                observer.output.flush();
            }
        }
    }

    public boolean isAllPlayers()
    {//is it all playing players?

        if (clientPlayer1 == null || clientPlayer2 == null)
        {
            return false;
        }
        return true;
    }

    public boolean isObservers()
    {//is it any observer?

        return !clientObservers.isEmpty();
    }

    public boolean canObserversJoin()
    {//can wathing game?

        return this.canObserversJoin;
    }

    public void addPlayer(SClient client)
    {//join player to game

        if (clientPlayer1 == null)
        {
            clientPlayer1 = client;
            Server.print("Player1 connected");
        }
        else if (clientPlayer2 == null)
        {
            clientPlayer2 = client;
            Server.print("Player2 connected");
        }
    }

    public void addObserver(SClient client)
    {//join observer to game

        clientObservers.add(client);
    }

    private class Move
    {

        int bX;
        int bY;
        int eX;
        int eY;

        Move(int bX, int bY, int eX, int eY) //beginX, beginY, endX, endY
        {
            this.bX = bX;
            this.bY = bY;
            this.eX = eX;
            this.eY = eY;
        }
    }
}
=====================================================================
Found a 274 line (1228 tokens) duplication in the following files: 
Starting at line 39 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java

public class Client implements Runnable
{

    public static boolean isPrintEnable = true; //print all messages (print function)
    Socket s;
    ObjectOutputStream output;
    ObjectInputStream input;
    String ip;
    int port;
    private Game game;
    Settings sett;
    boolean wait4undoAnswer = false;
    boolean isObserver = false;

    public Client(String ip, int port)
    {
        print("running");

        this.ip = ip;
        this.port = port;
    }

    /* Method responsible for joining to the server on 
     * witch the game was created
     */
    public boolean join(int tableID, boolean asPlayer, String nick, String password) throws Error //join to server
    {
        print("running function: join(" + tableID + ", " + asPlayer + ", " + nick + ")");
        try
        {
            print("join to server: ip:" + ip + " port:" + port);
            this.isObserver = !asPlayer;
            try
            {
                s = new Socket(ip, port);
                output = new ObjectOutputStream(s.getOutputStream());
                input = new ObjectInputStream(s.getInputStream());
                //send data to server
                print("send to server: table ID");
                output.writeInt(tableID);
                print("send to server: player or observer");
                output.writeBoolean(asPlayer);
                print("send to server: player nick");
                output.writeUTF(nick);
                print("send to server: password");
                output.writeUTF(password);
                output.flush();

                int servCode = input.readInt(); //server returning code
                print("connection info: " + Connection_info.get(servCode).name());
                if (Connection_info.get(servCode).name().startsWith("err_"))
                {
                    throw new Error(Connection_info.get(servCode).name());
                }
                if (servCode == Connection_info.all_is_ok.getValue())
                {
                    return true;
                }
                else //is any bug
                {
                    return false;
                }
            }
            catch (Error err)
            {
                Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, err);
                return false;
            }
            catch (ConnectException ex)
            {
                Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
                return false;
            }

        }
        catch (UnknownHostException ex)
        {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
        catch (IOException ex)
        {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }

    /* Method responsible for running of the game
     */
    public void run()
    {
        print("running function: run()");
        boolean isOK = true;
        while (isOK)
        {
            try
            {
                String in = input.readUTF();
                print("input code: " + in);

                if (in.equals("#move")) //getting new move from server
                {
                    int beginX = input.readInt();
                    int beginY = input.readInt();
                    int endX = input.readInt();
                    int endY = input.readInt();

                    //getGame().simulateMove(beginX, beginY, endX, endY);
                }
                else if (in.equals("#message")) //getting message from server
                {
                    String str = input.readUTF();

                    getGame().getChat().addMessage(str);
                }
                else if (in.equals("#settings")) //getting settings from server
                {
                    try
                    {
                        this.sett = (Settings) input.readObject();
                    }
                    catch (ClassNotFoundException ex)
                    {
                        Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    getGame().setSettings(this.sett);
                    getGame().setClient(this);
                    getGame().getChat().client = this;
                    getGame().newGame();//start new Game
                    getGame().getChessboard().getDisplay().draw();
                }
                else if (in.equals("#errorConnection"))
                {
                    getGame().getChat().addMessage("** "+Settings.lang("error_connecting_one_of_player")+" **");
                }
                else if(in.equals("#undoAsk") && !this.isObserver)
                {
                    int result = JOptionPane.showConfirmDialog(
                        null, 
                        Settings.lang("your_oponent_plase_to_undo_move_do_you_agree"), 
                        Settings.lang("confirm_undo_move"), 
                        JOptionPane.YES_NO_OPTION
                    );
                    
                    if( result == JOptionPane.YES_OPTION )
                    {
                        //getGame().getChessboard().undo();
                        getGame().switchActive();
                        this.sendUndoAnswerPositive();
                    }
                    else 
                    {
                        this.sendUndoAnswerNegative();
                    }
                }
                else if(in.equals("#undoAnswerPositive") && ( this.wait4undoAnswer || this.isObserver ) )
                {
                    this.wait4undoAnswer = false;
                    //String lastMove = getGame().getMoves().getMoves().get( getGame().getMoves().getMoves().size() -1 );
                    //getGame().getChat().addMessage("** "+Settings.lang("permision_ok_4_undo_move")+": "+lastMove+"**");
                    //getGame().getChessboard().undo();
                }
                else if(in.equals("#undoAnswerNegative") && this.wait4undoAnswer)
                {
                    getGame().getChat().addMessage( Settings.lang("no_permision_4_undo_move") );
                }
            }
            catch (IOException ex)
            {
                isOK = false;
                getGame().getChat().addMessage("** "+Settings.lang("error_connecting_to_server")+" **");
                Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    /* Method responsible for printing on screen client informations
     */
    public static void print(String str)
    {
        if (isPrintEnable)
        {
            System.out.println("Client: " + str);
        }
    }
    
    /* Method responsible for sending the move witch was taken by a player
     */
    public void sendMove(int beginX, int beginY, int endX, int endY) //sending new move to server
    {
        print("running function: sendMove(" + beginX + ", " + beginY + ", " + endX + ", " + endY + ")");
        try
        {
            output.writeUTF("#move");
            output.writeInt(beginX);
            output.writeInt(beginY);
            output.writeInt(endX);
            output.writeInt(endY);
            output.flush();
        }
        catch (IOException ex)
        {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void sendUndoAsk()
    {
        print("sendUndoAsk");
        try
        {
            this.wait4undoAnswer = true;
            output.writeUTF("#undoAsk");
            output.flush();
        }
        catch(IOException exc)
        {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, exc);
        }
    }
    
    public void sendUndoAnswerPositive()
    {
        try
        {
            output.writeUTF("#undoAnswerPositive");
            output.flush();
        }
        catch(IOException exc)
        {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, exc);
        }        
    }
    
    public void sendUndoAnswerNegative()
    {
        try
        {
            output.writeUTF("#undoAnswerNegative");
            output.flush();
        }
        catch(IOException exc)
        {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, exc);
        }        
    }    
    
    /* Method responsible for sending to the server informations about
     * moves of a player
     */
    public void sendMassage(String str) //sending new move to server
    {
        print("running function: sendMessage(" + str + ")");
        try
        {
            output.writeUTF("#message");
            output.writeUTF(str);
            output.flush();
        }
        catch (IOException ex)
        {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

	public Game getGame() {
		return game;
	}

	public void setGame(Game game) {
		this.game = game;
	}
}
=====================================================================
Found a 244 line (1079 tokens) duplication in the following files: 
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\GameClock.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\GameClock.java

public class GameClock extends JPanel implements Runnable
{

    public Clock clock1;
    public Clock clock2;
    private Clock runningClock;
    private Settings settings;
    private Thread thread;
    private Game game;
    private String white_clock, black_clock;
    private BufferedImage background;
    public GameClock(Game game)
    {
        super();
        this.clock1 = new Clock();//white player clock
        this.clock2 = new Clock();//black player clock
        this.runningClock = this.clock1;//running/active clock
        
        this.game = game;
        this.settings = game.getSettings();
        
        this.background = new BufferedImage(600, 600, BufferedImage.TYPE_INT_ARGB);

        int time = this.settings.getTimeForGame();

        this.setTimes(time, time);
        this.setPlayers(this.settings.playerBlack, this.settings.playerWhite);

        this.thread = new Thread(this);
        if (this.settings.timeLimitSet)
        {
            thread.start();
        }
        this.drawBackground();
        this.setDoubleBuffered(true);
    }

    /** Method to init game clock
     */
    public void start()
    {
        this.thread.start();
    }

    /** Method to stop game clock
     */
    public void stop()
    {
        this.runningClock = null;

        try
        {//block this thread
            this.thread.wait();
        }
        catch (java.lang.InterruptedException exc)
        {
           // System.out.println("Error blocking thread: " + exc);
        	LogToFile.log(exc, "Error", "Error blocking thread: "   + exc.getMessage());
        }
        catch (java.lang.IllegalMonitorStateException exc1)
        {
           // System.out.println("Error blocking thread: " + exc1);
            LogToFile.log(exc1, "Error", "Error blocking thread: "  + exc1.getMessage());
        }
    }

    /** Method of drawing graphical background of clock
     */
    void drawBackground()
    {
        Graphics gr = this.background.getGraphics();
        Graphics2D g2d = (Graphics2D) gr;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                RenderingHints.VALUE_ANTIALIAS_ON);
        Font font = new Font("Serif", Font.ITALIC, 20);

        g2d.setColor(Color.WHITE);
        g2d.fillRect(5, 30, 80, 30);
        g2d.setFont(font);

        g2d.setColor(Color.BLACK);
        g2d.fillRect(85, 30, 90, 30);
        g2d.drawRect(5, 30, 170, 30);
        g2d.drawRect(5, 60, 170, 30);
        g2d.drawLine(85, 30, 85, 90);
        font = new Font("Serif", Font.ITALIC, 16);
        g2d.drawString(settings.playerWhite.getName(), 10, 50);
        g2d.setColor(Color.WHITE);
        g2d.drawString(settings.playerBlack.getName(), 100, 50);
        this.background.getGraphics();
    }

    /**
    Annotation to superclass Graphics drawing the clock graphics
     * @param g Graphics2D Capt object to paint
     */
    @Override
    public void paint(Graphics g)
    {
        
        super.paint(g);
        white_clock = this.clock1.prepareString();
        black_clock = this.clock2.prepareString();
        Graphics2D g2d = (Graphics2D) g;
        g2d.drawImage(this.background, 0, 0, this);
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                RenderingHints.VALUE_ANTIALIAS_ON);
        Font font = new Font("Serif", Font.ITALIC, 20);
        g2d.drawImage(this.background, 0, 0, this);
        g2d.setColor(Color.WHITE);
        g2d.fillRect(5, 30, 80, 30);
        g2d.setFont(font);

        g2d.setColor(Color.BLACK);
        g2d.fillRect(85, 30, 90, 30);
        g2d.drawRect(5, 30, 170, 30);
        g2d.drawRect(5, 60, 170, 30);
        g2d.drawLine(85, 30, 85, 90);
        font = new Font("Serif", Font.ITALIC, 14);
        g2d.drawImage(this.background, 0, 0, this);
        g2d.setFont(font);
        g.drawString(settings.playerWhite.getName(), 10, 50);
        g.setColor(Color.WHITE);
        g.drawString(settings.playerBlack.getName(), 100, 50);
        g2d.setFont(font);
        g.setColor(Color.BLACK);
        g2d.drawString(white_clock, 10, 80);
        g2d.drawString(black_clock, 90, 80);
    }

    /**
    Annotation to superclass Graphics updateing clock graphisc
     * @param g Graphics2D Capt object to paint
     */
    @Override
    public void update(Graphics g)
    {
        paint(g);
    }

    /** Method of swiching the players clocks
     */
    public void switch_clocks()
    {
        /*in documentation this method is called 'switch', but it's restricted name
        to switch block (in pascal called "case") - this've to be repaired in documentation by Wąsu:P*/
        if (this.runningClock == this.clock1)
        {
            this.runningClock = this.clock2;
        }
        else
        {
            this.runningClock = this.clock1;
        }
    }

    /** Method with is setting the players clocks time
     * @param t1 Capt the player time
     * @param t2 Capt the player time
     */
    public void setTimes(int t1, int t2)
    {
        /*rather in chess game players got the same time 4 game, so why in documentation
         * this method've 2 parameters ? */
        this.clock1.init(t1);
        this.clock2.init(t2);
    }

    /** Method with is setting the players clocks
     * @param p1 Capt player information
     * @param p2 Capt player information
     */
    private void setPlayers(Player p1, Player p2)
    {
        /*in documentation it's called 'setPlayer' but when we've 'setTimes' better to use
         * one convention of naming methods - this've to be repaired in documentation by Wąsu:P
        dojdziemy do tego:D:D:D*/
        if (p1.getColor() == p1.getColor().white)
        {
            this.clock1.setPlayer(p1);
            this.clock2.setPlayer(p2);
        }
        else
        {
            this.clock1.setPlayer(p2);
            this.clock2.setPlayer(p1);
        }
    }

    /** Method with is running the time on clock
     */
    public void run()
    {
        while (true)
        {
            if (this.runningClock != null)
            {
                if (this.runningClock.decrement())
                {
                    repaint();
                    try
                    {
                        thread.sleep(1000);
                    }
                    catch (InterruptedException e)
                    {
                       // System.out.println("Some error in gameClock thread: " + e);
                    	LogToFile.log(null, "INFO", "Some error in gameClock thread: " + e.getMessage());
                    }
                    //if(this.game.blockedChessboard)
                    //  this.game.blockedChessboard = false;
                }
                if (this.runningClock != null && this.runningClock.get_left_time() == 0)
                {
                    this.timeOver();
                }
            }
        }
    }

    /** Method of checking is the time of the game is not over
     */
    private void timeOver()
    {
        String color = new String();
        if (this.clock1.get_left_time() == 0)
        {//Check which player win
            color = this.clock2.getPlayer().getColor().toString();
        }
        else if (this.clock2.get_left_time() == 0)
        {
            color = this.clock1.getPlayer().getColor().toString();
        }
        else
        {//if called in wrong moment
           // System.out.println("Time over called when player got time 2 play");
        	 LogToFile.log(null, "INFO", "Time over called when player got time 2 play");
        }
        this.game.endGame("Time is over! " + color + " player win the game.");
        this.stop();

        //JOptionPane.showMessageDialog(this, "koniec czasu");
    }
}
=====================================================================
Found a 183 line (912 tokens) duplication in the following files: 
Starting at line 31 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessTabbedPane.java
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessTabbedPane.java

public class JChessTabbedPane extends JTabbedPane implements MouseListener, ImageObserver
{

    private TabbedPaneIcon closeIcon;
    private Image addIcon = null;
    private Image clickedAddIcon = null;
    private Image unclickedAddIcon = null;
    private Rectangle addIconRect = null;

    public JChessTabbedPane()
    {
        super();
        this.closeIcon = new TabbedPaneIcon(this.closeIcon);
        this.unclickedAddIcon = GUI.loadImage("add-tab-icon.png");
        this.clickedAddIcon = GUI.loadImage("clicked-add-tab-icon.png");
        this.addIcon = this.unclickedAddIcon;
        this.setDoubleBuffered(true);
        super.addMouseListener(this);
    }

    @Override
    public void addTab(String title, Component component)
    {
        this.addTab(title, component, null);
    }

    public void addTab(String title, Component component, Icon closeIcon)
    {
        super.addTab(title, new TabbedPaneIcon(closeIcon), component);
        System.out.println("Present number of tabs: " + this.getTabCount());
        this.updateAddIconRect();
    }

    public void mouseReleased(MouseEvent e)
    {
    }

    public void mousePressed(MouseEvent e)
    {
    }

    private void showNewGameWindow()
    {
        if (JChessApp.getJcv().newGameFrame == null)
        {
            JChessApp.getJcv().newGameFrame = new NewGameWindow();
        }
        JChessApp.getApplication().show(JChessApp.getJcv().newGameFrame);
    }

    @Override
    public void mouseClicked(MouseEvent e)
    {
        Rectangle rect; 
        int tabNumber = getUI().tabForCoordinate(this, e.getX(), e.getY());
        if (tabNumber >= 0)
        {
            rect = ((TabbedPaneIcon) getIconAt(tabNumber)).getBounds();
            if (rect.contains(e.getX(), e.getY()))
            {
                System.out.println("Removing tab with " + tabNumber + " number!...");
                this.removeTabAt(tabNumber);//remove tab
                this.updateAddIconRect();
            }
            if(this.getTabCount() == 0)
            {
                this.showNewGameWindow();
            }
        }
        else if (this.addIconRect != null && this.addIconRect.contains(e.getX(), e.getY()))
        {
            System.out.println("newGame by + button");
            this.showNewGameWindow();
        }
        //System.out.println("x:" +e.getX()+" y: "+e.getY()+" x:"+this.addIconRect.x+" y::"+this.addIconRect.y+" width:"+this.addIconRect.width+" height: "+this.addIconRect.height);
    }

    public void mouseEntered(MouseEvent e)
    {
    }

    public void mouseExited(MouseEvent e)
    {
    }

    private void updateAddIconRect()
    {
        if (this.getTabCount() > 0)
        {
            Rectangle rect = this.getBoundsAt(this.getTabCount() - 1);
            this.addIconRect = new Rectangle(rect.x + rect.width + 5, rect.y, this.addIcon.getWidth(this), this.addIcon.getHeight(this));
        }
        else
        {
            this.addIconRect = null;
        }
    }

    private Rectangle getAddIconRect()
    {
        return this.addIconRect;
    }

    @Override
    public boolean imageUpdate(Image img, int infoflags, int x, int y, int width, int height)
    {
        super.imageUpdate(img, infoflags, x, y, width, height);
        this.updateAddIconRect();
        return true;
    }

    @Override
    public void paint(Graphics g)
    {
        super.paint(g);
        Rectangle rect = this.getAddIconRect();
        if (rect != null)
        {
            g.drawImage(this.addIcon, rect.x, rect.y, null);
        }
    }

    @Override
    public void update(Graphics g)
    {
        this.repaint();
    }
}

class TabbedPaneIcon implements Icon
{

    private int x_pos;
    private int y_pos;
    private int width;
    private int height;
    private Icon fileIcon;

    public TabbedPaneIcon(Icon fileIcon)
    {
        this.fileIcon = fileIcon;
        width = 16;
        height = 16;
    }//--endOf-TabbedPaneIcon--

    @Override
    public void paintIcon(Component c, Graphics g, int x, int y)
    {
        this.x_pos = x;
        this.y_pos = y;

        Color col = g.getColor();

        g.setColor(Color.black);
        int y_p = y + 2;
        g.drawLine(x + 3, y_p + 3, x + 10, y_p + 10);
        g.drawLine(x + 3, y_p + 4, x + 9, y_p + 10);
        g.drawLine(x + 4, y_p + 3, x + 10, y_p + 9);
        g.drawLine(x + 10, y_p + 3, x + 3, y_p + 10);
        g.drawLine(x + 10, y_p + 4, x + 4, y_p + 10);
        g.drawLine(x + 9, y_p + 3, x + 3, y_p + 9);
        g.setColor(col);
        if (fileIcon != null)
        {
            fileIcon.paintIcon(c, g, x + width, y_p);
        }
    }//--endOf-PaintIcon--

    public int getIconWidth()
    {
        return width + (fileIcon != null ? fileIcon.getIconWidth() : 0);
    }//--endOf-getIconWidth--

    public int getIconHeight()
    {
        return height;
    }//--endOf-getIconHeight()--

    public Rectangle getBounds()
    {
        return new Rectangle(x_pos, y_pos, width, height);
    }
}
=====================================================================
Found a 195 line (856 tokens) duplication in the following files: 
Starting at line 221 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawLocalSettings.java
Starting at line 197 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawLocalSettings.java

			System.out.println("*** New Game: " + pl1.getName() + " vs. " + pl2.getName() + " vs. " + pl3.getName());
			
			// System.out.println(this.time4Game.getActionCommand());
			// this.time4Game.getComponent(this.time4Game.getSelectedIndex());
			/*
			 * System.out.println("****************\nStarting new game: " +
			 * pl1.getName() + " vs. " + pl2.getName() + "\ntime 4 game: " +
			 * sett.timeForGame + "\ntime limit set: " + sett.timeLimitSet +
			 * "\nwhite on top?: " + sett.upsideDown +
			 * "\n****************");//4test
			 */
			LogToFile.log(null, "INFO",
					"****************\nStarting new game: " + pl1.getName() + " vs. " + pl2.getName() + " vs. "
							+ pl2.getName()
							+ "\ntime 4 game: " + sett.timeForGame + "\ntime limit set: " + sett.timeLimitSet
							+ "\nwhite on top?: " + sett.upsideDown + "\n****************");
			newGUI.newGame();// start new Game
			this.parent.setVisible(false);// hide parent
			newGUI.getChessboard().getDisplay().repaint();
			// newGUI.getChessboard().display.showMessageDialog(this,"test");
			newGUI.getChessboard().getDisplay().draw();
		}

	}

	private void trimName(JTextField name) {
		if (name.getText().length() > 9) {// make names short to 10 digits
			name.setText(this.trimString(name, 9));
		}
	}

	DrawLocalSettings(JDialog parent) {
		super();
		// this.setA//choose oponent
		this.parent = parent;
		this.color = new JComboBox<String>(colors);
		this.color.setEnabled(false);
		this.gbl = new GridBagLayout();
		this.gbc = new GridBagConstraints();
		this.sep = new JSeparator();
		this.okButton = new JButton(Settings.lang("ok"));
		this.compLevLab = new JLabel(Settings.lang("computer_level"));

		this.firstName = new JTextField("", 10);
		this.firstName.setSize(new Dimension(200, 50));
		this.secondName = new JTextField("", 10);
		this.secondName.setSize(new Dimension(200, 50));
		this.thirdName = new JTextField("", 10);
		this.thirdName.setSize(new Dimension(200, 50));
		
		this.firstNameLab = new JLabel(Settings.lang("first_player_name") + ": ");
		this.secondNameLab = new JLabel(Settings.lang("second_player_name") + ": ");
		this.thirdNameLab = new JLabel("3rd player name: ");
		
		this.oponentChoos = new ButtonGroup();
		this.computerLevel = new JSlider();
		this.upsideDown = new JCheckBox(Settings.lang("upside_down"));
		this.upsideDown.setEnabled(false);
		/*this.threePlayers = new JCheckBox("Three Players", true);
		threePlayers.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				if (thirdName.isEnabled()==true){
					thirdName.setEnabled(false);
				}else {
					thirdName.setEnabled(true);
				}
			}
		});
		*/
		this.timeGame = new JCheckBox(Settings.lang("time_game_min"));
		//this.time4Game = new JComboBox(times);

		this.oponentComp = new JRadioButton(Settings.lang("against_computer"), false);
		this.oponentHuman = new JRadioButton(Settings.lang("against_other_human"), true);

		this.setLayout(gbl);
		this.oponentComp.addActionListener(this);
		this.oponentHuman.addActionListener(this);
		this.okButton.addActionListener(this);

		this.secondName.addActionListener(this);

		this.oponentChoos.add(oponentComp);
		this.oponentChoos.add(oponentHuman);
		this.computerLevel.setEnabled(false);
		this.computerLevel.setMaximum(3);
		this.computerLevel.setMinimum(1);

		// Row 0
		this.gbc.gridx = 1;
		this.gbc.gridy = 0;
		//this.gbl.setConstraints(threePlayers, gbc);
		//this.add(threePlayers);
		
		// Row 1
//		this.gbc.gridx = 0;
		this.gbc.gridy = 1;
//		this.gbc.insets = new Insets(3, 3, 3, 3);
//		this.gbl.setConstraints(oponentComp, gbc);
//		this.add(oponentComp);
		this.gbc.gridx = 1;
		this.gbl.setConstraints(oponentHuman, gbc);
		this.add(oponentHuman);
		
		// Row 2
		this.gbc.gridx = 0;
		this.gbc.gridy = 2;
		this.gbl.setConstraints(firstNameLab, gbc);
		this.add(firstNameLab);
		
		// Row 3
		this.gbc.gridx = 0;
		this.gbc.gridy = 3;
		this.gbl.setConstraints(firstName, gbc);
		this.add(firstName);
		this.gbc.gridx = 1;
		this.gbc.gridy = 3;
		this.gbl.setConstraints(color, gbc);
		this.add(color);
		
		// Row 4
		this.gbc.gridx = 0;
		this.gbc.gridy = 4;
		this.gbl.setConstraints(secondNameLab, gbc);
		this.add(secondNameLab);
		
		// Row 5
		this.gbc.gridy = 5;
		this.gbl.setConstraints(secondName, gbc);
		this.add(secondName);
		
		// Row 6
		this.gbc.gridy = 6;
		this.gbl.setConstraints(thirdNameLab, gbc);
		this.add(thirdNameLab);
		
//		this.gbc.insets = new Insets(0, 0, 0, 0);
//		this.gbl.setConstraints(compLevLab, gbc);
//		this.add(compLevLab);
		
		// Row 7
		this.gbc.gridy = 7;
		this.gbl.setConstraints(thirdName, gbc);
		this.add(thirdName);
//		this.gbl.setConstraints(computerLevel, gbc);
//		this.add(computerLevel);
		
		// Row 8
		this.gbc.gridy = 8;
		this.gbl.setConstraints(upsideDown, gbc);
		this.add(upsideDown);
		
		// Row 9
//		this.gbc.gridy = 9;
//		this.gbc.gridwidth = 1;
//		this.gbl.setConstraints(timeGame, gbc);
//		this.add(timeGame);
//		this.gbc.gridx = 1;
//		this.gbc.gridy = 8;
//		this.gbc.gridwidth = 1;
//		this.gbl.setConstraints(time4Game, gbc);
//		this.add(time4Game);
		
		// Row 10
		this.gbc.gridx = 1;
		this.gbc.gridy = 10;
		this.gbc.gridwidth = 0;
		this.gbl.setConstraints(okButton, gbc);
		this.add(okButton);
		
		this.oponentComp.setEnabled(false);// for now, becouse not implemented!

	}

	/**
	 * Method responsible for triming white symbols from strings
	 * 
	 * @param txt
	 *            Where is capt value to equal
	 * @param length
	 *            How long is the string
	 * @return result trimmed String
	 */
	public String trimString(JTextField txt, int length) {
		String result = new String();
		try {
			result = txt.getText(0, length);
		} catch (BadLocationException exc) {
			// System.out.println("Something wrong in editables: \n" + exc);
			LogToFile.log(exc, "Error", "Something wrong in editables: \n" + exc.getMessage());
		}
		return result;
	}
}
=====================================================================
Found a 162 line (828 tokens) duplication in the following files: 
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardInitialization.java
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardInitialization.java

public class SquareBoardInitialization {
	private Square[][] squares;
	boolean upsideDown;
	SquareBoard board;
	public King kingWhite;
	public King kingBlack;

	public SquareBoardInitialization(boolean upsideDown, SquareBoard board) {
		this.upsideDown = upsideDown;
		this.board=board;
		setSquares(new Square[8][8]);//Initialization of 8x8 chessboard
		createSquares();
	}
	/**
	 * Method createSquares creates an array of 8x8 Squares
	 * 
	 */
	private void createSquares() {
		
		for (int i = 0; i < 8; i++) {// create object for each square
			for (int y = 0; y < 8; y++) {
				getSquares()[i][y] = new Square(i, y, null);
			}
		} // --endOf--create object for each square
	}

	/**
	 * Method setPieces on begin of new game or loaded game
	 * 
	 * @param places
	 *            string with pieces to set on chessboard
	 * @param plWhite
	 *            reference to white player
	 * @param plBlack
	 *            reference to black player
	 */
	public void setPieces(Player plWhite, Player plBlack) {

		
			if (upsideDown) {
				this.setPieces4NewGame(true, plWhite, plBlack);
			} else {
				this.setPieces4NewGame(false, plWhite, plBlack);
			}

		} 

	/**
	 *
	 */
	private void setPieces4NewGame(boolean upsideDown, Player plWhite, Player plBlack) {

		/* WHITE PIECES */
		Player player = plBlack;
		Player player1 = plWhite;
		if (upsideDown) // if white on Top
		{
			player = plWhite;
			player1 = plBlack;
		}
		this.setFigures4NewGame(0, player, upsideDown);
		this.setPawns4NewGame(1, player);
		this.setFigures4NewGame(7, player1, upsideDown);
		this.setPawns4NewGame(6, player1);
	}/*--endOf-setPieces(boolean upsideDown)--*/

	/**
	 * method set Figures in row (and set Queen and King to right position)
	 * 
	 * @param i
	 *            row where to set figures (Rook, Knight etc.)
	 * @param player
	 *            which is owner of pawns
	 * @param upsideDown
	 *            if true white pieces will be on top of chessboard
	 */
	private void setFigures4NewGame(int i, Player player, boolean upsideDown) {

		if (i != 0 && i != 7) {
			System.out.println("error setting figures like rook etc.");
			return;
		} else if (i == 0) {
			player.setGoDown(true);
		}

		//Rook
		ArrayList <IMove> rookMoves = new ArrayList<>();
		rookMoves.add(new RookMoves());
		getSquares()[0][i].setPiece(new Rook(board, player, rookMoves));
		getSquares()[7][i].setPiece(new Rook(board, player, rookMoves));
		
		//Knight
		ArrayList <IMove> knightMoves = new ArrayList<>();
		knightMoves.add(new KnightMoves());
		getSquares()[1][i].setPiece(new Knight(board, player, knightMoves));
		getSquares()[6][i].setPiece(new Knight(board, player, knightMoves));
		
		//Bishop
		ArrayList <IMove> bishopMoves = new ArrayList<>();
		bishopMoves.add(new BishopMoves());
		getSquares()[2][i].setPiece(new Bishop(board, player, bishopMoves));
		getSquares()[5][i].setPiece(new Bishop(board, player, bishopMoves));
		
		//THE QUEEN MOTHER OF DRAGONS
		ArrayList <IMove> queenMoves = new ArrayList<>();
		queenMoves.add(new RookMoves());
		queenMoves.add(new BishopMoves());

		ArrayList <IMove> kingMoves = new ArrayList<>();
		kingMoves.add(new KingMoves());
		
		if (upsideDown) {
		getSquares()[4][i].setPiece(new Queen(board, player, queenMoves));
		
			if (player.getColor() == Player.colors.white) {
				
				getSquares()[3][i].setPiece(kingWhite = new King(board, player, kingMoves));
			} else {
				getSquares()[3][i].setPiece(kingBlack = new King(board, player, kingMoves));
			}
		} else {
			getSquares()[3][i].setPiece(new Queen(board,player, queenMoves));
			
			if (player.getColor() == Player.colors.white) {
				getSquares()[4][i].setPiece(kingWhite = new King(board, player, kingMoves));
			} else {
				getSquares()[4][i].setPiece(kingBlack = new King(board, player, kingMoves));
			}
		}
	}

	/**
	 * method set Pawns in row
	 * 
	 * @param i
	 *            row where to set pawns
	 * @param player
	 *            player which is owner of pawns
	 */
	private void setPawns4NewGame(int i, Player player) {
		if (i != 1 && i != 6) {
			System.out.println("error setting pawns etc.");
			return;
		}
		
		ArrayList <IMove> pawnMoves = new ArrayList<>();
		pawnMoves.add(new PawnMoves());
		
		for (int x = 0; x < 8; x++) {
			getSquares()[x][i].setPiece(new Pawn(board, player, pawnMoves));
		}
	}

	public Square[][] getSquares() {
		return squares;
	}

	public void setSquares(Square[][] squares) {
		this.squares = squares;
	}

}
=====================================================================
Found a 138 line (772 tokens) duplication in the following files: 
Starting at line 80 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 81 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java

							LogToFile.log(exc, "Error", "error creating file: ");
						}
					} else if (selFile.exists()) {
						int opt = JOptionPane.showConfirmDialog(tempGUI, Settings.lang("file_exists"),
								Settings.lang("file_exists"), JOptionPane.YES_NO_OPTION);
						if (opt == JOptionPane.NO_OPTION)// if user choose to
															// now overwrite
						{
							continue; // go back to file choose
						}
					}
					if (selFile.canWrite()) {
						tempGUI.saveGame(selFile);
					}
					// System.out.println(fc.getSelectedFile().isFile());
					LogToFile.log(null, "INFO", "fc.getSelectedFile().isFile() = " + fc.getSelectedFile().isFile());
					break;
				} else if (retVal == JFileChooser.CANCEL_OPTION) {
					break;
				}
				/// JChessView.gui.game.saveGame(fc.);
			}
		} else if (target == loadGameItem) { // loadGame
			JFileChooser fc = new JFileChooser();
			int retVal = fc.showOpenDialog(this.gamesPane);
			if (retVal == JFileChooser.APPROVE_OPTION) {
				File file = fc.getSelectedFile();
				if (file.exists() && file.canRead()) {
					Game.loadGame(file);
				}
			}
		} else if (target == this.themeSettingsMenu) {
			try {
				ThemeChooseWindow choose = new ThemeChooseWindow(this.getFrame());
				JChessApp.getApplication().show(choose);
			} catch (Exception exc) {
				JOptionPane.showMessageDialog(JChessApp.getApplication().getMainFrame(), exc.getMessage());
				// System.out.println("Something wrong creating window - perhaps
				// themeList is null");
				
				
				LogToFile.log(exc, "Error", "Something wrong creating window - perhaps themeList is null");
				exc.printStackTrace();
			}
		}
	}

	/// --endOf- don't delete, because they're interfaces for MouseEvent

	public JChessView(SingleFrameApplication app) {
		super(app);

		initComponents();
		// status bar initialization - message timeout, idle icon and busy
		// animation, etc
		ResourceMap resourceMap = getResourceMap();
		int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
		messageTimer = new Timer(messageTimeout, new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				statusMessageLabel.setText("");
			}
		});
		messageTimer.setRepeats(false);
		int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
		for (int i = 0; i < busyIcons.length; i++) {
			busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
		}
		busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
				statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
			}
		});
		idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
		statusAnimationLabel.setIcon(idleIcon);
		progressBar.setVisible(false);

		// connecting action tasks to status bar via TaskMonitor
		TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
		taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
			public void propertyChange(java.beans.PropertyChangeEvent evt) {
				String propertyName = evt.getPropertyName();
				if ("started".equals(propertyName)) {
					if (!busyIconTimer.isRunning()) {
						statusAnimationLabel.setIcon(busyIcons[0]);
						busyIconIndex = 0;
						busyIconTimer.start();
					}
					progressBar.setVisible(true);
					progressBar.setIndeterminate(true);
				} else if ("done".equals(propertyName)) {
					busyIconTimer.stop();
					statusAnimationLabel.setIcon(idleIcon);
					progressBar.setVisible(false);
					progressBar.setValue(0);
				} else if ("message".equals(propertyName)) {
					String text = (String) (evt.getNewValue());
					statusMessageLabel.setText((text == null) ? "" : text);
					messageTimer.restart();
				} else if ("progress".equals(propertyName)) {
					int value = (Integer) (evt.getNewValue());
					progressBar.setVisible(true);
					progressBar.setIndeterminate(false);
					progressBar.setValue(value);
				}
			}
		});

	}

	@Action
	public void showAboutBox() {
		if (aboutBox == null) {
			JFrame mainFrame = JChessApp.getApplication().getMainFrame();
			aboutBox = new JChessAboutBox(mainFrame);
			aboutBox.setLocationRelativeTo(mainFrame);
		}
		JChessApp.getApplication().show(aboutBox);
	}

	public String showPawnPromotionBox(String color) {
		if (promotionBox == null) {
			JFrame mainFrame = JChessApp.getApplication().getMainFrame();
			promotionBox = new PawnPromotionWindow(mainFrame, color);
			promotionBox.setLocationRelativeTo(mainFrame);
			promotionBox.setModal(true);

		}
		promotionBox.setColor(color);
		JChessApp.getApplication().show(promotionBox);

		return promotionBox.result;
	}

	public String showSaveWindow() {

		return "";
	}
=====================================================================
Found a 163 line (758 tokens) duplication in the following files: 
Starting at line 58 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawLocalSettings.java
Starting at line 55 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawLocalSettings.java

public class DrawLocalSettings extends JPanel implements ActionListener, TextListener {

	JDialog parent;// Needed to close newGame window
	JComboBox<String> color;// To choose color of player
	JRadioButton oponentComp;// Choose opponent
	JRadioButton oponentHuman;// Choose opponent (human)
	ButtonGroup oponentChoos;// group 4 radio buttons
	JFrame localPanel;
	JLabel compLevLab;
	JSlider computerLevel;// slider to choose jChess Engine level
	JTextField firstName;// editable field 4 nickname
	JTextField secondName;// editable field 4 nickname
	JTextField thirdName;
	JLabel firstNameLab;
	JLabel secondNameLab;
	JLabel thirdNameLab;
	JCheckBox upsideDown;// if true draw chessboard upsideDown(white on top)
	//JCheckBox threePlayers;
	GridBagLayout gbl;
	GridBagConstraints gbc;
	Container cont;
	JSeparator sep;
	JButton okButton;
	JCheckBox timeGame;
	JComboBox time4Game;
	String colors[] = { Settings.lang("White"), Settings.lang("Black"),  Settings.lang("Blue"),  Settings.lang("Red"),  Settings.lang("Green") };
	String times[] = { "1", "3", "5", "8", "10", "15", "20", "25", "30", "60", "120" };

	;

	/**
	 * Method witch is checking correction of edit tables
	 * 
	 * @param e
	 *            Object where is saving this what contents edit tables
	 */
	public void textValueChanged(TextEvent e) {
		Object target = e.getSource();
		if (target == this.firstName || target == this.secondName || target == this.thirdName) {
			JTextField temp = new JTextField();
			if (target == this.firstName) {
				temp = this.firstName;
			} else if (target == this.secondName) {
				temp = this.secondName;
			} else if (target == this.thirdName) {
				temp = this.thirdName;
			}

			int len = temp.getText().length();
			if (len > 8) {
				try {
					temp.setText(temp.getText(0, 7));
				} catch (BadLocationException exc) {
					LogToFile.log(exc, "Error", "Something wrong in editables: \n" + exc.getMessage());
				}
			}
		}
	}

	/**
	 * Method responsible for changing the options which can make a player when
	 * he want to start new local game
	 * 
	 * @param e
	 *            where is saving data of performed action
	 */
	public void actionPerformed(ActionEvent e) {
		Object target = e.getSource();

		if (target == this.oponentComp) // toggle enabled of controls depends of
										// opponent (if computer)
		{
			this.computerLevel.setEnabled(true);// enable level of computer
												// abilities
			this.secondName.setEnabled(false);// disable field with name of
												// player2
		} else if (target == this.oponentHuman) // else if opponent will be
												// HUMAN
		{
			this.computerLevel.setEnabled(false);// disable level of computer
													// abilities
			this.secondName.setEnabled(true);// enable field with name of
												// player2
			this.thirdName.setEnabled(true);// enable field with name of

		} else if (target == this.okButton) // if clicked OK button (on finish)
		{
			trimName(this.firstName);
			trimName(this.secondName);
			trimName(this.thirdName);

			if (!this.oponentComp.isSelected()
					&& (this.firstName.getText().length() == 0 || this.secondName.getText().length() == 0 || this.thirdName.getText().length() == 0 )) {
				JOptionPane.showMessageDialog(this, Settings.lang("fill_names"));
				return;
			}
			// May be deleted since no computer-player is available
			if ((this.oponentComp.isSelected() && this.firstName.getText().length() == 0)) {
				JOptionPane.showMessageDialog(this, Settings.lang("fill_name"));
				return;
			}

			Game newGUI = JChessApp.getJcv().addNewTab(this.firstName.getText() + " vs. " + this.secondName.getText()+ " vs. " + this.thirdName.getText());
			Settings sett = newGUI.getSettings();// sett local settings variable

			sett.gameMode = Settings.gameModes.newGame;
			sett.gameType = Settings.gameTypes.local;

			Player pl1 = sett.playerWhite;// set local player variable
			Player pl2 = sett.playerBlack;// set local player variable
			Player pl3 = sett.playerBlue;

			if (this.color.getActionCommand().equals("biały")) // if first
																// player is
																// white
			{
				pl1.setName(this.firstName.getText());// set name of player
				pl2.setName(this.secondName.getText());// set name of player
				pl3.setName(this.thirdName.getText());// set name of player

			} else // else change names
			{
				pl2.setName(this.firstName.getText());// set name of player
				pl1.setName(this.secondName.getText());// set name of player
				pl3.setName(this.thirdName.getText());// set name of player
			}
			
			pl1.setType(Player.playerTypes.localUser);// set type of player
			pl2.setType(Player.playerTypes.localUser);// set type of player
			
			if (this.oponentComp.isSelected()) // if computer opponent is checked
			{
				pl3.setType(Player.playerTypes.computer);
			} else {
				pl3.setType(Player.playerTypes.localUser);// set type of player

			}
			sett.players.add(pl1);
			sett.players.add(pl2);
			sett.players.add(pl3);

			/*
			if (this.upsideDown.isSelected()) // if upsideDown is checked
			{
				sett.upsideDown = true;
			} else {
				sett.upsideDown = false;
			}
			if (this.timeGame.isSelected()) // if timeGame is checked
			{
				String value = this.times[this.time4Game.getSelectedIndex()];// set
																				// time
																				// for
																				// game
				Integer val = new Integer(value);
				sett.timeLimitSet = true;
				sett.timeForGame = (int) val * 60;// set time for game and mult
													// it to seconds
				newGUI.getGameClock().setTimes(sett.timeForGame, sett.timeForGame);
				newGUI.getGameClock().start();
			}
			*/
			LogToFile.log(null, "INFO", this.time4Game.getActionCommand());
=====================================================================
Found a 121 line (717 tokens) duplication in the following files: 
Starting at line 39 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\ThemeChooseWindow.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\ThemeChooseWindow.java

public class ThemeChooseWindow extends JDialog implements ActionListener, ListSelectionListener
{

    JList themesList;
    ImageIcon themePreview;
    GridBagLayout gbl;
    public String result;
    GridBagConstraints gbc;
    JButton themePreviewButton;
    JButton okButton;

    public ThemeChooseWindow(Frame parent) throws Exception
    {
        super(parent);

        File dir = new File(GUI.getJarPath() +File.separator +  "main" + File.separator+ "java" + File.separator+ "theme"+File.separator);
        
        System.out.println("Theme path: "+dir.getPath());

        File[] files = dir.listFiles();
        if (files != null && dir.exists())
        {
            this.setTitle(Settings.lang("choose_theme_window_title"));
            Dimension winDim = new Dimension(550, 230);
            this.setMinimumSize(winDim);
            this.setMaximumSize(winDim);
            this.setSize(winDim);
            this.setResizable(false);
            this.setLayout(null);
            this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);            
            String[] dirNames = new String[files.length];
            for (int i = 0; i < files.length; i++)
            {
                dirNames[i] = files[i].getName();
            }
            //this.themesList = new JList(dirNames);
            this.themesList.setLocation(new Point(10, 10));
            this.themesList.setSize(new Dimension(100, 120));
            this.add(this.themesList);
            this.themesList.setSelectionMode(0);
            this.themesList.addListSelectionListener(this);
            Properties prp = GUI.getConfigFile();
            
            this.gbl = new GridBagLayout();
            this.gbc = new GridBagConstraints();
            try
            {
                this.themePreview = new ImageIcon(GUI.loadImage("Preview.png"));//JChessApp.class.getResource("theme/"+GUI.configFile.getProperty("THEME")+"/images/Preview.png"));
            }
            catch (java.lang.NullPointerException exc)
            {
                System.out.println("Cannot find preview image: " + exc);
                this.themePreview = new ImageIcon(JChessApp.class.getResource("theme/noPreview.png"));
                return;
            }
            this.result = "";
            this.themePreviewButton = new JButton(this.themePreview);
            this.themePreviewButton.setLocation(new Point(110, 10));
            this.themePreviewButton.setSize(new Dimension(420, 120));
            this.add(this.themePreviewButton);
            this.okButton = new JButton("OK");
            this.okButton.setLocation(new Point(175, 140));
            this.okButton.setSize(new Dimension(200, 50));
            this.add(this.okButton);
            this.okButton.addActionListener(this);
            this.setModal(true);
        }
        else
        {
            throw new Exception(Settings.lang("error_when_creating_theme_config_window"));
        }

    }

    @Override
    public void valueChanged(ListSelectionEvent event)
    {
        String element = this.themesList.getModel().getElementAt(this.themesList.getSelectedIndex()).toString();

        String path = GUI.getJarPath() +File.separator +  "jchess"+ File.separator + "theme/";

        //System.out.println(path + element + "/images/Preview.png");
        LogToFile.log(null,"INFO", path + element + "/images/Preview.png");
        this.themePreview = new ImageIcon(path + element + "/images/Preview.png");
        this.themePreviewButton.setIcon(this.themePreview);
    }

    /** Method wich is changing a pawn into queen, rook, bishop or knight
     * @param arg0 Capt information about performed action
     */
    public void actionPerformed(ActionEvent evt)
    {
        if (evt.getSource() == this.okButton)
        {
            Properties prp = GUI.getConfigFile();
            int element = this.themesList.getSelectedIndex();
            String name = this.themesList.getModel().getElementAt(element).toString();
            if (GUI.themeIsValid(name))
            {
                prp.setProperty("THEME", name);
                try
                {
                    //FileOutputStream fOutStr = new FileOutputStream(ThemeChooseWindow.class.getResource("config.txt").getFile());
                    FileOutputStream fOutStr = new FileOutputStream("config.txt");
                    prp.store(fOutStr, null);
                    fOutStr.flush();
                    fOutStr.close();
                }
                catch (java.io.IOException exc)
                {
                	exc.printStackTrace();
                }
                JOptionPane.showMessageDialog(this, Settings.lang("changes_visible_after_restart"));
                this.setVisible(false);

            }
           // System.out.print(prp.getProperty("THEME"));
            LogToFile.log(null,"INFO", prp.getProperty("THEME"));
        }
    }
}
=====================================================================
Found a 94 line (713 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KingMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KingMoves.java

public class KingMoves implements IMove {
	
	public void regularMove(Piece piece1,  ArrayList<Square> list, int x, int y){
		King piece = (King) piece1;
		for (int i = x - 1; i <= x + 1; i++) {
			for (int j = y - 1; j <= y + 1; j++) {
				if (!piece.pieceBehaviour.isout(i, j)) {// out of bounds
														// protection
					Square sq = piece.getChessboard().getSquares()[i][j];
					if (piece.getSquare() == sq) {// if we're checking square on
													// which is King
						continue;
					} else {
						if (piece.pieceBehaviour.checkPiece(i, j)) {// if square
																	// is empty
							if (piece.isSafe(sq)) {
								list.add(sq);
							}
						}
					}
				}
			}
		}

	}
	
	public void castlingLeftMove(Piece piece1, ArrayList<Square> list, int x, int y){
			King piece = (King) piece1;
			boolean canCastling = true;

			Rook rook = (Rook) piece.getChessboard().getSquares()[0][y].piece;
			if (!rook.wasMotion()) {
				for (int i = x - 1; i > 0; i--) {// go
																			// left
					if (piece.getChessboard().getSquares()[i][y].piece != null) {
						canCastling = false;
						break;
					}
				}
				
				Square sq = piece.getChessboard().getSquares()[x - 2][y];
				Square sq1 = piece.getChessboard().getSquares()[x - 1][y];
				if (canCastling && piece.isSafe(sq) && piece.isSafe(sq1)) { 
					// can do castling when neither sq nor sq1 is checked
					list.add(sq);
				}
			}
		}
	
	public void castlingRightMove(Piece piece1, ArrayList<Square> list, int x, int y){
		King piece = (King) piece1;
		boolean canCastling = true;

		Rook rook = (Rook) piece.getChessboard().getSquares()[7][y].piece;
		if (!rook.wasMotion()) {
			for (int i = x + 1; i < 7; i++) {// go
																		// left
				if (piece.getChessboard().getSquares()[i][y].piece != null) {
					canCastling = false;
					break;
				}
			}
			
			Square sq = piece.getChessboard().getSquares()[x + 2][y];
			Square sq1 = piece.getChessboard().getSquares()[x + 1][y];
			if (canCastling && piece.isSafe(sq) && piece.isSafe(sq1)) { 
				// can do castling when neither sq nor sq1 is checked
				list.add(sq);
			}
		}
	}
	
	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing){
		ArrayList<Square> list = new ArrayList<>();
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		regularMove(piece, list, x, y);
		King king = (King) piece;
		if (!king.wasMotion && !king.isChecked()) {
			// check if king was not moved before

			if (king.getChessboard().getSquares()[0][y].piece != null
					&& king.getChessboard().getSquares()[0][y].piece.getName().equals("Rook")) {
				castlingLeftMove(king, list, x, y);
			}
			if (king.getChessboard().getSquares()[7][y].piece != null
					&& king.getChessboard().getSquares()[0][y].piece.getName().equals("Rook")) {
				castlingLeftMove(king, list, x, y);
			}
		}
		
		
		return list;
	}
}
=====================================================================
Found a 175 line (710 tokens) duplication in the following files: 
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Server.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Server.java

public class Server implements Runnable
{

    public static boolean isPrintEnable = true; //print all messages (print function)
    public static Map<Integer, Table> tables;
    public static int port = 4449;
    private static ServerSocket ss;
    private static boolean isRunning = false;

    public Server()
    {
        if (!Server.isRunning) //run server if isn't running previous
        {
            runServer();

            Thread thread = new Thread(this);
            thread.start();

            Server.isRunning = true;
        }
    }

    public static boolean isRunning()
    {//is server running?

        return isRunning;
    }

    private static void runServer()
    {//run server

        try
        {
            ss = new ServerSocket(port);
            print("running");
        }
        catch (IOException ex)
        {
            Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
        }

        tables = new HashMap<Integer, Table>();
    }

    public void run() //listening
    {

        print("listening port: " + port);
        while (true)
        {
            Socket s;
            ObjectInputStream input;
            ObjectOutputStream output;

            try
            {
                s = ss.accept();
                input = new ObjectInputStream(s.getInputStream());
                output = new ObjectOutputStream(s.getOutputStream());

                print("new connection");

                //readed all data
                int tableID = input.readInt();
                print("readed table ID: " + tableID);
                boolean joinAsPlayer = input.readBoolean();
                print("readed joinAsPlayer: " + joinAsPlayer);
                String nick = input.readUTF();
                print("readed nick: " + nick);
                String password = input.readUTF();
                print("readed password: " + password);
                //---------------

                if (!tables.containsKey(tableID))
                {
                    print("bad table ID");
                    output.writeInt(Connection_info.err_bad_table_ID.getValue());
                    output.flush();
                    continue;
                }
                Table table = tables.get(tableID);

                if (!main.java.MD5.encrypt(table.password).equals(password))
                {
                    print("bad password: " + main.java.MD5.encrypt(table.password) + " != " + password);
                    output.writeInt(Connection_info.err_bad_password.getValue());
                    output.flush();
                    continue;
                }

                if (joinAsPlayer)
                {
                    print("join as player");
                    if (table.isAllPlayers())
                    {
                        print("error: was all players at this table");
                        output.writeInt(Connection_info.err_table_is_full.getValue());
                        output.flush();
                        continue;
                    }
                    else
                    {
                        print("wasn't all players at this table");

                        output.writeInt(Connection_info.all_is_ok.getValue());
                        output.flush();

                        table.addPlayer(new SClient(s, input, output, nick, table));
                        table.sendMessageToAll("** Gracz " + nick + " dołączył do gry **");

                        if (table.isAllPlayers())
                        {
                            table.generateSettings();

                            print("Send settings to all");
                            table.sendSettingsToAll();

                            table.sendMessageToAll("** Nowa gra, zaczna: " + table.clientPlayer1.nick + "**");
                        }
                        else
                        {
                            table.sendMessageToAll("** Oczekiwanie na drugiego gracza **");
                        }
                    }
                }
                else //join as observer
                {

                    print("join as observer");
                    if (!table.canObserversJoin())
                    {
                        print("Observers can't join");
                        output.writeInt(Connection_info.err_game_without_observer.getValue());
                        output.flush();
                        continue;
                    }
                    else
                    {
                        output.writeInt(Connection_info.all_is_ok.getValue());
                        output.flush();

                        table.addObserver(new SClient(s, input, output, nick, table));

                        if (table.clientPlayer2 != null) //all players is playing
                        {
                            table.sendSettingsAndMovesToNewObserver();
                        }

                        table.sendMessageToAll("** Obserwator " + nick + " dołączył do gry **");
                    }
                }
            }
            catch (IOException ex)
            {
                Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
                continue;
            }
        }
    }

    public static void print(String str)
    {
        if (isPrintEnable)
        {
            System.out.println("Server: " + str);
        }
    }

    public void newTable(int idTable, String password, boolean withObserver, boolean enableChat) //create new table
    {

        print("create new table - id: " + idTable);
        tables.put(idTable, new Table(password, withObserver, enableChat));
    }
}
=====================================================================
Found a 99 line (608 tokens) duplication in the following files: 
Starting at line 30 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardInitialization.java
Starting at line 30 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardInitialization.java

		createSquares();
	}

	private void createSquares() {
		for (int i = 0; i < 24; i++) {// create object for each square
			for (int y = 0; y < 6; y++) {
				getSquares()[i][y] = new Square(i, y, null);
			}
		} // --endOf--create object for each square
	}

	/**
	 * Method setPieces on begin of new game or loaded game
	 * 
	 * @param plWhite
	 *            reference to white player
	 * @param plBlack
	 *            reference to black player
	 */
	
	
	public void setPieces(Player[] players) {

		for (int i = 0; i < players.length; i++) {
			setFigures4NewGame( i * 8, 0, players[i]);
			setPawns4NewGame(i * 8, 1, players[i]);
		}
	}/*--endOf-setPieces(boolean upsideDown)--*/

	/**
	 * method set Figures in row (and set Queen and King to right position)
	 * 
	 * @param i
	 *            column to start the positioning
	 * @param j
	 *            row where to set figures (Rook, Knight etc.)
	 * @param player
	 *            which is owner of pawns
	 */
	private void setFigures4NewGame(int i, int j, Player player) {

		//Rooks
		ArrayList <IMove> rookMoves = new ArrayList<>();
		rookMoves.add(new RookMoves());
		squares[i][j].setPiece(new Rook(board, player, rookMoves));
		squares[i + 7][j].setPiece(new Rook(board, player, rookMoves));
		
		//Knight
		ArrayList <IMove> knightMoves = new ArrayList<>();
		knightMoves.add(new KnightMoves());
		squares[i + 1][j].setPiece(new Knight(board, player, knightMoves));
		squares[i + 6][j].setPiece(new Knight(board, player, knightMoves));
		
		//Bishop
		ArrayList <IMove> bishopMoves = new ArrayList<>();
		bishopMoves.add(new BishopMoves());
		squares[i + 2][j].setPiece(new Bishop(board, player, bishopMoves));
		squares[i + 5][j].setPiece(new Bishop(board, player, bishopMoves));
		
		//THE QUEEN MOTHER OF DRAGONS
		ArrayList <IMove> queenMoves = new ArrayList<>();
		queenMoves.add(new RookMoves());
		queenMoves.add(new BishopMoves());
		squares[i + 4][j].setPiece(new Queen(board, player, queenMoves));
		
		ArrayList <IMove> kingMoves = new ArrayList<>();
		kingMoves.add(new KingMoves());
		if (player.getColor().equals(Player.colors.white)) {
			squares[i + 3][j].setPiece(kingWhite=new King(board, player, kingMoves));
		} else if (player.getColor().equals(Player.colors.black)) {
			squares[i + 3][j].setPiece(kingBlack=new King(board, player, kingMoves));
		} else if (player.getColor().equals(Player.colors.blue)) {
			squares[i + 3][j].setPiece(kingBlue=new King(board, player, kingMoves));
		}
			
	}

	/**
	 * method set Pawns in row
	 * 
	 * @param i
	 *            column to start the positioning
	 * @param j
	 *            row where to set pawns
	 * @param player
	 *            player which is owner of pawns
	 */
	private void setPawns4NewGame(int i, int j, Player player) {
		
		for (int k = 0; k < 8; k++) {
			ArrayList <IMove> pawnMoves = new ArrayList<>();
			pawnMoves.add(new PawnMoves());
			squares[i + k][j].setPiece(new Pawn(board, player, pawnMoves));
		}
	}

	public Square[][] getSquares() {
		return squares;
	}
=====================================================================
Found a 92 line (589 tokens) duplication in the following files: 
Starting at line 54 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceDisplay.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\PieceDisplay.java

				Point topLeft = board.getDisplay().getTopLeftPoint();

				int r = board.getRadius();
				int hi = board.get_square_height();

				int rs = r - square.getPozY() * hi;
				int ri = rs - hi;
				int rm = (rs + ri) / 2;

				int ai = square.getPozX() * 15;
				int as = ai + 15;
				int am = (as + ai) / 2;

				int x = r + (int) (rm * Math.sin(Math.toRadians(am))) - hi / 2;
				int y = r - (int) (rm * Math.cos(Math.toRadians(am))) - hi / 2;

				if (layout.image != null && g != null) {
					Image tempImage = layout.orgImage;

					BufferedImage resized = new BufferedImage(hi, hi, BufferedImage.TYPE_INT_ARGB_PRE);
					Graphics2D imageGr = (Graphics2D) resized.createGraphics();
					imageGr.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
					imageGr.drawImage(tempImage, 0, 0, hi, hi, null);
					imageGr.dispose();

					layout.setImage(resized.getScaledInstance(hi, hi, 0));
					g2d.drawImage(layout.image, x, y, null);
				} else {
					// System.out.println("image is null!");
					LogToFile.log(null, "Debug", "image is null!");
				}

			} catch (java.lang.NullPointerException exc) {
				System.out.println("Something wrong when painting piece: " + exc.getMessage());
				LogToFile.log(exc, "Error", "Something wrong when painting piece: " + exc.getMessage());
			}
		}
	}

	private class SquarePieceDisplay implements IPieceDisplay {

		SquareBoard board;
		Square square;
		private PieceLayout layout;
		Piece piece;

		public SquarePieceDisplay(Piece piece) {
			board = (SquareBoard) piece.getChessboard();
			this.piece = piece;
			layout = piece.getLayout();

		}
		/*
		 * Method to draw piece on chessboard
		 * 
		 * @graph : where to draw
		 */

		public final void draw(Graphics g) {
			try {
				Graphics2D g2d = (Graphics2D) g;
				g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
				square = piece.getSquare();
				Point topLeft = board.getDisplay().getTopLeftPoint();
				int height = board.get_square_height();

				int x = (square.getPozX() * height) + topLeft.x;
				int y = (square.getPozY() * height) + topLeft.y;

				if (layout.image != null && g != null) {
					Image tempImage = layout.orgImage;

					BufferedImage resized = new BufferedImage(height, height, BufferedImage.TYPE_INT_ARGB_PRE);
					Graphics2D imageGr = (Graphics2D) resized.createGraphics();
					imageGr.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
					imageGr.drawImage(tempImage, 0, 0, height, height, null);
					imageGr.dispose();

					layout.setImage(resized.getScaledInstance(height, height, 0));
					g2d.drawImage(layout.image, x, y, null);
				} else {
					// System.out.println("image is null!");
					LogToFile.log(null, "Debug", "image is null!");
				}

			} catch (java.lang.NullPointerException exc) {
				System.out.println("Something wrong when painting piece: " + exc.getMessage());
				LogToFile.log(exc, "Error", "Something wrong when painting piece: " + exc.getMessage());
			}
		}
	}
}
=====================================================================
Found a 115 line (507 tokens) duplication in the following files: 
Starting at line 29 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Console.java
Starting at line 30 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Console.java

public class Console
{

    public static void main(String[] args)
    {
        System.out.println("JChess Server Start!");

        Server server = new Server(); //create server
        server.isPrintEnable = false;

        boolean isOK = true;
        while (isOK)
        {
            System.out.println("--------------------");
            System.out.println("[1] Nowy stół");
            System.out.println("[2] Lista aktywnych stołów");
            System.out.println("[3] Włącz/wyłącz komunikaty serwera");
            System.out.println("[4] Wyłącz serwer");
            System.out.print("-> ");
            String str = readString();

            if (str.equals("1")) //new table
            {
                System.out.print("ID gry: ");
                int gameID = Integer.parseInt(readString());

                System.out.print("Hasło: ");
                String pass = MD5.encrypt(readString());

                String observer;
                do
                {
                    System.out.print("Gra z obserwatorami[t/n]: ");
                    observer = readString();
                }
                while (!observer.equalsIgnoreCase("t") && !observer.equalsIgnoreCase("n"));

                boolean canObserver = observer.equalsIgnoreCase("t");

                server.newTable(gameID, pass, canObserver, true); //create new table
            }
            else if (str.equals("2")) //list of tables
            {
                for (Map.Entry<Integer, Table> entry : server.tables.entrySet())
                {
                    Integer id = entry.getKey();
                    Table table = entry.getValue();

                    String p1, p2;

                    if (table.clientPlayer1 == null || table.clientPlayer1.nick == null)
                    {
                        p1 = "empty";
                    }
                    else
                    {
                        p1 = table.clientPlayer1.nick;
                    }

                    if (table.clientPlayer2 == null || table.clientPlayer2.nick == null)
                    {
                        p2 = "empty";
                    }
                    else
                    {
                        p2 = table.clientPlayer2.nick;
                    }

                    System.out.println("\t" + id + ": " + p1 + " vs " + p2);
                }
            }
            else if (str.equals("3")) //on/off server's communicats
            {
                if (server.isPrintEnable == false)
                {
                    server.isPrintEnable = true;
                    System.out.println("Komunikaty serwera zostały włączone");
                }
                else
                {
                    server.isPrintEnable = false;
                    System.out.println("Komunikaty serwera zostały wyłączone");
                }
            }
            else if (str.equals("4")) //exit
            {
                isOK = false;
            }
            else //bad commant
            {
                System.out.println("Nierozpoznane polecenie");
            }
        }
        System.exit(0);
    }

    public static String readString() //read string from console
    {
        int ch;
        StringBuffer sb = new StringBuffer();
        try
        {
            while ((ch = System.in.read()) != 10)
            {
                sb.append((char) ch);
            }
        }
        catch (IOException ex)
        {
            Logger.getLogger(Console.class.getName()).log(Level.SEVERE, null, ex);
        }

        return sb.toString();
    }
}
=====================================================================
Found a 65 line (488 tokens) duplication in the following files: 
Starting at line 63 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 70 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java

					} else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
						list.add(moveSq);
					}
				}
			}
		}

	}

	public ArrayList<Square> getMoves(Piece piece1, boolean ignoreKing) {
		Pawn piece = (Pawn) piece1;
		ArrayList<Square> list = new ArrayList<>();

		if (piece.getSquare().getPozY() < 5) {
			if (!piece.passedCenter) {
				regularMoveBeforeCenter(piece, list, ignoreKing);
				captureMovesBeforeCenter(piece, list, ignoreKing);
			} else {
				regularMoveAfterCenter(piece, list, ignoreKing);
				captureMovesAfterCenter(piece, list, ignoreKing);
			}
		} else if (piece.getSquare().getPozY() == 5) {
			if (!piece.passedCenter) {
				passCenter(piece, list, ignoreKing);
			} else {
				passCenter(piece, list, ignoreKing);
				regularMoveAfterCenter(piece, list, ignoreKing);
				captureMovesAfterCenter(piece, list, ignoreKing);
			}

		}

		return list;
	}

	private void captureMovesBeforeCenter(Pawn piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 0) {
			captureMove(piece, list, x + 1, y + 1, ignoreKing);
			captureMove(piece, list, 23, y + 1, ignoreKing);

		} else if (x == 23) {
			captureMove(piece, list, 0, y + 1, ignoreKing);
			captureMove(piece, list, x - 1, y + 1, ignoreKing);
		} else {
			captureMove(piece, list, x + 1, y + 1, ignoreKing);
			captureMove(piece, list, x - 1, y + 1, ignoreKing);
		}
	}

	private void captureMovesAfterCenter(Pawn piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 0) {
			captureMove(piece, list, x + 1, y - 1, ignoreKing);
			captureMove(piece, list, 23, y - 1, ignoreKing);

		} else if (x == 23) {
			captureMove(piece, list, 0, y - 1, ignoreKing);
			captureMove(piece, list, x - 1, y - 1, ignoreKing);
		} else {
			captureMove(piece, list, x + 1, y - 1, ignoreKing);
			captureMove(piece, list, x - 1, y - 1, ignoreKing);
		}
	}
}
=====================================================================
Found a 76 line (425 tokens) duplication in the following files: 
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\PawnPromotionWindow.java
Starting at line 45 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\PawnPromotionWindow.java

public class PawnPromotionWindow extends JDialog implements ActionListener
{

    JButton knightButton;
    JButton bishopButton;
    JButton rookButton;
    JButton queenButton;
    GridBagLayout gbl;
    public String result;
    GridBagConstraints gbc;

    public PawnPromotionWindow(Frame parent, String color)
    {
        super(parent);
        this.setTitle("Choose piece");
        this.setMinimumSize(new Dimension(520, 130));
        this.setSize(new Dimension(520, 130));
        this.setMaximumSize(new Dimension(520, 130));
        this.setResizable(false);
        this.setLayout(new GridLayout(1, 4));
        //this.setDefaultCloseOperation(EXIT_ON_CLOSE);

        this.gbl = new GridBagLayout();
        this.gbc = new GridBagConstraints();
        this.knightButton = new JButton(new ImageIcon(GUI.loadImage("Knight-" + color + ".png")));
        this.bishopButton = new JButton(new ImageIcon(GUI.loadImage("Bishop-" + color + ".png")));
        this.rookButton = new JButton(new ImageIcon(GUI.loadImage("Rook-" + color + ".png")));
        this.queenButton = new JButton(new ImageIcon(GUI.loadImage("Queen-" + color + ".png")));
        this.result = "";

        this.knightButton.addActionListener(this);
        this.bishopButton.addActionListener(this);
        this.rookButton.addActionListener(this);
        this.queenButton.addActionListener(this);

        this.add(queenButton);
        this.add(rookButton);
        this.add(bishopButton);
        this.add(knightButton);
    }

    /** Method setting the color fo promoted pawn
     * @param color The players color
     */
    public void setColor(String color)
    {
        this.knightButton.setIcon(new ImageIcon(GUI.loadImage("Knight-" + color + ".png")));
        this.bishopButton.setIcon(new ImageIcon(GUI.loadImage("Bishop-" + color + ".png")));
        this.rookButton.setIcon(new ImageIcon(GUI.loadImage("Rook-" + color + ".png")));
        this.queenButton.setIcon(new ImageIcon(GUI.loadImage("Queen-" + color + ".png")));
    }

    /** Method wich is changing a pawn into queen, rook, bishop or knight
     * @param arg0 Capt information about performed action
     */
    public void actionPerformed(ActionEvent arg0)
    {
        if (arg0.getSource() == queenButton)
        {
            result = "Queen";
        }
        else if (arg0.getSource() == rookButton)
        {
            result = "Rook";
        }
        else if (arg0.getSource() == bishopButton)
        {
            result = "Bishop";
        }
        else //knight
        {
            result = "Knight";
        }
        this.setVisible(false);
    }
}
=====================================================================
Found a 74 line (369 tokens) duplication in the following files: 
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Chat.java
Starting at line 38 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Chat.java

public class Chat extends JPanel implements ActionListener
{

    public Client client;
    private GridBagLayout gbl;
    private GridBagConstraints gbc;
    private JScrollPane scrollPane;
    private JTextArea textOutput;
    private JTextField textInput;
    private JButton buttonSend;

    public Chat()
    {
        super();

        this.textOutput = new JTextArea();
        this.textOutput.setEditable(false);
        this.scrollPane = new JScrollPane();
        this.scrollPane.setViewportView(this.textOutput);
        this.textInput = new JTextField();
        this.textInput.addActionListener(this);
        this.buttonSend = new JButton("^");
        this.buttonSend.addActionListener(this);

        //add components
        this.gbl = new GridBagLayout();
        this.gbc = new GridBagConstraints();
        this.gbc.fill = GridBagConstraints.BOTH;
        this.setLayout(gbl);

        this.gbc.gridx = 0;
        this.gbc.gridy = 0;
        this.gbc.gridwidth = 2;
        this.gbc.gridheight = 1;
        this.gbc.weighty = 1.0;
        this.gbc.weightx = 0;
        this.gbl.setConstraints(scrollPane, gbc);
        this.add(scrollPane);

        this.gbc.gridx = 0;
        this.gbc.gridy = 1;
        this.gbc.gridwidth = 1;
        this.gbc.gridheight = 1;
        this.gbc.weighty = 0;
        this.gbc.weightx = 1.0;
        this.gbl.setConstraints(textInput, gbc);
        this.add(textInput);

        this.gbc.gridx = 1;
        this.gbc.gridy = 1;
        this.gbc.gridwidth = 1;
        this.gbc.gridheight = 1;
        this.gbc.weighty = 0;
        this.gbc.weightx = 0;
        this.gbl.setConstraints(buttonSend, gbc);
        this.add(buttonSend);
    }

    /** Method of adding message to the list
     */
    public void addMessage(String str) //added message to list
    {
        textOutput.append(str + "\n");
        textOutput.setCaretPosition(textOutput.getDocument().getLength());
    }

    /** Sending message method
     */
    public void actionPerformed(ActionEvent arg0) //sending message
    {
        this.client.sendMassage(textInput.getText());
        textInput.setText("");
    }
}
=====================================================================
Found a 62 line (358 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java

			}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
				list.add(newMove);
			}
		}
	}

	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing) {
		int newX, newY;

		ArrayList<Square> list = new ArrayList<>();

		// 1
		newX = piece.getSquare().getPozX() - 2;
		newY = piece.getSquare().getPozY() + 1;

		LMove(piece, newX, newY, list, ignoreKing);

		// 2
		newX = piece.getSquare().getPozX() - 1;
		newY = piece.getSquare().getPozY() + 2;

		LMove(piece, newX, newY, list, ignoreKing);

		// 3
		newX = piece.getSquare().getPozX() + 1;
		newY = piece.getSquare().getPozY() + 2;

		LMove(piece, newX, newY, list, ignoreKing);

		// 4
		newX = piece.getSquare().getPozX() + 2;
		newY = piece.getSquare().getPozY() + 1;

		LMove(piece, newX, newY, list, ignoreKing);

		// 5
		newX = piece.getSquare().getPozX() + 2;
		newY = piece.getSquare().getPozY() - 1;

		LMove(piece, newX, newY, list, ignoreKing);

		// 6
		newX = piece.getSquare().getPozX() + 1;
		newY = piece.getSquare().getPozY() - 2;

		LMove(piece, newX, newY, list, ignoreKing);

		// 7
		newX = piece.getSquare().getPozX() - 1;
		newY = piece.getSquare().getPozY() - 2;

		LMove(piece, newX, newY, list, ignoreKing);

		// 8
		newX = piece.getSquare().getPozX() - 2;
		newY = piece.getSquare().getPozY() - 1;

		LMove(piece, newX, newY, list, ignoreKing);

		return list;
	}
}
=====================================================================
Found a 115 line (357 tokens) duplication in the following files: 
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Piece.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Piece.java

public abstract class Piece {


	private IChessboard chessboard; // <-- this relations isn't in class diagram,
									// but it's necessary :/
	public PieceBehaviour pieceBehaviour;
	private Square square;
	private Player player;
	private String name;
	protected String symbol;
	private PieceLayout layout;
	private PieceDisplay display;

	public Piece(IChessboard chessboard, Player player, String imagePath) {

		this.setChessboard(chessboard);
		this.setPlayer(player);
		
		colors color = player.getColor();
		String imageColorPath = "";
		switch (color) {
			case black:	imageColorPath ="-Black.png";
						break;
			case white:	imageColorPath ="-White.png";
						break;
			case blue:	imageColorPath ="-Blue.png";
						break;
			case red:	imageColorPath ="-Red.png";
						break;
			case green:	imageColorPath ="-Green.png";
						break;
		}
		//System.out.println("Color escogido: " + color);
		imagePath += imageColorPath;
		//System.out.println("Image: " + imagePath);
		
		this.setName(this.getClass().getSimpleName());
		this.setLayout(new PieceLayout(imagePath));
		this.pieceBehaviour = new PieceBehaviour(chessboard, player);
		this.display = new PieceDisplay(this);
	}
	

	public King myKing() {
		return chessboard.getKing(player);
	}
	
	public abstract ArrayList<Square> allMoves(boolean ignoreKing);

	public IChessboard getChessboard() {
		return chessboard;
	}

	public void setChessboard(IChessboard chessboard2) {
		this.chessboard = chessboard2;
	}
	
	public PieceBehaviour getPieceBehaviour() {
		return pieceBehaviour;
	}

	public void setPieceBehaviour(PieceBehaviour pieceBehaviour) {
		this.pieceBehaviour = pieceBehaviour;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getSymbol() {
		return symbol;
	}

	public void setSymbol(String symbol) {
		this.symbol = symbol;
	}

	public Player getPlayer() {
		return player;
	}

	public void setPlayer(Player player) {
		this.player = player;
	}

	
	public Square getSquare() {
		return square;
	}

	public void setSquare(Square square) {
		this.square = square;
	}

	

	public PieceLayout getLayout() {
		return layout;
	}


	public void setLayout(PieceLayout layout) {
		this.layout = layout;
	}


	public void draw(Graphics g) {
		// TODO Auto-generated method stub
		display.draw(g);
	}
}
=====================================================================
Found a 61 line (342 tokens) duplication in the following files: 
Starting at line 14 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 14 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

			if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
				list.add(newMove);
			}
		}
	}
	
	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing){
		int newX, newY;
		
		ArrayList<Square> list = new ArrayList<>();
        //1
        newX = piece.getSquare().getPozX() - 2;
        newY = piece.getSquare().getPozY() + 1;

       LMove(piece, newX, newY, list);

        //2
        newX = piece.getSquare().getPozX() - 1;
        newY = piece.getSquare().getPozY() + 2;

       LMove(piece, newX, newY, list);

        //3
        newX = piece.getSquare().getPozX() + 1;
        newY = piece.getSquare().getPozY() + 2;

       LMove(piece, newX, newY, list);

        //4
        newX = piece.getSquare().getPozX() + 2;
        newY = piece.getSquare().getPozY() + 1;

       LMove(piece, newX, newY, list);

        //5
        newX = piece.getSquare().getPozX() + 2;
        newY = piece.getSquare().getPozY() - 1;

       LMove(piece, newX, newY, list);

        //6
        newX = piece.getSquare().getPozX() + 1;
        newY = piece.getSquare().getPozY() - 2;

       LMove(piece, newX, newY, list);

        //7
        newX = piece.getSquare().getPozX() - 1;
        newY = piece.getSquare().getPozY() - 2;

       LMove(piece, newX, newY, list);

        //8
        newX = piece.getSquare().getPozX() - 2;
        newY = piece.getSquare().getPozY() - 1;

       LMove(piece, newX, newY, list);
       
       return list;
	}
}
=====================================================================
Found a 75 line (323 tokens) duplication in the following files: 
Starting at line 32 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\SClient.java
Starting at line 30 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\SClient.java

class SClient implements Runnable //connecting client
{

    private Socket s;
    public ObjectInputStream input;
    public ObjectOutputStream output;
    public String nick;
    private Table table;
    protected boolean wait4undoAnswer = false;

    SClient(Socket s, ObjectInputStream input, ObjectOutputStream output, String nick, Table table)
    {
        this.s = s;
        this.input = input;
        this.output = output;
        this.nick = nick;
        this.table = table;

        Thread thread = new Thread(this);
        thread.start();
    }

    public void run() //listening
    {

        Server.print("running function: run()");
        boolean isOK = true;
        while (isOK)
        {
            try
            {
                String in = input.readUTF();

                if (in.equals("#move"))//new move
                {
                    int bX = input.readInt();
                    int bY = input.readInt();
                    int eX = input.readInt();
                    int eY = input.readInt();

                    table.sendMoveToOther(this, bX, bY, eX, eY);
                }
                else if (in.equals("#message"))//new message
                {
                    String str = input.readUTF();

                    table.sendMessageToAll(nick + ": " + str);
                }
                else if(in.equals("#undoAsk") || in.equals("#undoAnswerNegative") )
                {
                    table.sendToAll(this, in);
                }
                else if(in.equals("#undoAnswerPositive") )
                {
                    table.sendUndoToAll(this, in);
                }
            }
            catch (IOException ex)
            {
                Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
                isOK = false;
                try
                {
                    table.sendErrorConnectionToOther(this);
                }
                catch (IOException ex1)
                {
                    Logger.getLogger(SClient.class.getName()).log(Level.SEVERE, null, ex1);
                }
            }

        }
    }
    
}
=====================================================================
Found a 58 line (310 tokens) duplication in the following files: 
Starting at line 31 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\NewGameWindow.java
Starting at line 32 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\NewGameWindow.java

public class NewGameWindow extends JDialog {


	/** Creates new form NewGameWindow */
	public NewGameWindow() {
		initComponents();
		this.setSize(400, 700);
		this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
		this.jTabbedPane1.addTab(Settings.lang("local_game"), new DrawLocalSettings(this));
		this.jTabbedPane1.addTab(Settings.lang("network_game"), new DrawNetworkSettings(this));
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jTabbedPane1 = new javax.swing.JTabbedPane();
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setAlwaysOnTop(true);
		setName("Form"); // NOI18N
		jTabbedPane1.setName("jTabbedPane1"); // NOI18N
		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
						.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(20, 20, 20)
						.addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
						.addContainerGap()));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				new NewGameWindow().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JTabbedPane jTabbedPane1;
	// End of variables declaration//GEN-END:variables
}
=====================================================================
Found a 75 line (283 tokens) duplication in the following files: 
Starting at line 77 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\GUI.java
Starting at line 75 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\GUI.java

			LogToFile.log(null,"INFO", "some error loading image!");
			e.printStackTrace();
		}
		return img;
	}/*--endOf-loadImage--*/

	static boolean themeIsValid(String name) {
		return true;
	}

	static String getJarPath() {
		String path = GUI.class.getProtectionDomain().getCodeSource().getLocation().getFile();
		path = path.replaceAll("[a-zA-Z0-9%!@#$%^&*\\(\\)\\[\\]\\{\\}\\.\\,\\s]+\\.jar", "");
		int lastSlash = path.lastIndexOf(File.separator);
		if (path.length() - 1 == lastSlash) {
			path = path.substring(0, lastSlash);
		}
		path = path.replace("%20", " ");
		return path;
	}

	static Properties setDefaultConfigFile() {
		Properties confFile = new Properties();
		OutputStream output = null;

		try {

			output = new FileOutputStream("config.txt");

			// set the properties value
			confFile.setProperty("THEME", "default");

			// save properties to project root folder
			confFile.store(output, null);

		} catch (IOException io) {
			io.printStackTrace();
		} finally {
			if (output != null) {
				try {
					output.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}

		}
		return confFile;
	}

	static Properties getConfigFile() {

		Properties confFile = new Properties();
		InputStream input = null;

		try {
			input = new FileInputStream("config.txt");
			confFile.load(input);

		} catch (IOException ex) {
			ex.printStackTrace();
			confFile = setDefaultConfigFile();
		} finally {
			if (input != null) {
				try {
					input.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}

		return confFile;
	}
}
=====================================================================
Found a 31 line (251 tokens) duplication in the following files: 
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoard.java
Starting at line 54 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoard.java

			System.out.println("click out of chessboard.");
			return null;
		}

		int cx = getRadius(), cy = getRadius(), hi = get_square_height();
		double ri = Math.sqrt(Math.pow((cx - x), 2) + Math.pow((cy - y), 2));

		double ai = 0;
		// Calculate the angle depending on the quadrant
		if (x > cx && y < cy) {
			ai = Math.toDegrees(Math.asin((x - cx) / ri));
		} else if (x > cx && y > cy) {
			ai = 90 + Math.toDegrees(Math.acos((x - cx) / ri));
		} else if (x < cx && y > cy) {
			ai = 180 + Math.toDegrees(Math.asin((cx - x) / ri));
		} else if (x < cx && y < cy) {
			ai = 270 + Math.toDegrees(Math.acos((cx - x) / ri));
		}

		double square_x = (ai / 15);// count which field in X was
									// clicked

		double square_y = (cy - ri) / hi;// count which field
											// in Y
											// was
		Square result;
		try {
			result = initial.squares[(int) square_x][(int) square_y];
			return result;

		} catch (java.lang.ArrayIndexOutOfBoundsException exc) {
=====================================================================
Found a 74 line (242 tokens) duplication in the following files: 
Starting at line 87 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Server.java
Starting at line 78 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Server.java

    public Server()
    {
        if(!Server.isRunning) //run server if isn't running previous
        {
            runServer();

            Thread thread = new Thread(this);
            thread.start();

            Server.isRunning = true;
        }
    }

    /*
     * Method with is checking is the server is running
     * @return bool true if server is running, else false
     */
    public static boolean isRunning() //is server running?
    {
        return isRunning;
    }

    /*
     * Method to starting a new server
     * It's running a new game server
     */

    private static void runServer() //run server
    {
        try
        {
            ss = new ServerSocket(port);
            print("running");
        }
        catch (IOException ex)
        {
            Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
        }

        tables = new HashMap<Integer, Table>();
    }

    public void run() //listening
    {
        print("listening port: "+port);
        while(true)
        {
            Socket s;
            ObjectInputStream input;
            ObjectOutputStream output;

            try
            {
                s = ss.accept();
                input = new ObjectInputStream(s.getInputStream());
                output = new ObjectOutputStream(s.getOutputStream());

                print("new connection");

                //readed all data
                int tableID = input.readInt();
                print("readed table ID: "+tableID);
                boolean joinAsPlayer = input.readBoolean();
                print("readed joinAsPlayer: "+joinAsPlayer);
                String nick = input.readUTF();
                print("readed nick: "+nick);
                String password = input.readUTF();
                print("readed password: "+password);
                //---------------

                if(!tables.containsKey(tableID))
                {
                    print("bad table ID");
                    output.writeInt(connection_info.err_bad_table_ID.getValue());
=====================================================================
Found a 58 line (242 tokens) duplication in the following files: 
Starting at line 38 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceBehaviour.java
Starting at line 21 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\PieceBehaviour.java

	}

	public boolean isout(int x, int y) {
		if (chessboard instanceof SquareBoard) {
			if (x < 0 || x > 7 || y < 0 || y > 7) {
				return true;
			}
		} else if (chessboard instanceof CircleBoard) {
			if (x < 0 || x > 23 || y < 0 || y > 5) {
				return true;
			}
		}
		return false;
	}

	/**
	 * @param x
	 *            y position on chessboard
	 * @param y
	 *            y position on chessboard
	 * @return true if can move, false otherwise
	 */
	public boolean checkPiece(int x, int y) {
		if (getChessboard().getSquares()[x][y].piece != null
				&& getChessboard().getSquares()[x][y].piece.getName().equals("King")) {
			return false;
		}
		Piece piece = getChessboard().getSquares()[x][y].piece;
		if (piece == null || // if this square is empty
				piece.getPlayer() != this.getPlayer()) // or piece is another
														// player
		{
			return true;
		}
		return false;
	}

	/**
	 * Method check if piece has other owner than calling piece
	 * 
	 * @param x
	 *            x position on chessboard
	 * @param y
	 *            y position on chessboard
	 * @return true if owner(player) is different
	 */
	public boolean otherOwner(int x, int y) {
		Square sq = getChessboard().getSquares()[x][y];
		if (sq.piece == null) {
			return false;
		}
		if (this.getPlayer() != sq.piece.getPlayer()) {
			return true;
		}
		return false;
	}

	public Square getSquare() {
=====================================================================
Found a 75 line (237 tokens) duplication in the following files: 
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Move.java
Starting at line 25 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\board\Move.java

public class Move
{

    protected Square from = null;
    protected Square to = null;
    protected Piece movedPiece = null;
    protected Piece takenPiece = null;
    protected Piece promotedTo = null;
    protected boolean wasEnPassant = false;
    protected castling castlingMove = castling.none;
    protected boolean wasPawnTwoFieldsMove = false;

    public Move(Square from, Square to, Piece movedPiece, Piece takenPiece, castling castlingMove, boolean wasEnPassant, Piece promotedPiece)
    {
        this.from = from;
        this.to = to;

        this.movedPiece = movedPiece;
        this.takenPiece = takenPiece;

        this.castlingMove = castlingMove;
        this.wasEnPassant = wasEnPassant;

        if (movedPiece.getName().equals("Pawn") && Math.abs(to.getPozY() - from.getPozY()) == 2)
        {
            this.wasPawnTwoFieldsMove = true;
        }

        //else if (movedPiece.getName().equals("Pawn") && to.getPozY() == Chessboard.bottom || to.getPozY() == Chessboard.top && promotedPiece != null)

        {
            this.promotedTo = promotedPiece;
        }
    }

    public Square getFrom()
    {
        return this.from;
    }

    public Square getTo()
    {
        return this.to;
    }

    public Piece getMovedPiece()
    {
        return this.movedPiece;
    }

    public Piece getTakenPiece()
    {
        return this.takenPiece;
    }

    public boolean wasEnPassant()
    {
        return this.wasEnPassant;
    }

    public boolean wasPawnTwoFieldsMove()
    {
        return this.wasPawnTwoFieldsMove;
    }

    public castling getCastlingMove()
    {
        return this.castlingMove;
    }

    public Piece getPromotedPiece()
    {
        return this.promotedTo;
    }
}
=====================================================================
Found a 94 line (234 tokens) duplication in the following files: 
Starting at line 26 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Clock.java
Starting at line 27 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Clock.java

public class Clock
{

    private int time_left;
    private Player player;

    Clock()
    {
        this.init(time_left);
    }

    Clock(int time)
    {
        this.init(time);
    }

    /** Method to init clock with given value
     *  @param time tell method with how much time init clock
     */
    public void init(int time)
    {
        this.time_left = time;
    }

    /** Method to decrement value of left time
     *  @return bool true if time_left > 0, else returns false
     */
    public boolean decrement()
    {
        if (this.time_left > 0)
        {
            this.time_left = this.time_left - 1;
            return true;
        }
        return false;
    }

    public void pause()
    {
    }

    /** Method to get left time in seconds
     *  @return Player int integer of seconds
     */
    public int get_left_time()
    {
        return this.time_left;
    }

    /** Method to get player (owner of this clock)
     *  @param player  player to set as owner of clock
     */
    public void setPlayer(Player player)
    {
        this.player = player;
    }

    /** Method to get player (owner of this clock)
     *  @return  Reference to player class object
     */
    public Player getPlayer()
    {
        return this.player;
    }

    /** Method to prepare time in nice looking String
     *  @return  String of actual left game time with ':' digits in mm:ss format
     */
    public String prepareString()
    {
        String strMin = new String();
        Integer time_min = new Integer(this.get_left_time() / 60);
        Integer time_sec = new Integer(this.get_left_time() % 60);
        if (time_min < 10)
        {//prepare MINUTES
            strMin = "0" + time_min.toString();
        }
        else
        {
            strMin = time_min.toString();
        }
        String result = new String(strMin + ":");
        if (time_sec < 10)
        {//prepare SECONDS
            result = result + "0" + time_sec.toString();
        }
        else
        {
            result = result + time_sec.toString();
        }

        return result;
    }
}
=====================================================================
Found a 66 line (228 tokens) duplication in the following files: 
Starting at line 70 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\LogToFile.java
Starting at line 75 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\LogToFile.java

				logger1.log(Level.INFO, msg, ex);
				break;
			}

		} else {
			System.out.println("TestLogger" + "Logger not found");
		}
	}

	// Check if a Log file for the day exists.
	private static boolean checkFileName(String FileName) {
		boolean check = false;
		// System.out.println("Inside checkFileName" + FileName);
		try {
			java.util.Date dt = new java.util.Date();
			SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
			String srvDate = dateFormat.format(dt);
			String yymmdd = "ProcessLog_V2_" + srvDate.substring(6, 10) + srvDate.substring(3, 5)
					+ srvDate.substring(0, 2);
			if (FileName.equals(yymmdd))
				check = true;
			else
				check = false;
			// System.out.println(check);
		} catch (Exception e) {
			System.out.println("TestLogger" + "Check file method" + e);
		}
		// System.out.println("Inside checkFileName" + FileName);
		// System.out.println("Check: " + check);
		return check;
	}

	// Creates a Log file
	private static void createFileName() {
		// System.out.println("Inside createFileName" );
		try {
			java.util.Date dt = new java.util.Date();
			SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
			// System.out.println("Able to create dataFormat object");
			String srvDate = dateFormat.format(dt);
			String yymmdd = srvDate.substring(6, 10) + srvDate.substring(3, 5) + srvDate.substring(0, 2);
			logFile = "ProcessLog_V2_" + yymmdd;
			// System.out.println("FileName in createFileName: " + logFile);
		} catch (Exception e) {
			System.out.println(e);
		}
	}
	/*
	 * public void log(Exception ex, String level, String msg) {
	 * 
	 * try { DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd"); String
	 * filePath = "Logs" + File.separator + "log" + "%g%u.LOG"; boolean logFlag
	 * = new File(filePath).isFile(); if (!logFlag) { File logFile = new
	 * File(filePath); // PrintWriter writer = new PrintWriter(filePath,
	 * "UTF-8"); FileHandler fh = null; fh = new FileHandler(filePath, 10000, 2,
	 * true); logger.addHandler(fh); // logger.addHandler(new ConsoleHandler());
	 * logger.setUseParentHandlers(false); } switch (level) { case "Error":
	 * logger.log(Level.SEVERE, msg, ex); break; case "Debug":
	 * logger.log(Level.FINE, msg, ex); break; case "INFO":
	 * logger.log(Level.INFO, msg, ex); break; } } catch (IOException |
	 * SecurityException ex1) { logger.log(Level.SEVERE, null, ex1); } finally {
	 * Handler[] handler = logger.getHandlers(); if ((FileHandler) (handler[0])
	 * != null) ((FileHandler) handler[0]).close(); } }
	 */

}
=====================================================================
Found a 37 line (221 tokens) duplication in the following files: 
Starting at line 563 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 601 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 547 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 585 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

			newY = s.getPozY() + 1;
			if (!pieceBehaviour.isout(newX, newY)) {
				if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
				// on
				// this
				// sqhuare
				// isn't
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
				// is
				// our
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Pawn")) {
					return false;
				}
			}
			newX = s.getPozX() + 1;
			if (!pieceBehaviour.isout(newX, newY)) {
				if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
				// on
				// this
				// sqhuare
				// isn't
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
				// is
				// our
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Pawn")) {
					return false;
				}
			}
		} else {// System.out.println("go up");
=====================================================================
Found a 34 line (219 tokens) duplication in the following files: 
Starting at line 47 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 49 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java

public class JChessView extends FrameView implements ActionListener, ComponentListener {
	static GUI gui = null;
	GUI activeGUI;// in future it will be reference to active tab
    //LogToFile logToFile = new LogToFile();
	public Game addNewTab(String title) {
		Game newGUI = new Game();
		this.gamesPane.addTab(title, newGUI);
		return newGUI;
	}

	public void actionPerformed(ActionEvent event) {
		Object target = event.getSource();
		if (target == newGameItem) {
			this.newGameFrame = new NewGameWindow();
			JChessApp.getApplication().show(this.newGameFrame);
		} else if (target == saveGameItem) { // saveGame
			if (this.gamesPane.getTabCount() == 0) {
				JOptionPane.showMessageDialog(null, Settings.lang("save_not_called_for_tab"));
				return;
			}
			while (true) {// until
				JFileChooser fc = new JFileChooser();
				int retVal = fc.showSaveDialog(this.gamesPane);
				if (retVal == JFileChooser.APPROVE_OPTION) {
					File selFile = fc.getSelectedFile();
					Game tempGUI = (Game) this.gamesPane.getComponentAt(this.gamesPane.getSelectedIndex());
					if (!selFile.exists()) {
						try {
							selFile.createNewFile();
						} catch (java.io.IOException exc) {
							// System.out.println("error creating file: " +
							// exc);
							
							LogToFile.log(exc, "Error", "error creating file: ");
=====================================================================
Found a 31 line (216 tokens) duplication in the following files: 
Starting at line 84 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 95 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			
			if (h == 23) {
				h = -1;
			}
		}
	}
	
	private static void forwardLeftMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 23) {
			x = -1;
		}
		for (int h = x + 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); ++h, --i) // right-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
=====================================================================
Found a 34 line (216 tokens) duplication in the following files: 
Starting at line 10 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KingMoves.java
Starting at line 10 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KingMoves.java

public class KingMoves implements IMove {
	
	public void regularMove(Piece piece1,  ArrayList<Square> list, int x, int y){
		King piece = (King) piece1;
		for (int i = x - 1; i <= x + 1; i++) {
			for (int j = y - 1; j <= y + 1; j++) {
				if (!piece.pieceBehaviour.isout(i, j)) {// out of bounds
														// protection
					Square sq = piece.getChessboard().getSquares()[i][j];
					if (piece.getSquare() == sq) {// if we're checking square on
													// which is King
						continue;
					} else {
						if (piece.pieceBehaviour.checkPiece(i, j)) {// if square
																	// is empty
							if (piece.isSafe(sq)) {
								list.add(sq);
							}
						}
					}
				}
			}
		}

	}
	
	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing){
		ArrayList<Square> list = new ArrayList<>();
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		regularMove(piece, list, x, y);
		return list;
	}
	
}
=====================================================================
Found a 30 line (215 tokens) duplication in the following files: 
Starting at line 55 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			if (h == 0) {
				h = 24;
			}
		}
	}
	private static void forwardRightMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 23) {
			x = -1;
		}
		for (int h = x + 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); ++h, ++i) // right-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
=====================================================================
Found a 32 line (214 tokens) duplication in the following files: 
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			
			if (h == 0) {
				h = 24;
			}
		}
	}

	private static void backwardLeftMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 0) {
			x = 24;
		}
		for (int h = x - 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
=====================================================================
Found a 53 line (212 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\LogToFile.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\LogToFile.java

public class LogToFile {

	// protected static final Logger logger = Logger.getLogger("MYLOG");
	private static LogManager lMgr = LogManager.getLogManager();
	protected static final Logger logger = Logger.getLogger("MYLOG");
	private static String logFile = "test";

	public LogToFile() {

		// TODO Auto-generated constructor stub
	}

	/**
	 * log Method enable to log all exceptions to a file and display user
	 * message on demand
	 * 
	 * @param ex
	 * @param level
	 * @param msg
	 */

	private static void initialize() {
		try {
			//Logger logger = Logger.getLogger(this.getClass().getName());
			SimpleFormatter formatter = new SimpleFormatter();
			//FileHandler fh = new FileHandler("main" + File.separator + "java" + File.separator + "Logs" + File.separator + logFile + "%g%u.LOG", 10000, 2, true);
			FileHandler fh = new FileHandler(logFile + "%g%u.LOG", 100000, 2, true);
			fh.setFormatter(formatter);
			fh.setLevel(Level.ALL);
			logger.setUseParentHandlers(false);
			logger.addHandler(fh);
			lMgr.addLogger(logger);
		} catch (IOException ioe) {
			System.out.println("TestLogger" + "Failed to initialize Logger" + ioe);
		} catch (NullPointerException npe) {
			System.out.println("TestLogger" + npe);
		} catch (Exception e) {
			System.out.println("TestLogger" + e);
		}
	}

	// Creates a Log file for each day and appends a msg.
	public static void log(Exception ex, String level, String msg) {
		Logger logger1;
		if (!checkFileName(logFile)) {
			createFileName();
		   // System.out.println("FileName: " + logFile);
			initialize();
		}

		if ((logger1 = lMgr.getLogger("MYLOG")) != null) {
			switch (level) {
			case "Error":
=====================================================================
Found a 70 line (209 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Settings.java
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Settings.java

	public static ResourceBundle loc = null;
    public int timeForGame;
    public boolean runningChat;
    public boolean runningGameClock;
    public boolean timeLimitSet;
    public boolean upsideDown;
    public LogToFile logToFile = new LogToFile();
    
    public enum gameModes
    {

        newGame, loadGame
    }
    
    public gameModes gameMode;
    
    public Player playerWhite;
    public Player playerBlack;
    public Player playerBlue;
    
    
    public ArrayList<Player> players = new ArrayList<>() ;
    public enum gameTypes
    {

        local, network
    }
    public gameTypes gameType;
    
    public boolean renderLabels = true;

    public Settings()
    {
        //temporally
        this.playerWhite = new Player("", "white");
        this.playerBlack = new Player("", "black");
        this.playerBlue = new Player("", "blue");
        this.timeLimitSet = false;
        gameMode = gameModes.newGame;
    }

    /** Method to get game time set by player
     *  @return timeFofGame int with how long the game will last
     */
    public int getTimeForGame()
    {
        return this.timeForGame;
    }

    public static String lang(String key)
    {
        if (Settings.loc == null)
        {
            Settings.loc = PropertyResourceBundle.getBundle("main.java.resources.i18n.main_en");
            Locale.setDefault(Locale.ENGLISH);
        }
        String result = "";
        try
        {
            result = Settings.loc.getString(key);
        }
        catch (java.util.MissingResourceException exc)
        {
            result = key;
        }
       // System.out.println(Settings.loc.getLocale().toString());
        // LogToFile.log(null, "INFO", Settings.loc.getLocale().toString());
        return result;
    }
}
=====================================================================
Found a 28 line (198 tokens) duplication in the following files: 
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

					if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
						list.add(moveSq);

					}
				}
			}
		}
	}
	
	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing){
		ArrayList<Square> list = new ArrayList<>();
		regularMove(piece, list, 1);
		if ((piece.getPlayer().isGoDown() && piece.getSquare().getPozY() == 1)
				|| (!piece.getPlayer().isGoDown() && piece.getSquare().getPozY() == 6)) {
			regularMove(piece, list, 2);
		}
		
		captureMove(piece, list, piece.getSquare().getPozX()-1);
		enPassantMove(piece, list, piece.getSquare().getPozX()-1, -1);
		
		//right
		captureMove(piece, list, piece.getSquare().getPozX()+1);
		enPassantMove(piece, list, piece.getSquare().getPozX()+1, 1);
		
		
		return list;
	}
}
=====================================================================
Found a 52 line (196 tokens) duplication in the following files: 
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoard.java
Starting at line 136 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoard.java

		}

		begin.piece.setSquare(end);// set square of piece to ending
		end.piece = begin.piece;// for ending square set piece from beginning
								// square

		begin.piece = null;// make null piece for beginning square
		this.unselect();// unselect square
		display.repaint();

	}

	@Override
	public boolean undo() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean redo() {
		// TODO Auto-generated method stub
		return false;
	}

	public Square getActiveSquare() {
		return display.activeSquare;
	}

	public King getKing(Player player) {
		if (player.getColor().equals(Player.colors.white)) {
			return initial.kingWhite;
		} else if (player.getColor().equals(Player.colors.black)) {
			return initial.kingBlack;
		} else if (player.getColor().equals(Player.colors.blue)) {
			return initial.kingBlue;
		}
		return null;
	}

	public ChessboardDisplay getDisplay() {
		return display;
	}

	public int get_square_height() {
		return (getRadius() - getRadius() / 3) / 6;
	}

	public int getRadius() {
		return board_layout.image.getHeight(null) / 2;
	}

}
=====================================================================
Found a 37 line (196 tokens) duplication in the following files: 
Starting at line 74 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 74 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					if (!list.contains(newMove))
						list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(i, y) || i == x) {
					break;
				}

				if (i == 23) {
					i = -1;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	private static void leftHorizontalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 0) {
			x = 24;
		}
		for (int i = x - 1; i >= 0; --i) {// left

			if (piece.pieceBehaviour.checkPiece(i, piece.getSquare().getPozY())) {// if
																					// on
																					// this
																					// square
																					// isn't
																					// piece
				Square newMove = piece.getChessboard().getSquares()[i][y];

				if(ignoreKing){
					list.add(newMove);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
=====================================================================
Found a 20 line (188 tokens) duplication in the following files: 
Starting at line 45 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

					if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
						list.add(moveSq);
					}
				}
			}
		}
		
	}
	
	public void enPassantMove(Piece piece, ArrayList<Square> list, int newX, int i){
		int newY= piece.getSquare().getPozY();
		if (!piece.pieceBehaviour.isout(newX, newY + i)) {
			Square attSq = piece.getChessboard().getSquares()[newX][newY];
			Square moveSq = piece.getChessboard().getSquares()[newX][newY + i];
			SquareBoard chessboard= (SquareBoard)piece.getChessboard();
			if (attSq.piece != null && chessboard.getTwoSquareMovedPawn() != null
					&& attSq == chessboard.getTwoSquareMovedPawn().getSquare()) {
				// check if can hit left
				if (piece.getPlayer() != attSq.piece.getPlayer() && !attSq.piece.getName().equals("King")) {
					if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
=====================================================================
Found a 28 line (177 tokens) duplication in the following files: 
Starting at line 150 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 177 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 134 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 161 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		for (int i = s.getPozY() + 1; i <= 7; ++i) // up
		{
			if (this.getChessboard().getSquares()[s.getPozX()][i].piece == null
					|| this.getChessboard().getSquares()[s.getPozX()][i].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[s.getPozX()][i].piece.getPlayer() != this.getPlayer()) // if
			// isn't
			// our
			// piece
			{
				if (this.getChessboard().getSquares()[s.getPozX()][i].piece.getName().equals("Rook")
						|| this.getChessboard().getSquares()[s.getPozX()][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int i = s.getPozY() - 1; i >= 0; --i) // down
=====================================================================
Found a 28 line (173 tokens) duplication in the following files: 
Starting at line 204 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 231 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 188 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 215 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		for (int i = s.getPozX() - 1; i >= 0; --i) // left
		{
			if (this.getChessboard().getSquares()[i][s.getPozY()].piece == null
					|| this.getChessboard().getSquares()[i][s.getPozY()].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[i][s.getPozY()].piece.getPlayer() != this.getPlayer()) // if
			// isn't
			// our
			// piece
			{
				if (this.getChessboard().getSquares()[i][s.getPozY()].piece.getName().equals("Rook")
						|| this.getChessboard().getSquares()[i][s.getPozY()].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int i = s.getPozX() + 1; i <= 7; ++i) // right
=====================================================================
Found a 28 line (170 tokens) duplication in the following files: 
Starting at line 286 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 313 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 270 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 297 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		for (int h = s.getPozX() - 1, i = s.getPozY() - 1; !pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (this.getChessboard().getSquares()[h][i].piece == null
					|| this.getChessboard().getSquares()[h][i].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[h][i].piece.getPlayer() != this.getPlayer()) // if
																										// isn't
																										// our
																										// piece
			{
				if (this.getChessboard().getSquares()[h][i].piece.getName().equals("Bishop")
						|| this.getChessboard().getSquares()[h][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int h = s.getPozX() + 1, i = s.getPozY() + 1; !pieceBehaviour.isout(h, i); ++h, ++i) // right-up
=====================================================================
Found a 53 line (165 tokens) duplication in the following files: 
Starting at line 28 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\board\Square.java
Starting at line 28 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\board\Square.java

public class Square
{

    private int pozX; 
    private int pozY; 
    public Piece piece = null;

    public Square(int pozX, int pozY, Piece piece)
    {
        this.setPozX(pozX);
        this.setPozY(pozY);
        this.piece = piece;
    }/*--endOf-Square--*/


    public Square(Square square)
    {
        this.setPozX(square.getPozX());
        this.setPozY(square.getPozY());
        this.piece = square.piece;
    }

    public Square clone(Square square)
    {
        return new Square(square);
    }

    public void setPiece(Piece piece)
    {
        this.piece = piece;
        this.piece.setSquare(this);
    }


	public int getPozX() {
		return pozX;
	}


	public void setPozX(int pozX) {
		this.pozX = pozX;
	}


	public int getPozY() {
		return pozY;
	}


	public void setPozY(int pozY) {
		this.pozY = pozY;
	}
}
=====================================================================
Found a 20 line (165 tokens) duplication in the following files: 
Starting at line 26 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

			if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
				list.add(moveSq);

			}
		}
	}
	
	public void captureMove(Piece piece, ArrayList<Square> list, int newX){
		int newY=0;
		if (piece.getPlayer().isGoDown()) {// check if player "go" down or up
			newY = piece.getSquare().getPozY() + 1;// if yes, change value
		} else {
			newY = piece.getSquare().getPozY() -1;
													// (only in first move)
		}
		if (!piece.pieceBehaviour.isout(newX, newY)) {
			Square moveSq = piece.getChessboard().getSquares()[newX][newY];
		if (moveSq.piece != null) {// check if can hit left
			if (piece.getPlayer() != moveSq.piece.getPlayer() && !moveSq.piece.getName().equals("King")) {
					if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
=====================================================================
Found a 29 line (163 tokens) duplication in the following files: 
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	private static void rightHorizontalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 23) {
			x = -1;
		}
		for (int i = x + 1; i <= 23; ++i) {// right

			if (piece.pieceBehaviour.checkPiece(i, y)) {// if on this square
														// isn't piece

				Square newMove = piece.getChessboard().getSquares()[i][y];

				if(ignoreKing){
					list.add(newMove);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
=====================================================================
Found a 28 line (163 tokens) duplication in the following files: 
Starting at line 259 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 313 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 243 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 297 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		for (int h = s.getPozX() - 1, i = s.getPozY() + 1; !pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (this.getChessboard().getSquares()[h][i].piece == null
					|| this.getChessboard().getSquares()[h][i].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[h][i].piece.getPlayer() != this.getPlayer()) // if
																										// isn't
																										// our
																										// piece
			{
				if (this.getChessboard().getSquares()[h][i].piece.getName().equals("Bishop")
						|| this.getChessboard().getSquares()[h][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int h = s.getPozX() - 1, i = s.getPozY() - 1; !pieceBehaviour.isout(h, i); --h, --i) // left-down
=====================================================================
Found a 33 line (162 tokens) duplication in the following files: 
Starting at line 82 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoard.java
Starting at line 92 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoard.java

		System.out.println("active_x: " + this.display.active_x_square + " active_y: " + this.display.active_y_square);
		display.repaint();
	}

	public void unselect() {
		this.display.active_x_square = -1;
		this.display.active_y_square = -1;
		this.display.activeSquare = null;
		display.repaint();
	}

	public void setPieces(Player[] players) {

		initial.setPieces(players);

	}

	public int get_height() {

		return board_layout.image.getHeight(null);
	}

	public Square[][] getSquares() {
		return initial.squares;
	}

	public void move(Square begin, Square end) {
		// Check if pawn passed the center
		if (begin.piece instanceof Pawn) {
			Pawn movedPawn = (Pawn) begin.piece;
			if (movedPawn.getSquare().getPozY() == 5 && end.getPozY() == 5)
				movedPawn.passedCenter = true;
		}
=====================================================================
Found a 23 line (162 tokens) duplication in the following files: 
Starting at line 19 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 19 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	private static void backwardLeftMoves(Piece piece, ArrayList<Square> list) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int h = x - 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
=====================================================================
Found a 22 line (162 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}
	private static void forwardRightMoves(Piece piece, ArrayList<Square> list) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int h = x + 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); ++h, ++i) // right-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
=====================================================================
Found a 22 line (162 tokens) duplication in the following files: 
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}
	
	private static void forwardLeftMoves(Piece piece, ArrayList<Square> list) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int h = x + 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); ++h, --i) // right-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
=====================================================================
Found a 28 line (160 tokens) duplication in the following files: 
Starting at line 259 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 286 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 243 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 270 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		for (int h = s.getPozX() - 1, i = s.getPozY() + 1; !pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (this.getChessboard().getSquares()[h][i].piece == null
					|| this.getChessboard().getSquares()[h][i].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[h][i].piece.getPlayer() != this.getPlayer()) // if
																										// isn't
																										// our
																										// piece
			{
				if (this.getChessboard().getSquares()[h][i].piece.getName().equals("Bishop")
						|| this.getChessboard().getSquares()[h][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int h = s.getPozX() - 1, i = s.getPozY() - 1; !pieceBehaviour.isout(h, i); --h, --i) // left-down
=====================================================================
Found a 38 line (158 tokens) duplication in the following files: 
Starting at line 15 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceDisplay.java
Starting at line 15 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\PieceDisplay.java

public class PieceDisplay {
	IPieceDisplay display;

	public PieceDisplay(Piece piece) {

		if (piece.getChessboard() instanceof CircleBoard)
			display = new CirclePieceDisplay(piece);
		else if (piece.getChessboard() instanceof SquareBoard)
			display = new SquarePieceDisplay(piece);
	}

	public void draw(Graphics g) {
		display.draw(g);
	}

	public interface IPieceDisplay {
		public void draw(Graphics g);
	}

	private class CirclePieceDisplay implements IPieceDisplay {
		CircleBoard board;
		Square square;
		private PieceLayout layout;
		Piece piece;

		public CirclePieceDisplay(Piece piece) {
			board = (CircleBoard) piece.getChessboard();
			layout = piece.getLayout();
			this.piece = piece;

		}

		public final void draw(Graphics g) {
			try {
				Graphics2D g2d = (Graphics2D) g;
				g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

				square = piece.getSquare();
=====================================================================
Found a 27 line (153 tokens) duplication in the following files: 
Starting at line 10 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KingMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KingMoves.java
Starting at line 10 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KingMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KingMoves.java

public class KingMoves implements IMove {
	
	public void regularMove(Piece piece1,  ArrayList<Square> list, int x, int y){
		King piece = (King) piece1;
		for (int i = x - 1; i <= x + 1; i++) {
			for (int j = y - 1; j <= y + 1; j++) {
				if (!piece.pieceBehaviour.isout(i, j)) {// out of bounds
														// protection
					Square sq = piece.getChessboard().getSquares()[i][j];
					if (piece.getSquare() == sq) {// if we're checking square on
													// which is King
						continue;
					} else {
						if (piece.pieceBehaviour.checkPiece(i, j)) {// if square
																	// is empty
							if (piece.isSafe(sq)) {
								list.add(sq);
							}
						}
					}
				}
			}
		}

	}
	
	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing){
=====================================================================
Found a 26 line (153 tokens) duplication in the following files: 
Starting at line 286 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 340 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 270 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 324 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		for (int h = s.getPozX() - 1, i = s.getPozY() - 1; !pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (this.getChessboard().getSquares()[h][i].piece == null
					|| this.getChessboard().getSquares()[h][i].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[h][i].piece.getPlayer() != this.getPlayer()) // if
																										// isn't
																										// our
																										// piece
			{
				if (this.getChessboard().getSquares()[h][i].piece.getName().equals("Bishop")
						|| this.getChessboard().getSquares()[h][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}
=====================================================================
Found a 27 line (151 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}

		}
	}

	private static void backwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = y - 1; i >= 0; i--) {// down

			if (piece.pieceBehaviour.checkPiece(x, i)) {// if on this square
														// isn't piece

				Square newMove = piece.getChessboard().getSquares()[x][i];

				if(ignoreKing){
					list.add(newMove);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
=====================================================================
Found a 26 line (150 tokens) duplication in the following files: 
Starting at line 259 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 313 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 340 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 243 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 297 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 324 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		for (int h = s.getPozX() - 1, i = s.getPozY() + 1; !pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (this.getChessboard().getSquares()[h][i].piece == null
					|| this.getChessboard().getSquares()[h][i].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[h][i].piece.getPlayer() != this.getPlayer()) // if
																										// isn't
																										// our
																										// piece
			{
				if (this.getChessboard().getSquares()[h][i].piece.getName().equals("Bishop")
						|| this.getChessboard().getSquares()[h][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}
=====================================================================
Found a 18 line (144 tokens) duplication in the following files: 
Starting at line 17 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java

			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
				list.add(moveSq);

			}
		}
	}

	public void passCenter(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int newX = piece.getSquare().getPozX() + 8;
		if (newX >= 24) {
			newX -= 24;
		}
		if (!piece.pieceBehaviour.isout(newX, piece.getSquare().getPozY())) {
			Square moveSq = piece.getChessboard().getSquares()[newX][piece.getSquare().getPozY()];

			if (moveSq.piece == null && ignoreKing) {
				list.add(moveSq);
			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
=====================================================================
Found a 28 line (143 tokens) duplication in the following files: 
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 126 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			
			if (h == 23) {
				h = -1;
			}
		}
	}
	
	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing){
		ArrayList<Square> list = new ArrayList<>();
		forwardLeftMoves(piece, list, ignoreKing );
		forwardRightMoves(piece, list, ignoreKing);
		backwardLeftMoves(piece, list, ignoreKing);
		backwardRightMoves(piece, list, ignoreKing);
		
		return list;
	}
}
=====================================================================
Found a 27 line (143 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

                if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove))
                {
                    list.add(newMove);
                }

                if (piece.pieceBehaviour.otherOwner(i, y))
                {
                    break;
                }
            }
            else
            {
                break;//we've to break because we cannot go beside other piece!!
            }
        }
	}
	
	private static void leftHorizontalMoves(Piece piece, ArrayList<Square> list){
		int x= piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = x - 1; i >= 0; --i)
        {//left

            if (piece.pieceBehaviour.checkPiece(i, piece.getSquare().getPozY()))
            {//if on this square isn't piece
            	Square newMove= piece.getChessboard().getSquares()[i][y];
                
                if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove))
=====================================================================
Found a 16 line (140 tokens) duplication in the following files: 
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

public class BishopMoves implements IMove{

	private static void backwardRightMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 0) {
			x = 24;
		}
		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
=====================================================================
Found a 16 line (137 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 53 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java

			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
				list.add(moveSq);

			}
		}
	}

	public void captureMove(Piece piece, ArrayList<Square> list, int newX, int newY, boolean ignoreKing) {

		if (!piece.pieceBehaviour.isout(newX, newY)) {
			Square moveSq = piece.getChessboard().getSquares()[newX][newY];
			if (moveSq.piece != null) {// check if can hit left
				if (piece.getPlayer() != moveSq.piece.getPlayer() && !moveSq.piece.getName().equals("King")) {
					if (ignoreKing) {
						list.add(moveSq);
					} else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
=====================================================================
Found a 28 line (136 tokens) duplication in the following files: 
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			
			if (h == 0) {
				h = 24;
			}
		}
	}

	private static void backwardLeftMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 24 line (136 tokens) duplication in the following files: 
Starting at line 29 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 57 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) {
				if (ignoreKing) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;
			}

			if (h == 0) {
				h = 24;
			}
		}
	}

	private static void backwardLeftMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 26 line (135 tokens) duplication in the following files: 
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}

		}
	}
	
	private static void backwardVerticalMoves(Piece piece, ArrayList<Square> list){
		int x= piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = y - 1; i >= 0; i--)
        {//down

            if (piece.pieceBehaviour.checkPiece(x, i))
            {//if on this square isn't piece

            	Square newMove= piece.getChessboard().getSquares()[x][i];
                
                if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove))
=====================================================================
Found a 29 line (135 tokens) duplication in the following files: 
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

                if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove))
                {
                    list.add(newMove);
                }

                if (piece.pieceBehaviour.otherOwner(x, i))
                {
                    break;
                }
            }
            else
            {
                break;//we've to break because we cannot go beside other piece!!
            }
        }
	}
	
	private static void rightHorizontalMoves(Piece piece, ArrayList<Square> list){
		int x= piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = x + 1; i <= 7; ++i)
        {//right

            if (piece.pieceBehaviour.checkPiece(i, y))
            {//if on this square isn't piece


				Square newMove = piece.getChessboard().getSquares()[i][y];
                
                if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove))
=====================================================================
Found a 25 line (134 tokens) duplication in the following files: 
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 107 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java

		for (int h = x + 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); ++h, ++i) // right-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			
			if (h == 23) {
				h = -1;
			}
		}
	}
=====================================================================
Found a 26 line (134 tokens) duplication in the following files: 
Starting at line 87 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 119 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

		for (int h = x + 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); ++h, ++i) // right-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if (ignoreKing) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}

			if (h == 23) {
				h = -1;
			}
		}
	}
=====================================================================
Found a 15 line (133 tokens) duplication in the following files: 
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java

			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
				list.add(moveSq);
			}
		}
	}

	public void regularMoveAfterCenter(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int newY = piece.getSquare().getPozY() - 1;

		if (!piece.pieceBehaviour.isout(piece.getSquare().getPozX(), newY)) {
			Square moveSq = piece.getChessboard().getSquares()[piece.getSquare().getPozX()][newY];

			if (moveSq.piece == null && ignoreKing) {
				list.add(moveSq);
			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
=====================================================================
Found a 15 line (133 tokens) duplication in the following files: 
Starting at line 12 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java
Starting at line 10 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

public class PawnMoves implements IMove {
	
	public void regularMove(Piece piece, ArrayList<Square> list, int i) {
		int newY=0;
		if (piece.getPlayer().isGoDown()) {// check if player "go" down or up
			newY = piece.getSquare().getPozY() + i;// if yes, change value
		} else {
			newY = piece.getSquare().getPozY() -i;
													// (only in first move)
		}
		
		if (!piece.pieceBehaviour.isout(piece.getSquare().getPozX(), newY )) {
			Square moveSq = piece.getChessboard().getSquares()[piece.getSquare().getPozX()][newY];

			if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
=====================================================================
Found a 39 line (130 tokens) duplication in the following files: 
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Rook.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Rook.java

public class Rook extends Piece
{

    private boolean wasMotion = false;
//    protected static final Image imageWhite = GUI.loadImage("Rook-W.png");
//    protected static final Image imageBlack = GUI.loadImage("Rook-B.png");
    public static short value = 5;
	ArrayList<IMove> moveBehaviour;


    public Rook(IChessboard chessboard, Player player, ArrayList<IMove> moveBehaviour)
   {
    	super(chessboard, player, "Rook"); // call initializer of super type: Piece 
		this.symbol = "R";
		this.moveBehaviour = moveBehaviour;
    }

    /**
     *  Annotation to superclass Piece changing pawns location
     * @return  ArrayList with new position of piece
     */
    
    public ArrayList<Square> allMoves(boolean ignoreKing)
    {	ArrayList<Square> list = new ArrayList<Square>();
        //return RookMoves.getMoves(this);
    	for (IMove iMove : moveBehaviour) {
			list.addAll(iMove.getMoves(this, ignoreKing));
		}
		return list;
    }

	public boolean wasMotion() {
		return wasMotion;
	}

	public void setWasMotion(boolean wasMotion) {
		this.wasMotion = wasMotion;
	}
}
=====================================================================
Found a 62 line (129 tokens) duplication in the following files: 
Starting at line 29 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Player.java
Starting at line 28 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Player.java

public class Player implements Serializable
{

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	String name;

    public enum colors
    {

        white, black, red, blue, green;
    }
    
    private colors color;

    public enum playerTypes
    {

        localUser, networkUser, computer
    }
    public playerTypes playerType;
    
    private boolean goDown;

    
    public Player(String name, String color)
    {
        this.name = name;
        this.setColor(colors.valueOf(color));
        this.setGoDown(false);
    }

    /** Method setting the players name
     *  @param name name of player
     */
    public void setName(String name)
    {
        this.name = name;
    }

    /** Method getting the players name
     *  @return name of player
     */
    public String getName()
    {
        return this.name;
    }

    /** Method setting the players type
     *  @param type type of player - enumerate
     */
    public void setType(playerTypes type)
    {
        this.playerType = type;
    }

	public colors getColor() {
		return color;
	}
=====================================================================
Found a 29 line (128 tokens) duplication in the following files: 
Starting at line 110 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 110 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					if (!list.contains(newMove))
						list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(i, y) || i == x) {
					break;
				}

				if (i == 0) {
					i = 24;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing) {
		ArrayList<Square> list = new ArrayList<>();
		forwardVerticalMoves(piece, list, ignoreKing);
		backwardVerticalMoves(piece, list, ignoreKing);
		leftHorizontalMoves(piece, list, ignoreKing);
		rightHorizontalMoves(piece, list, ignoreKing);

		return list;
	}
}
=====================================================================
Found a 22 line (127 tokens) duplication in the following files: 
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			
			if (h == 0) {
=====================================================================
Found a 19 line (127 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 107 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java

		for (int h = x - 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			if (h == 0) {
=====================================================================
Found a 18 line (127 tokens) duplication in the following files: 
Starting at line 29 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 87 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) {
				if (ignoreKing) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;
			}

			if (h == 0) {
=====================================================================
Found a 20 line (127 tokens) duplication in the following files: 
Starting at line 57 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 119 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

		for (int h = x - 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if (ignoreKing) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			if (h == 0) {
=====================================================================
Found a 24 line (126 tokens) duplication in the following files: 
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoard.java
Starting at line 21 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoard.java

public class CircleBoard implements IChessboard {

	public static final int top = 0;
	public static final int bottom = 7;

	public MovesTable moves_history;

	ChessboardLayout board_layout = new ChessboardLayout("circle_chessboard.png", "sel_circle.png", "able_circle.png");
	public CircleBoardInitialization initial;
	private CircleBoardDisplay display;

	public CircleBoard(Settings settings, MovesTable moves_history) {

		settings.renderLabels = false;
		initial = new CircleBoardInitialization(this);
		display = new CircleBoardDisplay(null, null, new Point(0, 0), settings.renderLabels, settings.upsideDown, this);
		this.moves_history = moves_history;
	}

	public Square getSquare(int x, int y) {

		if (x > 2 * getRadius() || y > 2 * getRadius()) // test if click is out
														// of chessboard
		{
=====================================================================
Found a 22 line (126 tokens) duplication in the following files: 
Starting at line 72 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoard.java
Starting at line 135 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 135 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java

		} catch (java.lang.ArrayIndexOutOfBoundsException exc) {
			System.out.println("!!Array out of bounds when getting Square with Chessboard.getSquare(int,int) : " + exc);
			return null;
		}
	}

	public void select(Square sq) {
		this.display.activeSquare = sq;
		this.display.active_x_square = sq.getPozX();
		this.display.active_y_square = sq.getPozY();
		System.out.println("active_x: " + this.display.active_x_square + " active_y: " + this.display.active_y_square);
		display.repaint();
	}

	public void unselect() {
		this.display.active_x_square = -1;
		this.display.active_y_square = -1;
		this.display.activeSquare = null;
		display.repaint();
	}

	public void setPieces(Player[] players) {
=====================================================================
Found a 22 line (124 tokens) duplication in the following files: 
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 107 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			
			if (h == 0) {
=====================================================================
Found a 19 line (124 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java

		for (int h = x - 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			if (h == 0) {
=====================================================================
Found a 18 line (124 tokens) duplication in the following files: 
Starting at line 29 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 119 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) {
				if (ignoreKing) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;
			}

			if (h == 0) {
=====================================================================
Found a 20 line (124 tokens) duplication in the following files: 
Starting at line 57 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 87 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

		for (int h = x - 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if (ignoreKing) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			if (h == 0) {
=====================================================================
Found a 24 line (123 tokens) duplication in the following files: 
Starting at line 83 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 83 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}
	
	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing){
		ArrayList<Square> list = new ArrayList<>();
		forwardLeftMoves(piece, list);
		forwardRightMoves(piece, list);
		backwardLeftMoves(piece, list);
		backwardRightMoves(piece, list);
		
		return list;
	}
}
=====================================================================
Found a 23 line (123 tokens) duplication in the following files: 
Starting at line 393 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 415 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 377 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 399 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		newX = s.getPozX() - 1;
		newY = s.getPozY() + 2;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 3
		newX = s.getPozX() + 1;
=====================================================================
Found a 23 line (123 tokens) duplication in the following files: 
Starting at line 481 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 503 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 465 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 487 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		newX = s.getPozX() + 1;
		newY = s.getPozY() - 2;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 7
		newX = s.getPozX() - 1;
=====================================================================
Found a 23 line (122 tokens) duplication in the following files: 
Starting at line 371 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 437 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 355 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 421 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		newX = s.getPozX() - 2;
		newY = s.getPozY() + 1;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 2
		newX = s.getPozX() - 1;
=====================================================================
Found a 21 line (121 tokens) duplication in the following files: 
Starting at line 374 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 484 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 358 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 468 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 2
		newX = s.getPozX() - 1;
		newY = s.getPozY() + 2;
=====================================================================
Found a 21 line (121 tokens) duplication in the following files: 
Starting at line 396 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 462 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 380 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 446 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 3
		newX = s.getPozX() + 1;
		newY = s.getPozY() + 2;
=====================================================================
Found a 21 line (121 tokens) duplication in the following files: 
Starting at line 418 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 440 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 402 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 424 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 4
		newX = s.getPozX() + 2;
		newY = s.getPozY() + 1;
=====================================================================
Found a 66 line (121 tokens) duplication in the following files: 
Starting at line 67 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Pawn.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Pawn.java

public class Pawn extends Piece {

	boolean down;
	public boolean passedCenter;
//	protected static final Image imageWhite = GUI.loadImage("Pawn-W.png");
//	protected static final Image imageBlack = GUI.loadImage("Pawn-B.png");
	public static short value = 1;
	ArrayList<IMove> moveBehaviour;
	
	public Pawn(IChessboard chessboard, Player player,ArrayList<IMove> moveBehaviour ) {
		super(chessboard, player, "Pawn"); // call initializer of super type: Piece 
		this.symbol = "";
		this.moveBehaviour = moveBehaviour;
	}

	/**
	 * Annotation to superclass Piece changing pawns location
	 * 
	 * @return ArrayList with new position of piece
	 */

	public ArrayList<Square> allMoves(boolean ignoreKing) {
		ArrayList<Square> list = new ArrayList<Square>();
		/*
		ArrayList<Square> list = new ArrayList<Square>();
		int first, second;
		King myKing = myKing();
		int x= this.getSquare().getPozX(), y= this.getSquare().getPozY();

		if (this.getPlayer().isGoDown()) {// check if player "go" down or up
			first = y + 1;// if yes, change value
			second = y + 2;// if yes, change value
		} else {
			first = y - 1;// number where to move
			second = y - 2;// number where to move
													// (only in first move)
		}

		if (!pieceBehaviour.isout(x, first)) {
			regularMove(chessboard, myKing, first, list);
						
			if ((getPlayer().isGoDown() && y == 1)
					|| (!getPlayer().isGoDown() && y == 6)) {
				regularMove(chessboard, myKing, second, list);
			}
			//left
			captureMove(chessboard, myKing, x - 1, first, list);
			enPassantMove(chessboard, myKing, x - 1, y, -1, list);
			
			//right
			captureMove(chessboard, myKing, x + 1, first, list);
			enPassantMove(chessboard, myKing, x + 1, y, 1, list);
			
		}
	*/
		for (IMove iMove : moveBehaviour) {
			list.addAll(iMove.getMoves(this, ignoreKing));
		}
		return list;
	}


	void promote(Piece newPiece) {
		throw new UnsupportedOperationException("Not supported yet.");
	}
}
=====================================================================
Found a 8 line (119 tokens) duplication in the following files: 
Starting at line 10 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 10 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java

public class PawnMoves implements IMove {
	public void regularMoveBeforeCenter(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int newY = piece.getSquare().getPozY() + 1;
		if (!piece.pieceBehaviour.isout(piece.getSquare().getPozX(), newY)) {
			Square moveSq = piece.getChessboard().getSquares()[piece.getSquare().getPozX()][newY];
			if (moveSq.piece == null && ignoreKing) {
				list.add(moveSq);
			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
=====================================================================
Found a 12 line (118 tokens) duplication in the following files: 
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java

public class KnightMoves implements IMove {
	public static void LMove(Piece piece, int newX, int newY, ArrayList<Square> list, boolean ignoreKing) {
		if (newX < 0) {
			newX += 24;
		} else if (newX > 24) {
			newX -= 24;
		}
		if (!piece.pieceBehaviour.isout(newX, newY) && piece.pieceBehaviour.checkPiece(newX, newY)) {
			Square newMove = piece.getChessboard().getSquares()[newX][newY];
			if (ignoreKing){
				list.add(newMove);
			}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
=====================================================================
Found a 12 line (116 tokens) duplication in the following files: 
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

public class RookMoves implements IMove {

	private static void forwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = y + 1; i <= 5; i++) {// up

			if (piece.pieceBehaviour.checkPiece(x, i)) {
				Square newMove = piece.getChessboard().getSquares()[x][i];

				if(ignoreKing){
					list.add(newMove);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
=====================================================================
Found a 20 line (115 tokens) duplication in the following files: 
Starting at line 459 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 525 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 443 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 509 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		newX = s.getPozX() + 2;
		newY = s.getPozY() - 1;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}
=====================================================================
Found a 22 line (115 tokens) duplication in the following files: 
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Knight.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Knight.java

public class Knight extends Piece
{

    public static short value = 3;
//    protected static final Image imageWhite = GUI.loadImage("Knight-W.png");
//    protected static final Image imageBlack = GUI.loadImage("Knight-B.png");
	ArrayList<IMove> moveBehaviour;

    
    public Knight(IChessboard chessboard, Player player, ArrayList<IMove> moveBehaviour)
    {
    	super(chessboard, player, "Knight"); // call initializer of super type: Piece 
		this.symbol = "N";
		this.moveBehaviour = moveBehaviour;

    }

    public void regularMove(IChessboard chessboard, King myKing, int newX, int newY, ArrayList<Square> list){
    	
    	if (!pieceBehaviour.isout(newX, newY) && pieceBehaviour.checkPiece(newX, newY))
        {		Square newMove= chessboard.getSquares()[newX][newY];
                if (myKing.willBeSafeWhenMoveOtherPiece(this.getSquare(), newMove))
=====================================================================
Found a 22 line (114 tokens) duplication in the following files: 
Starting at line 438 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 460 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 422 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 444 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		newY = s.getPozY() + 1;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 5
		newX = s.getPozX() + 2;
=====================================================================
Found a 22 line (113 tokens) duplication in the following files: 
Starting at line 372 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 460 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 356 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 444 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		newY = s.getPozY() + 1;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 2
		newX = s.getPozX() - 1;
=====================================================================
Found a 20 line (113 tokens) duplication in the following files: 
Starting at line 374 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 506 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 358 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 490 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 2
		newX = s.getPozX() - 1;
=====================================================================
Found a 22 line (113 tokens) duplication in the following files: 
Starting at line 394 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 416 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 482 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 504 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 378 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 400 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 466 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 488 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		newY = s.getPozY() + 2;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 3
		newX = s.getPozX() + 1;
=====================================================================
Found a 20 line (113 tokens) duplication in the following files: 
Starting at line 396 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 440 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 380 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 424 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 3
		newX = s.getPozX() + 1;
=====================================================================
Found a 20 line (113 tokens) duplication in the following files: 
Starting at line 418 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 462 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 402 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 446 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 4
		newX = s.getPozX() + 2;
=====================================================================
Found a 20 line (112 tokens) duplication in the following files: 
Starting at line 374 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 396 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 418 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 358 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 380 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 402 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 2
		newX = s.getPozX() - 1;
=====================================================================
Found a 20 line (112 tokens) duplication in the following files: 
Starting at line 440 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 462 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 484 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 506 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 424 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 446 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 468 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 490 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}

		// 5
		newX = s.getPozX() + 2;
=====================================================================
Found a 41 line (111 tokens) duplication in the following files: 
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessApp.java
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessApp.java

public class JChessApp extends SingleFrameApplication {
     private static JChessView jcv;
    /**
     * At startup create and show the main frame of the application.
     */
    @Override protected void startup() {
        setJcv(new JChessView(this));
        show(getJcv());
    }

    /**
     * This method is to initialize the specified window by injecting resources.
     * Windows shown in our application come fully initialized from the GUI
     * builder, so this additional configuration is not needed.
     */
    @Override protected void configureWindow(java.awt.Window root) {
    }

    /**
     * A convenient static getter for the application instance.
     * @return the instance of JChessApp
     */
    public static JChessApp getApplication() {
        return Application.getInstance(JChessApp.class);
    }

    /**
     * Main method launching the application.
     */
    public static void main(String[] args) {
        launch(JChessApp.class, args);
    }

	public static JChessView getJcv() {
		return jcv;
	}

	public static void setJcv(JChessView jcv) {
		JChessApp.jcv = jcv;
	}
}
=====================================================================
Found a 18 line (109 tokens) duplication in the following files: 
Starting at line 563 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 581 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 619 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 547 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 565 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 603 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

			newY = s.getPozY() + 1;
			if (!pieceBehaviour.isout(newX, newY)) {
				if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
				// on
				// this
				// sqhuare
				// isn't
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
				// is
				// our
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Pawn")) {
					return false;
				}
			}
=====================================================================
Found a 20 line (108 tokens) duplication in the following files: 
Starting at line 96 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 121 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 82 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 112 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

				for (int j = 0; j < 8; ++j) {
					if (getChessboard().getSquares()[i][j].piece != null
							&& getChessboard().getSquares()[i][j].piece.getPlayer() == this.getPlayer()
							&& getChessboard().getSquares()[i][j].piece.allMoves(false).size() != 0) {
						return 0;
					}
				}
			}

			if (this.isChecked()) {
				return 1;
			} else {
				return 2;
			}
		} else {
			return 0;
		}
	}

	public int isCheckmatedOrStalemated() {
=====================================================================
Found a 39 line (108 tokens) duplication in the following files: 
Starting at line 23 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Connection_info.java
Starting at line 23 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Connection_info.java

public enum Connection_info
{

    all_is_ok(0),
    err_bad_table_ID(1),
    err_table_is_full(2),
    err_game_without_observer(3),
    err_bad_password(4);
    private int value;

    Connection_info(int value)
    {
        this.value = value;
    }

    public static Connection_info get(int id)
    {
        switch (id)
        {
            case 0:
                return Connection_info.all_is_ok;
            case 1:
                return Connection_info.err_bad_table_ID;
            case 2:
                return Connection_info.err_table_is_full;
            case 3:
                return Connection_info.err_game_without_observer;
            case 4:
                return Connection_info.err_bad_password;
            default:
                return null;
        }
    }

    public int getValue()
    {
        return value;
    }
}
=====================================================================
Found a 20 line (106 tokens) duplication in the following files: 
Starting at line 359 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 121 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 333 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 117 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

            Client observer = clientObservers.get(clientObservers.size()-1);
            
            observer.output.writeUTF("#settings");
            observer.output.writeObject(observerSettings);
            observer.output.flush();
            
            for(Move m: movesList)
            {
                observer.output.writeUTF("#move");
                observer.output.writeInt(m.bX);
                observer.output.writeInt(m.bY);
                observer.output.writeInt(m.eX);
                observer.output.writeInt(m.eY);
                
            }
            observer.output.flush();
        }

        //send new move to other clients without himself
        public void sendMoveToOther(Client sender, int beginX, int beginY, int endX, int endY) throws IOException
=====================================================================
Found a 13 line (106 tokens) duplication in the following files: 
Starting at line 12 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java

		int newY = piece.getSquare().getPozY() + 1;
		if (!piece.pieceBehaviour.isout(piece.getSquare().getPozX(), newY)) {
			Square moveSq = piece.getChessboard().getSquares()[piece.getSquare().getPozX()][newY];
			if (moveSq.piece == null && ignoreKing) {
				list.add(moveSq);
			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
				list.add(moveSq);

			}
		}
	}

	public void passCenter(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 16 line (106 tokens) duplication in the following files: 
Starting at line 372 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 438 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 563 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 356 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 422 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 547 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		newY = s.getPozY() + 1;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
=====================================================================
Found a 19 line (106 tokens) duplication in the following files: 
Starting at line 372 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 438 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 526 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 356 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 422 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 510 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		newY = s.getPozY() + 1;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}
=====================================================================
Found a 16 line (106 tokens) duplication in the following files: 
Starting at line 460 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 526 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 601 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 444 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 510 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 585 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		newY = s.getPozY() - 1;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
=====================================================================
Found a 18 line (106 tokens) duplication in the following files: 
Starting at line 581 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 601 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 619 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 565 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 585 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 603 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

			newX = s.getPozX() + 1;
			if (!pieceBehaviour.isout(newX, newY)) {
				if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
				// on
				// this
				// sqhuare
				// isn't
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
				// is
				// our
				// piece
				{
				} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Pawn")) {
					return false;
				}
			}
=====================================================================
Found a 15 line (106 tokens) duplication in the following files: 
Starting at line 12 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 45 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java

		int newY = piece.getSquare().getPozY() + 1;
		if (!piece.pieceBehaviour.isout(piece.getSquare().getPozX(), newY)) {
			Square moveSq = piece.getChessboard().getSquares()[piece.getSquare().getPozX()][newY];
			if (moveSq.piece == null && ignoreKing) {
				list.add(moveSq);

			} else if (moveSq.piece == null && piece.myKing().willBeSafeAfterMove(piece.getSquare(), moveSq)) {

				list.add(moveSq);

			}
		}
	}

	public void passCenter(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 17 line (105 tokens) duplication in the following files: 
Starting at line 396 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 418 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 484 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 506 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 528 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 380 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 402 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 468 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 490 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 512 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
				return false;
			}
		}
=====================================================================
Found a 34 line (102 tokens) duplication in the following files: 
Starting at line 44 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Bishop.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Bishop.java

public class Bishop extends Piece {

	public static short value = 3;
	
//	protected static final Image imageWhite = GUI.loadImage("Bishop-W.png");
//	protected static final Image imageBlack = GUI.loadImage("Bishop-B.png");
	ArrayList<IMove> moveBehaviour;

	public Bishop(IChessboard chessboard, Player player, ArrayList<IMove> moveBehaviour) {
		
		super(chessboard, player, "Bishop"); // call initializer of super type: Piece 
		this.symbol = "B";
		this.moveBehaviour = moveBehaviour;

	}

	/**
	 * Annotation to superclass Piece changing pawns location
	 * 
	 * @return ArrayList with new position of piece
	 */

	public ArrayList<Square> allMoves(boolean ignoreKing) {
		ArrayList<Square> list = new ArrayList<Square>();
    	for (IMove iMove : moveBehaviour) {
			list.addAll(iMove.getMoves(this, ignoreKing));
		}
		return list;
		
		//return BishopMoves.getMoves(this);
	}
	
	
}
=====================================================================
Found a 31 line (102 tokens) duplication in the following files: 
Starting at line 44 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Queen.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Queen.java

public class Queen extends Piece {

	public static short value = 9;
//	protected static final Image imageWhite = GUI.loadImage("Queen-W.png");
//	protected static final Image imageBlack = GUI.loadImage("Queen-B.png");
	ArrayList<IMove> moveBehaviour;

	public Queen(IChessboard chessboard, Player player, ArrayList<IMove> moveBehaviour) {

		super(chessboard, player, "Queen"); // call initializer of super type: Piece 
		this.symbol = "Q";
		this.moveBehaviour = moveBehaviour;
	}

	/**
	 * Annotation to superclass Piece changing pawns location
	 * 
	 * @return ArrayList with new possition of piece
	 */

	public ArrayList<Square> allMoves(boolean ignoreKing) {
		ArrayList<Square> list = new ArrayList<Square>();
		
		for (IMove iMove : moveBehaviour) {
			list.addAll(iMove.getMoves(this, ignoreKing));
		}
		
		return list;
		
	}
}
=====================================================================
Found a 22 line (101 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	private static void backwardLeftMoves(Piece piece, ArrayList<Square> list) {
=====================================================================
Found a 16 line (101 tokens) duplication in the following files: 
Starting at line 372 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 438 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 581 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 619 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 356 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 422 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 565 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 603 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		newY = s.getPozY() + 1;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
=====================================================================
Found a 21 line (101 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	private static void backwardLeftMoves(Piece piece, ArrayList<Square> list) {
=====================================================================
Found a 26 line (100 tokens) duplication in the following files: 
Starting at line 534 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 534 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java

		LogToFile.log(new UnsupportedOperationException("Not supported yet."), "Error", "jchessView resized!!;");
		throw new UnsupportedOperationException("Not supported yet.");
	}

	public Game getActiveTabGame() throws ArrayIndexOutOfBoundsException {
		Game activeGame = (Game) this.gamesPane.getComponentAt(this.gamesPane.getSelectedIndex());
		return activeGame;
	}

	public int getNumberOfOpenedTabs() {
		return this.gamesPane.getTabCount();
	}

	public void componentMoved(ComponentEvent e) {
		throw new UnsupportedOperationException("Not supported yet.");
	}

	public void componentShown(ComponentEvent e) {
		throw new UnsupportedOperationException("Not supported yet.");
	}

	public void componentHidden(ComponentEvent e) {
		throw new UnsupportedOperationException("Not supported yet.");
	}

}
=====================================================================
Found a 23 line (100 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java

		for (int i = y + 1; i <= 5; i++) {// up

			if (piece.pieceBehaviour.checkPiece(x, i)) {
				Square newMove = piece.getChessboard().getSquares()[x][i];

				if(ignoreKing){
					list.add(newMove);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}

		}
	}

	private static void backwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 10 line (100 tokens) duplication in the following files: 
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

public class RookMoves implements IMove {	
	
	private static void forwardVerticalMoves(Piece piece, ArrayList<Square> list) {
		int x= piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = y + 1; i <= 7; i++) {// up

			if (piece.pieceBehaviour.checkPiece(x, i)) {
				Square newMove = piece.getChessboard().getSquares()[x][i];

				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
=====================================================================
Found a 23 line (100 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

		for (int i = y + 1; i <= 5; i++) {// up

			if (piece.pieceBehaviour.checkPiece(x, i)) {
				Square newMove = piece.getChessboard().getSquares()[x][i];

				if (ignoreKing) {
					list.add(newMove);
				} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}

		}
	}

	private static void backwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 11 line (99 tokens) duplication in the following files: 
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

public class BishopMoves implements IMove{

	private static void backwardRightMoves(Piece piece, ArrayList<Square> list) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
=====================================================================
Found a 10 line (98 tokens) duplication in the following files: 
Starting at line 169 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 185 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 173 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 188 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

		int labelWidth = (int) Math.ceil(square_height2 * 8 + (2 * labelHeight));
		BufferedImage uDL = new BufferedImage(labelWidth + min_label_height, labelHeight, BufferedImage.TYPE_3BYTE_BGR);
		Graphics2D uDL2D = (Graphics2D) uDL.createGraphics();
		uDL2D.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		uDL2D.setColor(Color.white);

		uDL2D.fillRect(0, 0, labelWidth + min_label_height, labelHeight);
		uDL2D.setColor(Color.black);
		uDL2D.setFont(new Font("Arial", Font.BOLD, 12));
		int addX = (int) (square_height2 / 2);
=====================================================================
Found a 22 line (98 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 36 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	private static void backwardLeftMoves(Piece piece, ArrayList<Square> list) {
=====================================================================
Found a 18 line (98 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 78 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java

		for (int h = x - 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}
=====================================================================
Found a 16 line (98 tokens) duplication in the following files: 
Starting at line 372 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 438 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 601 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 356 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 422 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 585 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		newY = s.getPozY() + 1;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
=====================================================================
Found a 16 line (98 tokens) duplication in the following files: 
Starting at line 460 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 526 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 563 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 581 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 619 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 444 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 510 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 547 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 565 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 603 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		newY = s.getPozY() - 1;

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
=====================================================================
Found a 21 line (98 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	private static void backwardLeftMoves(Piece piece, ArrayList<Square> list) {
=====================================================================
Found a 18 line (98 tokens) duplication in the following files: 
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 78 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

		for (int h = x - 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}
=====================================================================
Found a 14 line (97 tokens) duplication in the following files: 
Starting at line 396 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 418 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 484 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 506 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 564 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 582 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 602 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 620 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 380 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 402 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 468 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 490 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 548 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 566 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 586 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 604 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		if (!pieceBehaviour.isout(newX, newY)) {
			if (this.getChessboard().getSquares()[newX][newY].piece == null) // if
																				// on
			// this
			// sqhuare
			// isn't
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getPlayer() == this.getPlayer()) // if
			// is
			// our
			// piece
			{
			} else if (this.getChessboard().getSquares()[newX][newY].piece.getName().equals("Knight")) {
=====================================================================
Found a 20 line (95 tokens) duplication in the following files: 
Starting at line 32 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\MD5.java
Starting at line 32 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\MD5.java

public class MD5
{

    public static String encrypt(String str)
    {
        MessageDigest m;

        try
        {
            m = MessageDigest.getInstance("MD5");
            m.update(str.getBytes(), 0, str.length());
            return new BigInteger(1, m.digest()).toString(16);
        }
        catch (NoSuchAlgorithmException ex)
        {
            Logger.getLogger(MD5.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
    }
}
=====================================================================
Found a 25 line (95 tokens) duplication in the following files: 
Starting at line 191 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 141 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Server.java
Starting at line 170 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 126 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Server.java

                        table.addPlayer(new Client(s, input, output, nick, table));
                        table.sendMessageToAll("** Gracz "+nick+" dołączył do gry **");

                        if(table.isAllPlayers())
                        {
                            table.generateSettings();

                            print("Send settings to all");
                            table.sendSettingsToAll();

                            table.sendMessageToAll("** Nowa gra, zaczna: "+table.clientPlayer1.nick+"**");
                        }
                        else
                        {
                            table.sendMessageToAll("** Oczekiwanie na drugiego gracza **");
                        }
                    }
                }
                else//join as observer
                {
                    print("join as observer");
                    if(!table.canObserversJoin())
                    {
                        print("Observers can't join");
                        output.writeInt(connection_info.err_game_without_observer.getValue());
=====================================================================
Found a 17 line (95 tokens) duplication in the following files: 
Starting at line 67 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 100 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java

			if (piece.pieceBehaviour.checkPiece(i, y)) {// if on this square
														// isn't piece

				Square newMove = piece.getChessboard().getSquares()[i][y];

				if(ignoreKing){
					list.add(newMove);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					if (!list.contains(newMove))
						list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(i, y) || i == x) {
					break;
				}

				if (i == 23) {
=====================================================================
Found a 20 line (95 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 78 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}
=====================================================================
Found a 27 line (95 tokens) duplication in the following files: 
Starting at line 97 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 91 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

                if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove))
                {
                    list.add(newMove);
                }

                if (piece.pieceBehaviour.otherOwner(i, y))
                {
                    break;
                }
            }
            else
            {
                break;//we've to break because we cannot go beside other piece!!
            }
        }
	}
	
	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing){
		ArrayList<Square> list = new ArrayList<>();
		forwardVerticalMoves(piece, list);
		backwardVerticalMoves(piece, list);
		leftHorizontalMoves(piece, list);
		rightHorizontalMoves(piece, list);
		
		return list;
	}
}
=====================================================================
Found a 17 line (95 tokens) duplication in the following files: 
Starting at line 67 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 100 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

			if (piece.pieceBehaviour.checkPiece(i, y)) {// if on this square
														// isn't piece

				Square newMove = piece.getChessboard().getSquares()[i][y];

				if (ignoreKing) {
					list.add(newMove);
				} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
					if (!list.contains(newMove))
						list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(i, y) || i == x) {
					break;
				}

				if (i == 23) {
=====================================================================
Found a 19 line (95 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 78 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}
=====================================================================
Found a 12 line (94 tokens) duplication in the following files: 
Starting at line 107 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\GameClock.java
Starting at line 141 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\GameClock.java
Starting at line 106 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\GameClock.java
Starting at line 140 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\GameClock.java

        Font font = new Font("Serif", Font.ITALIC, 20);

        g2d.setColor(Color.WHITE);
        g2d.fillRect(5, 30, 80, 30);
        g2d.setFont(font);

        g2d.setColor(Color.BLACK);
        g2d.fillRect(85, 30, 90, 30);
        g2d.drawRect(5, 30, 170, 30);
        g2d.drawRect(5, 60, 170, 30);
        g2d.drawLine(85, 30, 85, 90);
        font = new Font("Serif", Font.ITALIC, 16);
=====================================================================
Found a 16 line (94 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 14 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java

			}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
				list.add(newMove);
			}
		}
	}

	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing) {
		int newX, newY;

		ArrayList<Square> list = new ArrayList<>();

		// 1
		newX = piece.getSquare().getPozX() - 2;
		newY = piece.getSquare().getPozY() + 1;

		LMove(piece, newX, newY, list, ignoreKing);
=====================================================================
Found a 16 line (94 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 14 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

			} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
				list.add(newMove);
			}
		}
	}

	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing) {
		int newX, newY;

		ArrayList<Square> list = new ArrayList<>();

		// 1
		newX = piece.getSquare().getPozX() - 2;
		newY = piece.getSquare().getPozY() + 1;

		LMove(piece, newX, newY, list, ignoreKing);
=====================================================================
Found a 21 line (87 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java

		for (int i = y + 1; i <= 7; i++) {// up

			if (piece.pieceBehaviour.checkPiece(x, i)) {
				Square newMove = piece.getChessboard().getSquares()[x][i];

				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}

		}
	}
	
	private static void backwardVerticalMoves(Piece piece, ArrayList<Square> list){
=====================================================================
Found a 21 line (87 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

		for (int i = y + 1; i <= 7; i++) {// up

			if (piece.pieceBehaviour.checkPiece(x, i)) {
				Square newMove = piece.getChessboard().getSquares()[x][i];

				if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}

		}
	}

	private static void backwardVerticalMoves(Piece piece, ArrayList<Square> list) {
=====================================================================
Found a 10 line (86 tokens) duplication in the following files: 
Starting at line 191 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 220 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 195 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 214 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

		this.upDownLabel = uDL;

		uDL = new BufferedImage(labelHeight, labelWidth + min_label_height, BufferedImage.TYPE_3BYTE_BGR);
		uDL2D = (Graphics2D) uDL.createGraphics();
		uDL2D.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		uDL2D.setColor(Color.white);
		// uDL2D.fillRect(0, 0, 800, 800);
		uDL2D.fillRect(0, 0, labelHeight, labelWidth + min_label_height);
		uDL2D.setColor(Color.black);
		uDL2D.setFont(new Font("Arial", Font.BOLD, 12));
=====================================================================
Found a 28 line (86 tokens) duplication in the following files: 
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\GUI.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\GUI.java

public class GUI {

	public Game game;
	static final public Properties configFile = GUI.getConfigFile();

	public GUI() {
		this.game = new Game();

		// this.drawGUI();
	}/*--endOf-GUI--*/

	/*
	 * Method load image by a given name with extension
	 * 
	 * @name : string of image to load for ex. "chessboard.jpg"
	 * 
	 * @returns : image or null if cannot load
	 */

	public static Image loadImage(String name) {
		if (configFile == null) {
			return null;
		}
		Image img = null;
		URL url = null;
		Toolkit tk = Toolkit.getDefaultToolkit();
		try {
			String imageLink = "theme/" + configFile.getProperty("THEME", "default") + "/images/" + name;
=====================================================================
Found a 16 line (85 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 14 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

			}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
				list.add(newMove);
			}
		}
	}

	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing) {
		int newX, newY;

		ArrayList<Square> list = new ArrayList<>();

		// 1
		newX = piece.getSquare().getPozX() - 2;
		newY = piece.getSquare().getPozY() + 1;

		LMove(piece, newX, newY, list, ignoreKing);
=====================================================================
Found a 15 line (85 tokens) duplication in the following files: 
Starting at line 14 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java

			if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
				list.add(newMove);
			}
		}
	}
	
	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing){
		int newX, newY;
		
		ArrayList<Square> list = new ArrayList<>();
        //1
        newX = piece.getSquare().getPozX() - 2;
        newY = piece.getSquare().getPozY() + 1;

       LMove(piece, newX, newY, list);
=====================================================================
Found a 20 line (84 tokens) duplication in the following files: 
Starting at line 227 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 231 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java

	}
	
	public int get_square_height() {
		return (getRadius()-getRadius()/3)/6;
	}

	public int getRadius() {
		return board_layout.image.getHeight(null)/2;
	}

	@Override
	public Point getTopLeftPoint() {
		if (renderLabels)
        {
            return new Point(topLeftPoint.x + upDownLabel.getHeight(null), topLeftPoint.y + upDownLabel.getHeight(null));
        }
		return topLeftPoint;
	}

}
=====================================================================
Found a 20 line (83 tokens) duplication in the following files: 
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			
			if (h == 0) {
				h = 24;
			}
		}
	}

	private static void backwardLeftMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 17 line (83 tokens) duplication in the following files: 
Starting at line 55 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			if (h == 0) {
				h = 24;
			}
		}
	}
	private static void forwardRightMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 6 line (83 tokens) duplication in the following files: 
Starting at line 12 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 45 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java

		int newY = piece.getSquare().getPozY() + 1;
		if (!piece.pieceBehaviour.isout(piece.getSquare().getPozX(), newY)) {
			Square moveSq = piece.getChessboard().getSquares()[piece.getSquare().getPozX()][newY];
			if (moveSq.piece == null && ignoreKing) {
				list.add(moveSq);
			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
=====================================================================
Found a 8 line (83 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 12 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java

		int newY = piece.getSquare().getPozY() - 1;

		if (!piece.pieceBehaviour.isout(piece.getSquare().getPozX(), newY)) {
			Square moveSq = piece.getChessboard().getSquares()[piece.getSquare().getPozX()][newY];

			if (moveSq.piece == null && ignoreKing) {
				list.add(moveSq);
			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
=====================================================================
Found a 83 line (82 tokens) duplication in the following files: 
Starting at line 6 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\board\IChessboard.java
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\board\IChessboard.java

public interface IChessboard {

	/**
	 * Method to get reference to square from given x and y integers after click
	 * 
	 * @param x
	 *            x position on the window
	 * @param y
	 *            y position on the window
	 * 
	 * @return reference to searched square
	 */
	public Square getSquare(int x, int y);
	
	/**
	 * Method selecting a Square in chessboard
	 * 
	 * @param sq
	 *            square to select (when clicked))
	 */
	public void select(Square sq);

	/**
	 * Method to set variables active_x_square and active_y_square to default values (-1).
	 */
	
	public void unselect();
	
	/**
	 * Method returning the Display Object of the Chessboard.
	 * 
	 * @return ChesboardDisplay Object of the Chessboard.
	 */
	public ChessboardDisplay getDisplay();
	
	/**
	 * Method setting the pieces of the Chessboard for the given set of players.
	 * 
	 * @param players
	 *            Array of Players of the game
	 */
	public void setPieces(Player[] players);

	/**
	 * Method returning the Squares Array
	 * 
	 * @return Squares Array of Squares of the Chessboard
	 */
	public Square[][] getSquares();
	
	/**
	 * Method move piece from square to square
	 * 
	 * @param begin
	 *            square from which move piece
	 * @param end
	 *            square where we want to move piece *
	 */
	public void move(Square begin, Square end);

	public boolean undo();

	public boolean redo();
	
	/**
	 * Method returning the selected square
	 * 
	 * @return selected square
	 */
	public Square getActiveSquare();
	
	/**
	 * Method returning the king of the given player
	 * 
	 * @param player given player to know the King
	 *            
	 * @return King of the same color of the given player
	 
	 */
	public King getKing(Player player);


}
=====================================================================
Found a 17 line (81 tokens) duplication in the following files: 
Starting at line 84 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 126 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			
			if (h == 23) {
				h = -1;
			}
		}
	}
=====================================================================
Found a 17 line (81 tokens) duplication in the following files: 
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 95 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			
			if (h == 23) {
				h = -1;
			}
		}
	}
=====================================================================
Found a 19 line (79 tokens) duplication in the following files: 
Starting at line 422 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 250 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 394 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 228 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

            print("running function: sendMessageToAll("+str+")");

            if(clientPlayer1 != null)
            {
                clientPlayer1.output.writeUTF("#message");
                clientPlayer1.output.writeUTF(str);
                clientPlayer1.output.flush();
            }
            
            if(clientPlayer2 != null)
            {
                clientPlayer2.output.writeUTF("#message");
                clientPlayer2.output.writeUTF(str);
                clientPlayer2.output.flush();
            }

            if(canObserversJoin())
            {
                for(Client observer: clientObservers)
=====================================================================
Found a 6 line (79 tokens) duplication in the following files: 
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

public class KnightMoves implements IMove{
	public static void LMove(Piece piece, int newX, int newY, ArrayList<Square> list) {

		if (!piece.pieceBehaviour.isout(newX, newY) && piece.pieceBehaviour.checkPiece(newX, newY)) {
			Square newMove = piece.getChessboard().getSquares()[newX][newY];
			if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
=====================================================================
Found a 16 line (76 tokens) duplication in the following files: 
Starting at line 405 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 156 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 379 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 152 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

                    for(Client observer: clientObservers)
                    {
                        observer.output.writeUTF("#move");
                        observer.output.writeInt(beginX);
                        observer.output.writeInt(beginY);
                        observer.output.writeInt(endX);
                        observer.output.writeInt(endY);
                        observer.output.flush();
                    }
                }
                
                this.movesList.add(new Move(beginX, beginY, endX, endY));
            }
        }

        public void sendMessageToAll(String str) throws IOException
=====================================================================
Found a 12 line (76 tokens) duplication in the following files: 
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 55 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 84 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 19 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 83 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
=====================================================================
Found a 13 line (76 tokens) duplication in the following files: 
Starting at line 79 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceDisplay.java
Starting at line 132 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceDisplay.java
Starting at line 77 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\PieceDisplay.java
Starting at line 130 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\PieceDisplay.java

					layout.setImage(resized.getScaledInstance(hi, hi, 0));
					g2d.drawImage(layout.image, x, y, null);
				} else {
					// System.out.println("image is null!");
					LogToFile.log(null, "Debug", "image is null!");
				}

			} catch (java.lang.NullPointerException exc) {
				System.out.println("Something wrong when painting piece: " + exc.getMessage());
				LogToFile.log(exc, "Error", "Something wrong when painting piece: " + exc.getMessage());
			}
		}
	}
=====================================================================
Found a 11 line (76 tokens) duplication in the following files: 
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 95 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 126 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 19 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 83 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

				} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;
			}
=====================================================================
Found a 5 line (75 tokens) duplication in the following files: 
Starting at line 57 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java
Starting at line 63 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 39 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

		if (!piece.pieceBehaviour.isout(newX, newY)) {
			Square moveSq = piece.getChessboard().getSquares()[newX][newY];
			if (moveSq.piece != null) {// check if can hit left
				if (piece.getPlayer() != moveSq.piece.getPlayer() && !moveSq.piece.getName().equals("King")) {
					if (ignoreKing) {
=====================================================================
Found a 10 line (75 tokens) duplication in the following files: 
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

	private static void backwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = y - 1; i >= 0; i--) {// down

			if (piece.pieceBehaviour.checkPiece(x, i)) {// if on this square
														// isn't piece

				Square newMove = piece.getChessboard().getSquares()[x][i];

				if(ignoreKing){
=====================================================================
Found a 18 line (73 tokens) duplication in the following files: 
Starting at line 224 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 175 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Server.java
Starting at line 196 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 153 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Server.java

                        table.addObserver(new Client(s, input, output, nick, table));

                        if(table.clientPlayer2 != null) //all players is playing
                        {
                            table.sendSettingsAndMovesToNewObserver();
                        }

                        table.sendMessageToAll("** Obserwator "+nick+" dołączył do gry **");
                    }
                }
            }
            catch (IOException ex)
            {
                Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
                continue;
            }
        }
    }
=====================================================================
Found a 16 line (72 tokens) duplication in the following files: 
Starting at line 19 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	private static void backwardLeftMoves(Piece piece, ArrayList<Square> list) {
=====================================================================
Found a 14 line (72 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 19 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}
	private static void forwardRightMoves(Piece piece, ArrayList<Square> list) {
=====================================================================
Found a 14 line (71 tokens) duplication in the following files: 
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 55 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 95 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 126 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			
			if (h == 0) {
=====================================================================
Found a 13 line (71 tokens) duplication in the following files: 
Starting at line 84 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
			
			if (h == 23) {
=====================================================================
Found a 22 line (71 tokens) duplication in the following files: 
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java

            if (piece.pieceBehaviour.checkPiece(i, y))
            {//if on this square isn't piece


				Square newMove = piece.getChessboard().getSquares()[i][y];
                
                if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove))
                {
                    list.add(newMove);
                }

                if (piece.pieceBehaviour.otherOwner(i, y))
                {
                    break;
                }
            }
            else
            {
                break;//we've to break because we cannot go beside other piece!!
            }
        }
	}
=====================================================================
Found a 18 line (71 tokens) duplication in the following files: 
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 83 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

			if (piece.pieceBehaviour.checkPiece(i, y)) {// if on this square
														// isn't piece

				Square newMove = piece.getChessboard().getSquares()[i][y];

				if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(i, y)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}
=====================================================================
Found a 19 line (70 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\board\ChessboardLayout.java
Starting at line 12 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\board\ChessboardLayout.java

public class ChessboardLayout {
	public Image orgImage;
	public Image image;
	public Image orgSelSquare;
	public Image selSquare;
	public Image orgAbleSquare;
	public Image ableSquare;
	

	public ChessboardLayout(String imagePath, String selSquarePath, String ableSquarePath) {
		orgImage = GUI.loadImage(imagePath);
		orgSelSquare = GUI.loadImage(selSquarePath);
		orgAbleSquare = GUI.loadImage(ableSquarePath);
	
		image=orgImage;
		selSquare= orgSelSquare;
		ableSquare = orgAbleSquare;
	}
}
=====================================================================
Found a 20 line (70 tokens) duplication in the following files: 
Starting at line 55 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Knight.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Knight.java

                if (myKing.willBeSafeWhenMoveOtherPiece(this.getSquare(), newMove))
                {
                    list.add(newMove);
                }   
        }
    }
    /**
     *  Annotation to superclass Piece changing pawns location
     * @return  ArrayList with new position of pawn
     */
    public ArrayList<Square> allMoves(boolean ignoreKing)
    {
    	ArrayList<Square> list = new ArrayList<Square>();
    	for (IMove iMove : moveBehaviour) {
			list.addAll(iMove.getMoves(this, ignoreKing));
		}
		return list;
        //return KnightMoves.getMoves(this);
    }
}
=====================================================================
Found a 15 line (69 tokens) duplication in the following files: 
Starting at line 525 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 59 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\SClient.java
Starting at line 488 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\SClient.java

            while(true)
            {
                try
                {
                    String in = input.readUTF();

                    if(in.equals("#move"))//new move
                    {
                        int bX = input.readInt();
                        int bY = input.readInt();
                        int eX = input.readInt();
                        int eY = input.readInt();

                        table.sendMoveToOther(this, bX, bY, eX, eY);
                    }
=====================================================================
Found a 14 line (69 tokens) duplication in the following files: 
Starting at line 19 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 83 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}
=====================================================================
Found a 13 line (69 tokens) duplication in the following files: 
Starting at line 83 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 19 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}
=====================================================================
Found a 15 line (67 tokens) duplication in the following files: 
Starting at line 291 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 51 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 265 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

                clientObservers = new ArrayList<Client>();
            }
            
            movesList = new ArrayList<Move>();
        }

        public void generateSettings() //generate settings for both players and observers
        {
            player1Set = new Settings();
            player2Set = new Settings();

            player1Set.gameMode = Settings.gameModes.newGame;
            player1Set.playerWhite.setName(clientPlayer1.nick);
            player1Set.playerBlack.setName(clientPlayer2.nick);
            player1Set.playerWhite.setType(playerTypes.localUser);
=====================================================================
Found a 12 line (67 tokens) duplication in the following files: 
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 55 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 84 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 19 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 83 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
=====================================================================
Found a 12 line (67 tokens) duplication in the following files: 
Starting at line 19 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 83 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 95 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 126 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
						piece.getChessboard().getSquares()[h][i])) {
					list.add(piece.getChessboard().getSquares()[h][i]);
				}

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
=====================================================================
Found a 12 line (66 tokens) duplication in the following files: 
Starting at line 314 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 75 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 289 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 73 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

            player2Set.playerBlack.setType(playerTypes.localUser);
            player2Set.gameType = Settings.gameTypes.network;
            player2Set.upsideDown = false;

            if(canObserversJoin())
            {
                observerSettings = new Settings();

                observerSettings.gameMode = Settings.gameModes.newGame;
                observerSettings.playerWhite.setName(clientPlayer1.nick);
                observerSettings.playerBlack.setName(clientPlayer2.nick);
                observerSettings.playerWhite.setType(playerTypes.networkUser);
=====================================================================
Found a 18 line (63 tokens) duplication in the following files: 
Starting at line 274 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 250 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

        public ArrayList<Client> clientObservers;
        public Settings player1Set;
        public Settings player2Set;
        public Settings observerSettings;
        public String password;
        private boolean canObserversJoin;
        private boolean enableChat;
        private ArrayList<Move> movesList;

        Table(String password, boolean canObserversJoin, boolean enableChat) 
        {
            this.password = password;
            this.enableChat = enableChat;
            this.canObserversJoin = canObserversJoin;

            if(canObserversJoin)
            {
                clientObservers = new ArrayList<Client>();
=====================================================================
Found a 9 line (63 tokens) duplication in the following files: 
Starting at line 31 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KingMoves.java
Starting at line 79 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KingMoves.java
Starting at line 31 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KingMoves.java
Starting at line 79 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KingMoves.java

			}
		}

	}
	
	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing){
		ArrayList<Square> list = new ArrayList<>();
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		regularMove(piece, list, x, y);
=====================================================================
Found a 16 line (63 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}

		}
	}

	private static void backwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 15 line (63 tokens) duplication in the following files: 
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	private static void rightHorizontalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 16 line (63 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

				} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}

		}
	}

	private static void backwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 15 line (63 tokens) duplication in the following files: 
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

				} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	private static void rightHorizontalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 14 line (62 tokens) duplication in the following files: 
Starting at line 510 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\SClient.java
Starting at line 474 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\SClient.java

        Client(Socket s, ObjectInputStream input, ObjectOutputStream output, String nick, Table table)
        {
            this.s = s;
            this.input = input;
            this.output = output;
            this.nick = nick;
            this.table = table;

            Thread thread = new Thread(this);
            thread.start();
        }

        public void run() //listening
        {
=====================================================================
Found a 6 line (62 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 102 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 82 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

	private static void forwardRightMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 23) {
			x = -1;
		}
		for (int h = x + 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); ++h, ++i) // right-up
=====================================================================
Found a 6 line (61 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

	private static void backwardRightMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 0) {
			x = 24;
		}
		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
=====================================================================
Found a 21 line (60 tokens) duplication in the following files: 
Starting at line 480 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 314 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 445 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 280 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

        public void addObserver(Client client) //join observer to game
        {
            clientObservers.add(client);
        }

        private class Move
        {
            int bX;
            int bY;
            int eX;
            int eY;

            Move(int bX, int bY, int eX, int eY) //beginX, beginY, endX, endY
            {
                this.bX = bX;
                this.bY = bY;
                this.eX = eX;
                this.eY = eY;
            }
        }
    }
=====================================================================
Found a 13 line (59 tokens) duplication in the following files: 
Starting at line 334 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 96 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 311 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 95 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

            print("running function: sendSettingsToAll()");

            clientPlayer1.output.writeUTF("#settings");
            clientPlayer1.output.writeObject(player1Set);
            clientPlayer1.output.flush();

            clientPlayer2.output.writeUTF("#settings");
            clientPlayer2.output.writeObject(player2Set);
            clientPlayer2.output.flush();

            if(canObserversJoin())
            {
                for(Client observer: clientObservers)
=====================================================================
Found a 5 line (58 tokens) duplication in the following files: 
Starting at line 141 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 126 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceDisplay.java
Starting at line 145 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 124 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\PieceDisplay.java

		BufferedImage resized = new BufferedImage(height, height, BufferedImage.TYPE_INT_ARGB_PRE);
		Graphics2D imageGr = (Graphics2D) resized.createGraphics();
		imageGr.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		imageGr.drawImage(tempImage, 0, 0, height, height, null);
		imageGr.dispose();
=====================================================================
Found a 17 line (58 tokens) duplication in the following files: 
Starting at line 153 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 92 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoard.java
Starting at line 153 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java

		System.out.println("active_x: " + this.display.active_x_square + " active_y: " + this.display.active_y_square);// 4tests
		display.repaint();

	}/*--endOf-select--*/

	/**
	 * Method set variables active_x_square & active_y_square to 0 values.
	 */
	public void unselect() {
		this.display.active_x_square = -1;
		this.display.active_y_square = -1;
		this.display.activeSquare = null;
		// this.draw();//redraw
		display.repaint();
	}/*--endOf-unselect--*/

	public int get_widht() {
=====================================================================
Found a 3 line (57 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 23 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 47 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 21 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

		if (!piece.pieceBehaviour.isout(piece.getSquare().getPozX(), newY)) {
			Square moveSq = piece.getChessboard().getSquares()[piece.getSquare().getPozX()][newY];
			if (moveSq.piece == null && ignoreKing) {
=====================================================================
Found a 11 line (57 tokens) duplication in the following files: 
Starting at line 14 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 30 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 44 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java

			Square moveSq = piece.getChessboard().getSquares()[piece.getSquare().getPozX()][newY];
			if (moveSq.piece == null && ignoreKing) {
				list.add(moveSq);
			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
				list.add(moveSq);

			}
		}
	}

	public void passCenter(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 11 line (57 tokens) duplication in the following files: 
Starting at line 98 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 90 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 98 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 81 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

		for (int i = x - 1; i >= 0; --i) {// left

			if (piece.pieceBehaviour.checkPiece(i, piece.getSquare().getPozY())) {// if
																					// on
																					// this
																					// square
																					// isn't
																					// piece
				Square newMove = piece.getChessboard().getSquares()[i][y];

				if(ignoreKing){
=====================================================================
Found a 13 line (57 tokens) duplication in the following files: 
Starting at line 14 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 32 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java

			Square moveSq = piece.getChessboard().getSquares()[piece.getSquare().getPozX()][newY];
			if (moveSq.piece == null && ignoreKing) {
				list.add(moveSq);

			} else if (moveSq.piece == null && piece.myKing().willBeSafeAfterMove(piece.getSquare(), moveSq)) {

				list.add(moveSq);

			}
		}
	}

	public void passCenter(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 8 line (56 tokens) duplication in the following files: 
Starting at line 140 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoard.java
Starting at line 545 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 174 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoard.java
Starting at line 548 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java

	}

	public King getKing(Player player) {
		if (player.getColor().equals(Player.colors.white)) {
			return initial.kingWhite;
		} else if (player.getColor().equals(Player.colors.black)) {
			return initial.kingBlack;
		} else if (player.getColor().equals(Player.colors.blue)) {
=====================================================================
Found a 4 line (56 tokens) duplication in the following files: 
Starting at line 98 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 113 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 106 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 121 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java

	private void captureMovesBeforeCenter(Pawn piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 0) {
			captureMove(piece, list, x + 1, y + 1, ignoreKing);
=====================================================================
Found a 22 line (56 tokens) duplication in the following files: 
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Bishop.java
Starting at line 55 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Queen.java
Starting at line 47 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Bishop.java
Starting at line 45 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Queen.java

		this.moveBehaviour = moveBehaviour;

	}

	/**
	 * Annotation to superclass Piece changing pawns location
	 * 
	 * @return ArrayList with new position of piece
	 */

	public ArrayList<Square> allMoves(boolean ignoreKing) {
		ArrayList<Square> list = new ArrayList<Square>();
    	for (IMove iMove : moveBehaviour) {
			list.addAll(iMove.getMoves(this, ignoreKing));
		}
		return list;
		
		//return BishopMoves.getMoves(this);
	}
	
	
}
=====================================================================
Found a 12 line (55 tokens) duplication in the following files: 
Starting at line 59 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Chat.java
Starting at line 308 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawNetworkSettings.java
Starting at line 58 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Chat.java
Starting at line 307 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawNetworkSettings.java

        this.buttonSend.addActionListener(this);

        //add components
        this.gbl = new GridBagLayout();
        this.gbc = new GridBagConstraints();
        this.gbc.fill = GridBagConstraints.BOTH;
        this.setLayout(gbl);

        this.gbc.gridx = 0;
        this.gbc.gridy = 0;
        this.gbc.gridwidth = 2;
        this.gbc.gridheight = 1;
=====================================================================
Found a 9 line (55 tokens) duplication in the following files: 
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 87 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
=====================================================================
Found a 8 line (55 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 119 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

		for (int h = x - 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
=====================================================================
Found a 9 line (55 tokens) duplication in the following files: 
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 29 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

		for (int h = x + 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); ++h, ++i) // right-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
=====================================================================
Found a 8 line (55 tokens) duplication in the following files: 
Starting at line 107 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 57 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

		for (int h = x + 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); ++h, --i) // right-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
=====================================================================
Found a 8 line (55 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

		for (int i = y + 1; i <= 5; i++) {// up

			if (piece.pieceBehaviour.checkPiece(x, i)) {
				Square newMove = piece.getChessboard().getSquares()[x][i];

				if(ignoreKing){
					list.add(newMove);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
=====================================================================
Found a 10 line (55 tokens) duplication in the following files: 
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

		for (int i = y - 1; i >= 0; i--) {// down

			if (piece.pieceBehaviour.checkPiece(x, i)) {// if on this square
														// isn't piece

				Square newMove = piece.getChessboard().getSquares()[x][i];

				if(ignoreKing){
					list.add(newMove);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
=====================================================================
Found a 19 line (55 tokens) duplication in the following files: 
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Bishop.java
Starting at line 79 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Pawn.java
Starting at line 55 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Queen.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Rook.java
Starting at line 47 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Bishop.java
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Pawn.java
Starting at line 45 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Queen.java
Starting at line 45 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Rook.java

		this.moveBehaviour = moveBehaviour;

	}

	/**
	 * Annotation to superclass Piece changing pawns location
	 * 
	 * @return ArrayList with new position of piece
	 */

	public ArrayList<Square> allMoves(boolean ignoreKing) {
		ArrayList<Square> list = new ArrayList<Square>();
    	for (IMove iMove : moveBehaviour) {
			list.addAll(iMove.getMoves(this, ignoreKing));
		}
		return list;
		
		//return BishopMoves.getMoves(this);
	}
=====================================================================
Found a 8 line (54 tokens) duplication in the following files: 
Starting at line 110 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 57 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\NewGameWindow.java
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java
Starting at line 57 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\NewGameWindow.java

        appHomepageLabel3.setName("appHomepageLabel3"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(imageLabel)
=====================================================================
Found a 16 line (54 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}

		}
	}

	private static void backwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 15 line (54 tokens) duplication in the following files: 
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	private static void rightHorizontalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 16 line (54 tokens) duplication in the following files: 
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}

		}
	}
	
	private static void backwardVerticalMoves(Piece piece, ArrayList<Square> list){
=====================================================================
Found a 18 line (54 tokens) duplication in the following files: 
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

                if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove))
                {
                    list.add(newMove);
                }

                if (piece.pieceBehaviour.otherOwner(x, i))
                {
                    break;
                }
            }
            else
            {
                break;//we've to break because we cannot go beside other piece!!
            }
        }
	}
	
	private static void rightHorizontalMoves(Piece piece, ArrayList<Square> list){
=====================================================================
Found a 8 line (53 tokens) duplication in the following files: 
Starting at line 306 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 67 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 281 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

            player1Set.playerBlack.setType(playerTypes.networkUser);
            player1Set.gameType = Settings.gameTypes.network;
            player1Set.upsideDown = true;

            player2Set.gameMode = Settings.gameModes.newGame;
            player2Set.playerWhite.setName(clientPlayer1.nick);
            player2Set.playerBlack.setName(clientPlayer2.nick);
            player2Set.playerWhite.setType(playerTypes.networkUser);
=====================================================================
Found a 6 line (53 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 102 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 82 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

	private static void forwardRightMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 23) {
			x = -1;
		}
		for (int h = x + 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); ++h, ++i) // right-up
=====================================================================
Found a 16 line (53 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}

		}
	}

	private static void backwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 15 line (53 tokens) duplication in the following files: 
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	private static void rightHorizontalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 16 line (53 tokens) duplication in the following files: 
Starting at line 667 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 663 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

	public boolean willBeSafeWhenMoveOtherPiece(Square sqIsHere, Square sqWillBeThere) // long
																						// name
																						// ;)
	{
		Piece tmp = sqWillBeThere.piece;
		sqWillBeThere.piece = sqIsHere.piece; // move without redraw
		sqIsHere.piece = null;

		boolean ret = isSafe(this.getSquare());

		sqIsHere.piece = sqWillBeThere.piece;
		sqWillBeThere.piece = tmp;

		return ret;
	}
}
=====================================================================
Found a 16 line (53 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

				} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}

		}
	}

	private static void backwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 15 line (53 tokens) duplication in the following files: 
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

				} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	private static void rightHorizontalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 11 line (52 tokens) duplication in the following files: 
Starting at line 59 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Chat.java
Starting at line 103 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawNetworkSettings.java
Starting at line 58 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Chat.java
Starting at line 104 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawNetworkSettings.java

        this.buttonSend.addActionListener(this);

        //add components
        this.gbl = new GridBagLayout();
        this.gbc = new GridBagConstraints();
        this.gbc.fill = GridBagConstraints.BOTH;
        this.setLayout(gbl);

        this.gbc.gridx = 0;
        this.gbc.gridy = 0;
        this.gbc.gridwidth = 2;
=====================================================================
Found a 11 line (52 tokens) duplication in the following files: 
Starting at line 103 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawNetworkSettings.java
Starting at line 359 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawNetworkSettings.java
Starting at line 104 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawNetworkSettings.java
Starting at line 358 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawNetworkSettings.java

        this.buttonStart.addActionListener(this);

        //add components
        this.gbl = new GridBagLayout();
        this.gbc = new GridBagConstraints();
        this.gbc.fill = GridBagConstraints.BOTH;
        this.setLayout(gbl);

        this.gbc.gridx = 0;
        this.gbc.gridy = 0;
        this.gbl.setConstraints(radioServer, gbc);
=====================================================================
Found a 6 line (52 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

	private static void backwardRightMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 0) {
			x = 24;
		}
		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
=====================================================================
Found a 9 line (52 tokens) duplication in the following files: 
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 57 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 119 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
=====================================================================
Found a 8 line (52 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 107 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 29 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 87 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java

		for (int h = x - 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if(ignoreKing){
					list.add(piece.getChessboard().getSquares()[h][i]);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
=====================================================================
Found a 10 line (52 tokens) duplication in the following files: 
Starting at line 74 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 110 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					if (!list.contains(newMove))
						list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(i, y) || i == x) {
					break;
				}

				if (i == 23) {
=====================================================================
Found a 10 line (52 tokens) duplication in the following files: 
Starting at line 110 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 74 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					if (!list.contains(newMove))
						list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(i, y) || i == x) {
					break;
				}

				if (i == 0) {
=====================================================================
Found a 20 line (51 tokens) duplication in the following files: 
Starting at line 58 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Bishop.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Knight.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Queen.java
Starting at line 49 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Bishop.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Knight.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Queen.java

	}

	/**
	 * Annotation to superclass Piece changing pawns location
	 * 
	 * @return ArrayList with new position of piece
	 */

	public ArrayList<Square> allMoves(boolean ignoreKing) {
		ArrayList<Square> list = new ArrayList<Square>();
    	for (IMove iMove : moveBehaviour) {
			list.addAll(iMove.getMoves(this, ignoreKing));
		}
		return list;
		
		//return BishopMoves.getMoves(this);
	}
	
	
}
=====================================================================
Found a 12 line (51 tokens) duplication in the following files: 
Starting at line 45 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceDisplay.java
Starting at line 105 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceDisplay.java
Starting at line 103 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\PieceDisplay.java

		}

		public final void draw(Graphics g) {
			try {
				Graphics2D g2d = (Graphics2D) g;
				g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

				square = piece.getSquare();

				Point topLeft = board.getDisplay().getTopLeftPoint();

				int r = board.getRadius();
=====================================================================
Found a 8 line (50 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 26 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java

			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
				list.add(moveSq);

			}
		}
	}

	public void captureMove(Piece piece, ArrayList<Square> list, int newX, int newY, boolean ignoreKing) {
=====================================================================
Found a 14 line (50 tokens) duplication in the following files: 
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Knight.java
Starting at line 80 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Pawn.java
Starting at line 61 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Rook.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Knight.java
Starting at line 49 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Pawn.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Rook.java

    }
    /**
     *  Annotation to superclass Piece changing pawns location
     * @return  ArrayList with new position of pawn
     */
    public ArrayList<Square> allMoves(boolean ignoreKing)
    {
    	ArrayList<Square> list = new ArrayList<Square>();
    	for (IMove iMove : moveBehaviour) {
			list.addAll(iMove.getMoves(this, ignoreKing));
		}
		return list;
        //return KnightMoves.getMoves(this);
    }
=====================================================================
Found a 9 line (50 tokens) duplication in the following files: 
Starting at line 53 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

			} else if (moveSq.piece == null && piece.myKing().willBeSafeAfterMove(piece.getSquare(), moveSq)) {

				list.add(moveSq);

			}
		}
	}

	public void captureMove(Piece piece, ArrayList<Square> list, int newX, int newY, boolean ignoreKing) {
=====================================================================
Found a 12 line (48 tokens) duplication in the following files: 
Starting at line 122 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardInitialization.java
Starting at line 173 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardInitialization.java
Starting at line 171 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardInitialization.java

			squares[i + k][j].setPiece(new Pawn(board, player, pawnMoves));
		}
	}

	public Square[][] getSquares() {
		return squares;
	}

	public void setSquares(Square[][] squares) {
		this.squares = squares;
	}
}
=====================================================================
Found a 11 line (48 tokens) duplication in the following files: 
Starting at line 59 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Chat.java
Starting at line 359 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawNetworkSettings.java
Starting at line 58 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Chat.java
Starting at line 358 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawNetworkSettings.java

        this.buttonSend.addActionListener(this);

        //add components
        this.gbl = new GridBagLayout();
        this.gbc = new GridBagConstraints();
        this.gbc.fill = GridBagConstraints.BOTH;
        this.setLayout(gbl);

        this.gbc.gridx = 0;
        this.gbc.gridy = 0;
        this.gbc.gridwidth = 2;
=====================================================================
Found a 11 line (48 tokens) duplication in the following files: 
Starting at line 103 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawNetworkSettings.java
Starting at line 308 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawNetworkSettings.java
Starting at line 104 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawNetworkSettings.java
Starting at line 307 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawNetworkSettings.java

        this.buttonStart.addActionListener(this);

        //add components
        this.gbl = new GridBagLayout();
        this.gbc = new GridBagConstraints();
        this.gbc.fill = GridBagConstraints.BOTH;
        this.setLayout(gbl);

        this.gbc.gridx = 0;
        this.gbc.gridy = 0;
        this.gbl.setConstraints(radioServer, gbc);
=====================================================================
Found a 7 line (48 tokens) duplication in the following files: 
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 29 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if(ignoreKing){
=====================================================================
Found a 6 line (48 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 36 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 57 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

		for (int h = x - 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if(ignoreKing){
=====================================================================
Found a 7 line (48 tokens) duplication in the following files: 
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 87 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

		for (int h = x + 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); ++h, ++i) // right-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if(ignoreKing){
=====================================================================
Found a 6 line (48 tokens) duplication in the following files: 
Starting at line 107 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 78 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 119 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 78 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

		for (int h = x + 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); ++h, --i) // right-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if(ignoreKing){
=====================================================================
Found a 4 line (48 tokens) duplication in the following files: 
Starting at line 91 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KingMoves.java
Starting at line 95 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KingMoves.java
Starting at line 91 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KingMoves.java
Starting at line 95 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KingMoves.java

			if (king.getChessboard().getSquares()[0][y].piece != null
					&& king.getChessboard().getSquares()[0][y].piece.getName().equals("Rook")) {
				castlingLeftMove(king, list, x, y);
			}
=====================================================================
Found a 14 line (48 tokens) duplication in the following files: 
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Bishop.java
Starting at line 59 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 79 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Pawn.java
Starting at line 55 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Queen.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Rook.java
Starting at line 47 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Bishop.java
Starting at line 50 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Pawn.java
Starting at line 45 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Queen.java
Starting at line 45 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Rook.java

		this.moveBehaviour = moveBehaviour;

	}

	/**
	 * Annotation to superclass Piece changing pawns location
	 * 
	 * @return ArrayList with new position of piece
	 */

	public ArrayList<Square> allMoves(boolean ignoreKing) {
		ArrayList<Square> list = new ArrayList<Square>();
    	for (IMove iMove : moveBehaviour) {
			list.addAll(iMove.getMoves(this, ignoreKing));
=====================================================================
Found a 7 line (48 tokens) duplication in the following files: 
Starting at line 188 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 208 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 177 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java
Starting at line 192 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

    public void sendToAll( SClient sender, String msg ) throws IOException
    {
        if( sender == clientPlayer1 || sender == clientPlayer2 )
        {
            SClient receiver = (clientPlayer1 == sender) ? clientPlayer2 : clientPlayer1;
            receiver.output.writeUTF( msg );
            receiver.output.flush();
=====================================================================
Found a 12 line (47 tokens) duplication in the following files: 
Starting at line 440 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 268 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 409 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 243 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

                for(Client observer: clientObservers)
                {
                    observer.output.writeUTF("#message");
                    observer.output.writeUTF(str);
                    observer.output.flush();
                }
             }
        }

        public boolean isAllPlayers() //is it all playing players?
        {
            if(clientPlayer1==null || clientPlayer2==null)
=====================================================================
Found a 3 line (47 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

	private static void backwardRightMoves(Piece piece, ArrayList<Square> list) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
=====================================================================
Found a 3 line (47 tokens) duplication in the following files: 
Starting at line 54 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 54 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

	private static void forwardRightMoves(Piece piece, ArrayList<Square> list) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int h = x + 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); ++h, ++i) // right-up
=====================================================================
Found a 12 line (47 tokens) duplication in the following files: 
Starting at line 248 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 276 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 232 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 260 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

						|| this.getChessboard().getSquares()[i][s.getPozY()].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		// Bishop & Queen
		for (int h = s.getPozX() - 1, i = s.getPozY() + 1; !pieceBehaviour.isout(h, i); --h, ++i) // left-up
=====================================================================
Found a 3 line (46 tokens) duplication in the following files: 
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 12 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 12 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

		if (!piece.pieceBehaviour.isout(newX, newY) && piece.pieceBehaviour.checkPiece(newX, newY)) {
			Square newMove = piece.getChessboard().getSquares()[newX][newY];
			if (ignoreKing){
=====================================================================
Found a 12 line (45 tokens) duplication in the following files: 
Starting at line 432 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 464 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 432 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 464 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java

					JOptionPane.showMessageDialog(null, "Nie da sie cofnac!");
				}
			} catch (java.lang.ArrayIndexOutOfBoundsException exc) {
				JOptionPane.showMessageDialog(null, "Brak aktywnej karty!");
			} catch (UnsupportedOperationException exc) {
				JOptionPane.showMessageDialog(null, exc.getMessage());
			}
		}

	}// GEN-LAST:event_moveBackItemActionPerformed

	private void moveBackItemMouseClicked(java.awt.event.MouseEvent evt)// GEN-FIRST:event_moveBackItemMouseClicked
=====================================================================
Found a 9 line (45 tokens) duplication in the following files: 
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KingMoves.java
Starting at line 66 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KingMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KingMoves.java
Starting at line 66 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KingMoves.java

				for (int i = x - 1; i > 0; i--) {// go
																			// left
					if (piece.getChessboard().getSquares()[i][y].piece != null) {
						canCastling = false;
						break;
					}
				}
				
				Square sq = piece.getChessboard().getSquares()[x - 2][y];
=====================================================================
Found a 11 line (45 tokens) duplication in the following files: 
Starting at line 44 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java
Starting at line 63 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java

			if (piece.getPlayer() != moveSq.piece.getPlayer() && !moveSq.piece.getName().equals("King")) {
					if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
						list.add(moveSq);
					}
				}
			}
		}
		
	}
	
	public void enPassantMove(Piece piece, ArrayList<Square> list, int newX, int i){
=====================================================================
Found a 11 line (45 tokens) duplication in the following files: 
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java
Starting at line 61 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

				if (piece.getPlayer() != moveSq.piece.getPlayer() && !moveSq.piece.getName().equals("King")) {
					if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), moveSq)) {
						list.add(moveSq);
					}
				}
			}
		}

	}

	public void enPassantMove(Piece piece, ArrayList<Square> list, int newX, int i) {
=====================================================================
Found a 8 line (44 tokens) duplication in the following files: 
Starting at line 63 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\LogToFile.java
Starting at line 68 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\LogToFile.java

			case "Error":
				logger1.log(Level.SEVERE, msg, ex);
				break;
			case "Debug":
				logger1.log(Level.FINE, msg, ex);
				break;
			case "INFO":
				logger1.log(Level.INFO, msg, ex);
=====================================================================
Found a 6 line (44 tokens) duplication in the following files: 
Starting at line 87 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardInitialization.java
Starting at line 125 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardInitialization.java
Starting at line 88 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardInitialization.java
Starting at line 123 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardInitialization.java

		squares[i + 5][j].setPiece(new Bishop(board, player, bishopMoves));
		
		//THE QUEEN MOTHER OF DRAGONS
		ArrayList <IMove> queenMoves = new ArrayList<>();
		queenMoves.add(new RookMoves());
		queenMoves.add(new BishopMoves());
=====================================================================
Found a 3 line (44 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

	private static void forwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = y + 1; i <= 5; i++) {// up
=====================================================================
Found a 16 line (44 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}

		}
	}

	private static void backwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 15 line (44 tokens) duplication in the following files: 
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	private static void rightHorizontalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 5 line (44 tokens) duplication in the following files: 
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KingMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KingMoves.java
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KingMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KingMoves.java

	public void castlingLeftMove(Piece piece1, ArrayList<Square> list, int x, int y){
			King piece = (King) piece1;
			boolean canCastling = true;

			Rook rook = (Rook) piece.getChessboard().getSquares()[0][y].piece;
=====================================================================
Found a 16 line (44 tokens) duplication in the following files: 
Starting at line 7 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceLayout.java
Starting at line 7 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\PieceLayout.java

public class PieceLayout {
	public Image orgImage;
	public Image image;

	public PieceLayout(String imagePath) {
		orgImage= GUI.loadImage(imagePath);
		image = orgImage;
	}

	public void setImage(Image scaledInstance) {
		// TODO Auto-generated method stub
		this.image = scaledInstance;
	}
	
	
}
=====================================================================
Found a 3 line (43 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 98 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 113 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 106 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 121 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

	private static void backwardRightMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 0) {
=====================================================================
Found a 11 line (43 tokens) duplication in the following files: 
Starting at line 61 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Knight.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Knight.java

	}

	/**
	 * Annotation to superclass Piece changing pawns location
	 * 
	 * @return ArrayList with new position of piece
	 */
	public ArrayList<Square> allMoves(boolean ignoreKing) {
		ArrayList<Square> list = new ArrayList<Square>();
		for (IMove iMove : moveBehaviour) {
			list.addAll(iMove.getMoves(this, false));
=====================================================================
Found a 7 line (42 tokens) duplication in the following files: 
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoard.java
Starting at line 89 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 36 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoard.java
Starting at line 90 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java

		display = new CircleBoardDisplay(null, null, new Point(0, 0), settings.renderLabels, settings.upsideDown, this);
		this.moves_history = moves_history;
	}

	public Square getSquare(int x, int y) {

		if (x > 2 * getRadius() || y > 2 * getRadius()) // test if click is out
=====================================================================
Found a 9 line (42 tokens) duplication in the following files: 
Starting at line 73 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoard.java
Starting at line 136 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 83 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoard.java
Starting at line 136 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java

			System.out.println("!!Array out of bounds when getting Square with Chessboard.getSquare(int,int) : " + exc);
			return null;
		}
	}

	public void select(Square sq) {
		this.display.activeSquare = sq;
		this.display.active_x_square = sq.getPozX();
		this.display.active_y_square = sq.getPozY();
=====================================================================
Found a 4 line (42 tokens) duplication in the following files: 
Starting at line 66 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 106 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 72 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 110 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

			g2d.drawImage(this.LeftRightLabel, board_layout.image.getHeight(null) + topLeftPoint.x, 0, null);
		}
		g2d.drawImage(board_layout.image, topLeftPoint.x, topLeftPoint.y, null);
		drawPieces(g);
=====================================================================
Found a 3 line (42 tokens) duplication in the following files: 
Starting at line 202 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 240 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 206 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 230 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

		j = 1;
		for (int i = 8; i > 0; i--, j++) {
			uDL2D.drawString(new Integer(i).toString(), 3 + (labelHeight / 3), (square_height2 * (j - 1)) + addX);
=====================================================================
Found a 3 line (42 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 102 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 82 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

	private static void backwardRightMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 0) {
=====================================================================
Found a 8 line (42 tokens) duplication in the following files: 
Starting at line 67 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 100 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

			if (piece.pieceBehaviour.checkPiece(i, y)) {// if on this square
														// isn't piece

				Square newMove = piece.getChessboard().getSquares()[i][y];

				if(ignoreKing){
					list.add(newMove);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
=====================================================================
Found a 11 line (42 tokens) duplication in the following files: 
Starting at line 100 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 67 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

			if (piece.pieceBehaviour.checkPiece(i, piece.getSquare().getPozY())) {// if
																					// on
																					// this
																					// square
																					// isn't
																					// piece
				Square newMove = piece.getChessboard().getSquares()[i][y];

				if(ignoreKing){
					list.add(newMove);
				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
=====================================================================
Found a 6 line (42 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

		for (int i = y + 1; i <= 7; i++) {// up

			if (piece.pieceBehaviour.checkPiece(x, i)) {
				Square newMove = piece.getChessboard().getSquares()[x][i];

				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
=====================================================================
Found a 9 line (42 tokens) duplication in the following files: 
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

		for (int i = y - 1; i >= 0; i--)
        {//down

            if (piece.pieceBehaviour.checkPiece(x, i))
            {//if on this square isn't piece

            	Square newMove= piece.getChessboard().getSquares()[x][i];
                
                if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove))
=====================================================================
Found a 14 line (41 tokens) duplication in the following files: 
Starting at line 251 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 200 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Server.java
Starting at line 221 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 175 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Server.java

    }

    /*
     * Method with is creating a new table
     * @param idTable int witch number of the table
     * @param password String with password
     * @param withObserver bool true if observers available, else false
     * @param enableChat bool true if chat enable, else false
     */
    public void newTable(int idTable, String password, boolean withObserver, boolean enableChat) //create new table
    {
        print("create new table - id: "+idTable);
        tables.put(idTable, new Table(password, withObserver, enableChat));
    }
=====================================================================
Found a 8 line (41 tokens) duplication in the following files: 
Starting at line 26 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 32 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 30 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 32 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

	public static final int img_x = 5;//image x position (used in JChessView class!)
    public static final int img_y = img_x;//image y position (used in JChessView class!)
    public static final int img_widht = 480;//image width
    public static final int img_height = img_widht;//image height
    
	private ChessboardLayout board_layout;
	boolean renderLabels, upsideDown;
	Square[][] squares;
=====================================================================
Found a 6 line (41 tokens) duplication in the following files: 
Starting at line 17 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java

			Square newMove = piece.getChessboard().getSquares()[newX][newY];
			if (ignoreKing){
				list.add(newMove);
			}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
				list.add(newMove);
			}
=====================================================================
Found a 3 line (41 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 54 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 54 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

	private static void backwardRightMoves(Piece piece, ArrayList<Square> list) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
=====================================================================
Found a 3 line (41 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

	private static void forwardVerticalMoves(Piece piece, ArrayList<Square> list) {
		int x= piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = y + 1; i <= 7; i++) {// up
=====================================================================
Found a 3 line (41 tokens) duplication in the following files: 
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 88 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 79 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

	private static void rightHorizontalMoves(Piece piece, ArrayList<Square> list){
		int x= piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = x + 1; i <= 7; ++i)
=====================================================================
Found a 16 line (41 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 91 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

                if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove))
                {
                    list.add(newMove);
                }

                if (piece.pieceBehaviour.otherOwner(i, y))
                {
                    break;
                }
            }
            else
            {
                break;//we've to break because we cannot go beside other piece!!
            }
        }
	}
=====================================================================
Found a 16 line (41 tokens) duplication in the following files: 
Starting at line 97 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

                if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove))
                {
                    list.add(newMove);
                }

                if (piece.pieceBehaviour.otherOwner(i, y))
                {
                    break;
                }
            }
            else
            {
                break;//we've to break because we cannot go beside other piece!!
            }
        }
	}
=====================================================================
Found a 6 line (41 tokens) duplication in the following files: 
Starting at line 17 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

			Square newMove = piece.getChessboard().getSquares()[newX][newY];
			if (ignoreKing) {
				list.add(newMove);
			} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
				list.add(newMove);
			}
=====================================================================
Found a 3 line (40 tokens) duplication in the following files: 
Starting at line 262 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 266 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 262 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 266 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java

				.setHorizontalGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(mainPanelLayout.createSequentialGroup().addContainerGap()
								.addComponent(gamesPane, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
=====================================================================
Found a 12 line (40 tokens) duplication in the following files: 
Starting at line 169 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 119 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Server.java
Starting at line 152 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 108 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Server.java

                    output.writeInt(connection_info.err_bad_password.getValue());
                    output.flush();
                    continue;
                }
                 
                if(joinAsPlayer)
                {
                    print("join as player");
                    if(table.isAllPlayers())
                    {
                        print("error: was all players at this table");
                        output.writeInt(connection_info.err_table_is_full.getValue());
=====================================================================
Found a 9 line (40 tokens) duplication in the following files: 
Starting at line 155 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoard.java
Starting at line 227 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 189 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoard.java
Starting at line 231 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java

	}

	public int get_square_height() {
		return (getRadius() - getRadius() / 3) / 6;
	}

	public int getRadius() {
		return board_layout.image.getHeight(null) / 2;
	}
=====================================================================
Found a 10 line (40 tokens) duplication in the following files: 
Starting at line 252 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 265 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 278 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 222 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 231 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 240 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java

            output.writeUTF("#undoAsk");
            output.flush();
        }
        catch(IOException exc)
        {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, exc);
        }
    }
    
    public void sendUndoAnswerPositive()
=====================================================================
Found a 3 line (40 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 102 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 98 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 113 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 82 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 106 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 121 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

	private static void forwardRightMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		if (x == 23) {
=====================================================================
Found a 3 line (40 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 88 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 79 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

	private static void forwardVerticalMoves(Piece piece, ArrayList<Square> list) {
		int x= piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = y + 1; i <= 7; i++) {// up
=====================================================================
Found a 11 line (40 tokens) duplication in the following files: 
Starting at line 58 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 220 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 61 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

        drawLabels((int) square_height);
	}
	
	/**
     * Method to draw Chessboard and their elements (pieces etc.)
     * @deprecated 
     */
    public void draw()
    {
        this.getGraphics().drawImage(board_layout.image, this.getTopLeftPoint().x, this.getTopLeftPoint().y, null);//draw an Image of chessboard
        this.drawLabels();
=====================================================================
Found a 10 line (39 tokens) duplication in the following files: 
Starting at line 479 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 493 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 479 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 493 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java

				JOptionPane.showMessageDialog(null, "W pamieci brak ruchow do przodu!");
			}
		} catch (ArrayIndexOutOfBoundsException exc) {
			JOptionPane.showMessageDialog(null, "Brak aktywnej karty!");
		} catch (UnsupportedOperationException exc) {
			JOptionPane.showMessageDialog(null, exc.getMessage());
		}
	}// GEN-LAST:event_rewindToBeginActionPerformed

	private void rewindToEndActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_rewindToEndActionPerformed
=====================================================================
Found a 13 line (39 tokens) duplication in the following files: 
Starting at line 346 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 108 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 322 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 106 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

                for(Client observer: clientObservers)
                {
                    observer.output.writeUTF("#settings");
                    observer.output.writeObject(observerSettings);
                    observer.output.flush();
                }
            }
        }
        
        //send all settings and moves to new observer
        //warning: used only if game started
        public void sendSettingsAndMovesToNewObserver() throws IOException
        {
=====================================================================
Found a 10 line (39 tokens) duplication in the following files: 
Starting at line 237 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 296 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 211 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 256 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java

            output.writeInt(endY);
            output.flush();
        }
        catch (IOException ex)
        {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void sendUndoAsk()
=====================================================================
Found a 10 line (39 tokens) duplication in the following files: 
Starting at line 63 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java

					} else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
						list.add(moveSq);
					}
				}
			}
		}

	}

	public ArrayList<Square> getMoves(Piece piece1, boolean ignoreKing) {
=====================================================================
Found a 11 line (39 tokens) duplication in the following files: 
Starting at line 121 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 105 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 121 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 97 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing) {
		ArrayList<Square> list = new ArrayList<>();
		forwardVerticalMoves(piece, list, ignoreKing);
=====================================================================
Found a 11 line (39 tokens) duplication in the following files: 
Starting at line 70 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

					} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), moveSq)) {

						list.add(moveSq);
					}
				}
			}
		}

	}

	public ArrayList<Square> getMoves(Piece piece1, boolean ignoreKing) {
=====================================================================
Found a 7 line (38 tokens) duplication in the following files: 
Starting at line 39 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 45 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

		this.topLeftPoint = topLeft;
		this.board_layout=board.board_layout;
		this.renderLabels= renderLabels;
		this.upsideDown= upsideDown;
		this.squares= board.initial.getSquares();
		this.board= board;
		activeSquare = null;
=====================================================================
Found a 9 line (38 tokens) duplication in the following files: 
Starting at line 78 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 135 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 83 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 144 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

			for (int y = 0; y < 6; y++) {
				if (squares[i][y].piece != null) {
					squares[i][y].piece.draw(g);// draw image of Piece
				}
			}
		} // --endOf--drawPiecesOnSquares
	}

	public Point indexToCartesian(Point p1){
=====================================================================
Found a 4 line (38 tokens) duplication in the following files: 
Starting at line 141 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 73 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceDisplay.java
Starting at line 126 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceDisplay.java
Starting at line 145 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\PieceDisplay.java
Starting at line 124 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\PieceDisplay.java

		BufferedImage resized = new BufferedImage(height, height, BufferedImage.TYPE_INT_ARGB_PRE);
		Graphics2D imageGr = (Graphics2D) resized.createGraphics();
		imageGr.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		imageGr.drawImage(tempImage, 0, 0, height, height, null);
=====================================================================
Found a 5 line (38 tokens) duplication in the following files: 
Starting at line 171 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 194 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 187 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 223 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 175 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 198 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 190 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java
Starting at line 217 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

		Graphics2D uDL2D = (Graphics2D) uDL.createGraphics();
		uDL2D.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		uDL2D.setColor(Color.white);

		uDL2D.fillRect(0, 0, labelWidth + min_label_height, labelHeight);
=====================================================================
Found a 2 line (38 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 102 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 82 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

	private static void backwardRightMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
=====================================================================
Found a 7 line (38 tokens) duplication in the following files: 
Starting at line 38 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 44 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 38 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 44 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java

		newX = piece.getSquare().getPozX() - 1;
		newY = piece.getSquare().getPozY() + 2;

		LMove(piece, newX, newY, list, ignoreKing);

		// 3
		newX = piece.getSquare().getPozX() + 1;
=====================================================================
Found a 7 line (38 tokens) duplication in the following files: 
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 68 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 68 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java

		newX = piece.getSquare().getPozX() + 1;
		newY = piece.getSquare().getPozY() - 2;

		LMove(piece, newX, newY, list, ignoreKing);

		// 7
		newX = piece.getSquare().getPozX() - 1;
=====================================================================
Found a 6 line (38 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

		for (int i = y + 1; i <= 5; i++) {// up

			if (piece.pieceBehaviour.checkPiece(x, i)) {
				Square newMove = piece.getChessboard().getSquares()[x][i];

				if(ignoreKing){
=====================================================================
Found a 8 line (38 tokens) duplication in the following files: 
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 58 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

		for (int i = x + 1; i <= 23; ++i) {// right

			if (piece.pieceBehaviour.checkPiece(i, y)) {// if on this square
														// isn't piece

				Square newMove = piece.getChessboard().getSquares()[i][y];

				if(ignoreKing){
=====================================================================
Found a 3 line (38 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 54 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 88 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 54 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 79 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

	private static void backwardRightMoves(Piece piece, ArrayList<Square> list) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
=====================================================================
Found a 12 line (38 tokens) duplication in the following files: 
Starting at line 87 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 102 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 87 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 95 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

				if (piece.pieceBehaviour.otherOwner(h, i)) {
					break;
				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}
	
	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing){
		ArrayList<Square> list = new ArrayList<>();
=====================================================================
Found a 12 line (38 tokens) duplication in the following files: 
Starting at line 105 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceDisplay.java
Starting at line 45 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\PieceDisplay.java
Starting at line 103 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\PieceDisplay.java

		}
		/*
		 * Method to draw piece on chessboard
		 * 
		 * @graph : where to draw
		 */

		public final void draw(Graphics g) {
			try {
				Graphics2D g2d = (Graphics2D) g;
				g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
				square = piece.getSquare();
=====================================================================
Found a 5 line (37 tokens) duplication in the following files: 
Starting at line 83 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\LogToFile.java
Starting at line 105 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\LogToFile.java
Starting at line 88 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\LogToFile.java
Starting at line 110 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\LogToFile.java

		try {
			java.util.Date dt = new java.util.Date();
			SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
			String srvDate = dateFormat.format(dt);
			String yymmdd = "ProcessLog_V2_" + srvDate.substring(6, 10) + srvDate.substring(3, 5)
=====================================================================
Found a 4 line (37 tokens) duplication in the following files: 
Starting at line 380 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 142 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 352 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 136 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

            print("running function: sendMoveToOther("+sender.nick+", "+beginX+", "+beginY+", "+endX+", "+endY+")");

            if(sender == clientPlayer1 || sender == clientPlayer2) //only player1 and player2 can move
            {
=====================================================================
Found a 12 line (37 tokens) duplication in the following files: 
Starting at line 92 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Player.java
Starting at line 92 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Player.java

	public void setColor(colors color) {
		this.color = color;
	}

	public boolean isGoDown() {
		return goDown;
	}

	public void setGoDown(boolean goDown) {
		this.goDown = goDown;
	}
}
=====================================================================
Found a 7 line (37 tokens) duplication in the following files: 
Starting at line 32 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 50 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 32 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 50 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java

		newX = piece.getSquare().getPozX() - 2;
		newY = piece.getSquare().getPozY() + 1;

		LMove(piece, newX, newY, list, ignoreKing);

		// 2
		newX = piece.getSquare().getPozX() - 1;
=====================================================================
Found a 8 line (37 tokens) duplication in the following files: 
Starting at line 17 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 26 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java

			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
				list.add(moveSq);

			}
		}
	}

	public void passCenter(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 11 line (37 tokens) duplication in the following files: 
Starting at line 194 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 221 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 178 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 205 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

						|| this.getChessboard().getSquares()[s.getPozX()][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int i = s.getPozX() - 1; i >= 0; --i) // left
=====================================================================
Found a 12 line (37 tokens) duplication in the following files: 
Starting at line 248 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 303 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 330 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 232 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 287 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 314 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

						|| this.getChessboard().getSquares()[i][s.getPozY()].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		// Bishop & Queen
		for (int h = s.getPozX() - 1, i = s.getPozY() + 1; !pieceBehaviour.isout(h, i); --h, ++i) // left-up
=====================================================================
Found a 9 line (37 tokens) duplication in the following files: 
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

			} else if (moveSq.piece == null && piece.myKing().willBeSafeAfterMove(piece.getSquare(), moveSq)) {

				list.add(moveSq);

			}
		}
	}

	public void passCenter(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 5 line (36 tokens) duplication in the following files: 
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 2
		newX = piece.getSquare().getPozX() - 1;
		newY = piece.getSquare().getPozY() + 2;
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 28 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 28 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 2
		newX = piece.getSquare().getPozX() - 1;
		newY = piece.getSquare().getPozY() + 2;

		LMove(piece, newX, newY, list, ignoreKing);
=====================================================================
Found a 5 line (36 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 59 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 59 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 3
		newX = piece.getSquare().getPozX() + 1;
		newY = piece.getSquare().getPozY() + 2;
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 3
		newX = piece.getSquare().getPozX() + 1;
		newY = piece.getSquare().getPozY() + 2;

		LMove(piece, newX, newY, list, ignoreKing);
=====================================================================
Found a 5 line (36 tokens) duplication in the following files: 
Starting at line 47 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 53 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 47 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 53 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 4
		newX = piece.getSquare().getPozX() + 2;
		newY = piece.getSquare().getPozY() + 1;
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 47 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 47 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 4
		newX = piece.getSquare().getPozX() + 2;
		newY = piece.getSquare().getPozY() + 1;

		LMove(piece, newX, newY, list, ignoreKing);
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 53 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 53 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 5
		newX = piece.getSquare().getPozX() + 2;
		newY = piece.getSquare().getPozY() - 1;

		LMove(piece, newX, newY, list, ignoreKing);
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 59 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 59 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 6
		newX = piece.getSquare().getPozX() + 1;
		newY = piece.getSquare().getPozY() - 2;

		LMove(piece, newX, newY, list, ignoreKing);
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 58 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 58 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 7
		newX = piece.getSquare().getPozX() - 1;
		newY = piece.getSquare().getPozY() - 2;

		LMove(piece, newX, newY, list, ignoreKing);
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 8
		newX = piece.getSquare().getPozX() - 2;
		newY = piece.getSquare().getPozY() - 1;

		LMove(piece, newX, newY, list, ignoreKing);
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 98 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 113 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 106 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 121 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

	private void captureMovesBeforeCenter(Pawn piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
=====================================================================
Found a 3 line (36 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

	private static void forwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = y + 1; i <= 5; i++) {// up
=====================================================================
Found a 6 line (36 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

		for (int i = y + 1; i <= 5; i++) {// up

			if (piece.pieceBehaviour.checkPiece(x, i)) {
				Square newMove = piece.getChessboard().getSquares()[x][i];

				if(ignoreKing){
=====================================================================
Found a 8 line (36 tokens) duplication in the following files: 
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

		for (int i = y - 1; i >= 0; i--) {// down

			if (piece.pieceBehaviour.checkPiece(x, i)) {// if on this square
														// isn't piece

				Square newMove = piece.getChessboard().getSquares()[x][i];

				if(ignoreKing){
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 31 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 31 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

        newX = piece.getSquare().getPozX() - 1;
        newY = piece.getSquare().getPozY() + 2;

       LMove(piece, newX, newY, list);

        //3
        newX = piece.getSquare().getPozX() + 1;
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 55 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 61 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 55 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java
Starting at line 61 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

        newX = piece.getSquare().getPozX() + 1;
        newY = piece.getSquare().getPozY() - 2;

       LMove(piece, newX, newY, list);

        //7
        newX = piece.getSquare().getPozX() - 1;
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 69 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 95 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java

				Square newMove = piece.getChessboard().getSquares()[x][i];

				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
=====================================================================
Found a 5 line (36 tokens) duplication in the following files: 
Starting at line 136 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardInitialization.java
Starting at line 145 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardInitialization.java
Starting at line 134 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardInitialization.java
Starting at line 143 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardInitialization.java

		getSquares()[4][i].setPiece(new Queen(board, player, queenMoves));
		
			if (player.getColor() == Player.colors.white) {
				
				getSquares()[3][i].setPiece(kingWhite = new King(board, player, kingMoves));
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 63 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 89 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

				Square newMove = piece.getChessboard().getSquares()[x][i];

				if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
=====================================================================
Found a 4 line (35 tokens) duplication in the following files: 
Starting at line 270 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 58 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 270 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 58 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java

		menuBar.setName("menuBar"); // NOI18N

		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application
				.getInstance(main.java.JChessApp.class).getContext().getResourceMap(JChessView.class);
=====================================================================
Found a 5 line (35 tokens) duplication in the following files: 
Starting at line 75 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardInitialization.java
Starting at line 113 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardInitialization.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardInitialization.java
Starting at line 111 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardInitialization.java

		squares[i + 7][j].setPiece(new Rook(board, player, rookMoves));
		
		//Knight
		ArrayList <IMove> knightMoves = new ArrayList<>();
		knightMoves.add(new KnightMoves());
=====================================================================
Found a 5 line (35 tokens) duplication in the following files: 
Starting at line 81 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardInitialization.java
Starting at line 119 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardInitialization.java
Starting at line 82 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardInitialization.java
Starting at line 117 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardInitialization.java

		squares[i + 6][j].setPiece(new Knight(board, player, knightMoves));
		
		//Bishop
		ArrayList <IMove> bishopMoves = new ArrayList<>();
		bishopMoves.add(new BishopMoves());
=====================================================================
Found a 6 line (35 tokens) duplication in the following files: 
Starting at line 499 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\MovesTable.java
Starting at line 512 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\MovesTable.java
Starting at line 501 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\MovesTable.java
Starting at line 514 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\MovesTable.java

				if (locMove.equals("O-O-O")) {
					if (this.game.getActivePlayer().getColor() == Player.colors.black) // if
																						// black
																						// turn
					{
						values = new int[] { 4, 0, 2, 0 };// move value for
=====================================================================
Found a 8 line (35 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
				list.add(moveSq);

			}
		}
	}

	public void captureMove(Piece piece, ArrayList<Square> list, int newX, int newY, boolean ignoreKing) {
=====================================================================
Found a 5 line (35 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 97 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
=====================================================================
Found a 7 line (35 tokens) duplication in the following files: 
Starting at line 25 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 25 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

        newX = piece.getSquare().getPozX() - 2;
        newY = piece.getSquare().getPozY() + 1;

       LMove(piece, newX, newY, list);

        //2
        newX = piece.getSquare().getPozX() - 1;
=====================================================================
Found a 8 line (35 tokens) duplication in the following files: 
Starting at line 26 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java
Starting at line 53 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java

			if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
				list.add(moveSq);

			}
		}
	}
	
	public void captureMove(Piece piece, ArrayList<Square> list, int newX){
=====================================================================
Found a 5 line (35 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 91 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

				} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
=====================================================================
Found a 6 line (34 tokens) duplication in the following files: 
Starting at line 178 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 194 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 182 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 197 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

		int addX = (int) (square_height2 / 2);
		if (renderLabels) {
			addX += labelHeight;
		}

		String[] letters = { "a", "b", "c", "d", "e", "f", "g", "h" };
=====================================================================
Found a 3 line (34 tokens) duplication in the following files: 
Starting at line 185 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 213 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 189 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 208 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

		int j = 1;
		for (int i = letters.length; i > 0; i--, j++) {
			uDL2D.drawString(letters[i - 1], (square_height2 * (j - 1)) + addX, 10 + (labelHeight / 3));
=====================================================================
Found a 5 line (34 tokens) duplication in the following files: 
Starting at line 77 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Chat.java
Starting at line 86 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Chat.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Chat.java
Starting at line 85 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Chat.java

        this.gbc.gridy = 1;
        this.gbc.gridwidth = 1;
        this.gbc.gridheight = 1;
        this.gbc.weighty = 0;
        this.gbc.weightx = 1.0;
=====================================================================
Found a 6 line (34 tokens) duplication in the following files: 
Starting at line 185 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawNetworkSettings.java
Starting at line 193 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawNetworkSettings.java
Starting at line 186 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawNetworkSettings.java
Starting at line 194 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawNetworkSettings.java

            this.panelOptions.add(servOptions);
            this.panelOptions.revalidate();
            this.panelOptions.requestFocus();
            this.panelOptions.repaint();
        }
        else if (arg0.getSource() == this.radioClient) //show options for client
=====================================================================
Found a 2 line (34 tokens) duplication in the following files: 
Starting at line 138 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 139 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 157 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java
Starting at line 162 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java

                                .addComponent(appVendorLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(appHomepageLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
=====================================================================
Found a 4 line (34 tokens) duplication in the following files: 
Starting at line 150 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 164 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 175 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java
Starting at line 188 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java

                .addComponent(appDescLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(versionLabel)
=====================================================================
Found a 7 line (34 tokens) duplication in the following files: 
Starting at line 128 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 141 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

			}
		}
	}
	
	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing){
		ArrayList<Square> list = new ArrayList<>();
		forwardLeftMoves(piece, list, ignoreKing );
=====================================================================
Found a 4 line (34 tokens) duplication in the following files: 
Starting at line 17 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 70 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 106 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java

			Square newMove = piece.getChessboard().getSquares()[newX][newY];
			if (ignoreKing){
				list.add(newMove);
			}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
=====================================================================
Found a 4 line (34 tokens) duplication in the following files: 
Starting at line 14 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 44 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 32 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java

			Square moveSq = piece.getChessboard().getSquares()[piece.getSquare().getPozX()][newY];
			if (moveSq.piece == null && ignoreKing) {
				list.add(moveSq);
			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
=====================================================================
Found a 5 line (34 tokens) duplication in the following files: 
Starting at line 30 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 14 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java

			Square moveSq = piece.getChessboard().getSquares()[newX][piece.getSquare().getPozY()];

			if (moveSq.piece == null && ignoreKing) {
				list.add(moveSq);
			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
=====================================================================
Found a 10 line (34 tokens) duplication in the following files: 
Starting at line 121 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 89 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 121 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 89 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

				}
			} else {
				break;// we've to break because we cannot go beside other
						// piece!!
			}
		}
	}

	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing) {
		ArrayList<Square> list = new ArrayList<>();
=====================================================================
Found a 9 line (34 tokens) duplication in the following files: 
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KingMoves.java
Starting at line 75 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KingMoves.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KingMoves.java
Starting at line 75 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KingMoves.java

				Square sq1 = piece.getChessboard().getSquares()[x - 1][y];
				if (canCastling && piece.isSafe(sq) && piece.isSafe(sq1)) { 
					// can do castling when neither sq nor sq1 is checked
					list.add(sq);
				}
			}
		}
	
	public void castlingRightMove(Piece piece1, ArrayList<Square> list, int x, int y){
=====================================================================
Found a 5 line (34 tokens) duplication in the following files: 
Starting at line 28 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 58 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 28 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java
Starting at line 58 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

       LMove(piece, newX, newY, list);

        //2
        newX = piece.getSquare().getPozX() - 1;
        newY = piece.getSquare().getPozY() + 2;
=====================================================================
Found a 5 line (34 tokens) duplication in the following files: 
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

       LMove(piece, newX, newY, list);

        //3
        newX = piece.getSquare().getPozX() + 1;
        newY = piece.getSquare().getPozY() + 2;
=====================================================================
Found a 5 line (34 tokens) duplication in the following files: 
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

       LMove(piece, newX, newY, list);

        //4
        newX = piece.getSquare().getPozX() + 2;
        newY = piece.getSquare().getPozY() + 1;
=====================================================================
Found a 11 line (34 tokens) duplication in the following files: 
Starting at line 167 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 221 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 151 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 205 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

						|| this.getChessboard().getSquares()[s.getPozX()][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int i = s.getPozY() - 1; i >= 0; --i) // down
=====================================================================
Found a 4 line (34 tokens) duplication in the following files: 
Starting at line 17 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 70 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 106 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java

			Square newMove = piece.getChessboard().getSquares()[newX][newY];
			if (ignoreKing) {
				list.add(newMove);
			} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 296 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 63 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 296 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java

		saveGameItem.addActionListener(this);

		javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(main.java.JChessApp.class)
				.getContext().getActionMap(JChessView.class, this);
=====================================================================
Found a 6 line (33 tokens) duplication in the following files: 
Starting at line 434 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 466 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 481 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 495 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 434 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 466 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 481 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 495 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java

			} catch (java.lang.ArrayIndexOutOfBoundsException exc) {
				JOptionPane.showMessageDialog(null, "Brak aktywnej karty!");
			} catch (UnsupportedOperationException exc) {
				JOptionPane.showMessageDialog(null, exc.getMessage());
			}
		}
=====================================================================
Found a 9 line (33 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardInitialization.java
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardInitialization.java

public class CircleBoardInitialization {
	Square[][] squares;
	CircleBoard board;
	public King kingWhite;
	public King kingBlack;
	public King kingBlue;

	public CircleBoardInitialization(CircleBoard board) {
		this.board=board;
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 127 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 169 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 136 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java
Starting at line 192 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java

                            .addComponent(vendorLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
=====================================================================
Found a 11 line (33 tokens) duplication in the following files: 
Starting at line 167 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 194 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 276 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 303 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 330 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 151 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 178 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 260 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 287 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 314 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

						|| this.getChessboard().getSquares()[s.getPozX()][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int i = s.getPozY() - 1; i >= 0; --i) // down
=====================================================================
Found a 5 line (33 tokens) duplication in the following files: 
Starting at line 158 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 164 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 162 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java
Starting at line 168 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

        this.setSize(height, height);

        resized = new BufferedImage((int)  square_height, (int)  square_height, BufferedImage.TYPE_INT_ARGB_PRE);
        g = resized.createGraphics();
        g.drawImage(board_layout.orgAbleSquare, 0, 0, (int)  square_height, (int)  square_height, null);
=====================================================================
Found a 14 line (32 tokens) duplication in the following files: 
Starting at line 453 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 284 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 421 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 256 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

            return true;
        }

        public boolean isObservers() //is it any observer?
        {
            return !clientObservers.isEmpty();
        }

        public boolean canObserversJoin() //can wathing game?
        {
            return this.canObserversJoin;
        }

        public void addPlayer(Client client) //join player to game
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 544 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 86 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\SClient.java
Starting at line 505 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\SClient.java

                        table.sendMessageToAll(nick + ": " + str);
                    }
                }
                catch (IOException ex)
                {
                    Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
=====================================================================
Found a 10 line (32 tokens) duplication in the following files: 
Starting at line 63 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 45 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java

					} else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
						list.add(moveSq);
					}
				}
			}
		}

	}

	public ArrayList<Square> getMoves(Piece piece1, boolean ignoreKing) {
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

	private static void forwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = y + 1; i <= 5; i++) {// up
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

	private static void backwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = y - 1; i >= 0; i--) {// down
=====================================================================
Found a 11 line (32 tokens) duplication in the following files: 
Starting at line 70 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

					} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), moveSq)) {

						list.add(moveSq);
					}
				}
			}
		}

	}

	public ArrayList<Square> getMoves(Piece piece1, boolean ignoreKing) {
=====================================================================
Found a 5 line (31 tokens) duplication in the following files: 
Starting at line 120 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 546 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 69 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Server.java
Starting at line 109 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 507 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Server.java

        }
        catch (IOException ex)
        {
            Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
        }
=====================================================================
Found a 5 line (31 tokens) duplication in the following files: 
Starting at line 233 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 545 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 87 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\SClient.java
Starting at line 184 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Server.java
Starting at line 206 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 506 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 77 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\SClient.java
Starting at line 163 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Server.java

                }
            }
            catch (IOException ex)
            {
                Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
=====================================================================
Found a 17 line (31 tokens) duplication in the following files: 
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardInitialization.java
Starting at line 44 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardInitialization.java
Starting at line 39 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardInitialization.java
Starting at line 45 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardInitialization.java

			for (int y = 0; y < 6; y++) {
				getSquares()[i][y] = new Square(i, y, null);
			}
		} // --endOf--create object for each square
	}

	/**
	 * Method setPieces on begin of new game or loaded game
	 * 
	 * @param plWhite
	 *            reference to white player
	 * @param plBlack
	 *            reference to black player
	 */
	
	
	public void setPieces(Player[] players) {
=====================================================================
Found a 9 line (31 tokens) duplication in the following files: 
Starting at line 29 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KingMoves.java
Starting at line 67 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java
Starting at line 29 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KingMoves.java
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

					}
				}
			}
		}

	}
	
	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing){
		ArrayList<Square> list = new ArrayList<>();
=====================================================================
Found a 3 line (31 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 88 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 79 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

	private static void forwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = y + 1; i <= 5; i++) {// up
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 14 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java
Starting at line 12 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java
Starting at line 31 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

	public void regularMove(Piece piece, ArrayList<Square> list, int i) {
		int newY=0;
		if (piece.getPlayer().isGoDown()) {// check if player "go" down or up
			newY = piece.getSquare().getPozY() + i;// if yes, change value
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 401 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 414 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 401 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 414 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java

						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 616, Short.MAX_VALUE)
						.addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 120 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 234 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 88 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\SClient.java
Starting at line 69 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Server.java
Starting at line 185 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Server.java
Starting at line 109 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 207 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 78 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\SClient.java
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Server.java
Starting at line 164 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Server.java

        }
        catch (IOException ex)
        {
            Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
=====================================================================
Found a 9 line (30 tokens) duplication in the following files: 
Starting at line 399 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 434 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 374 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 404 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java

                    clientPlayer2.output.writeInt(endY);
                    clientPlayer2.output.flush();
                }

                if(canObserversJoin())
                {
                    for(Client observer: clientObservers)
                    {
                        observer.output.writeUTF("#move");
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 90 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardInitialization.java
Starting at line 350 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 128 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardInitialization.java
Starting at line 91 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardInitialization.java
Starting at line 351 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java
Starting at line 126 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardInitialization.java

		ArrayList <IMove> queenMoves = new ArrayList<>();
		queenMoves.add(new RookMoves());
		queenMoves.add(new BishopMoves());
=====================================================================
Found a 7 line (30 tokens) duplication in the following files: 
Starting at line 107 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 119 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 102 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 110 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java

            catch (ConnectException ex)
            {
                Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
                return false;
            }

        }
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 118 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 239 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 298 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 110 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 213 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 258 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java

        }
        catch (IOException ex)
        {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
=====================================================================
Found a 10 line (30 tokens) duplication in the following files: 
Starting at line 63 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

					} else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
						list.add(moveSq);
					}
				}
			}
		}

	}

	public ArrayList<Square> getMoves(Piece piece1, boolean ignoreKing) {
=====================================================================
Found a 10 line (30 tokens) duplication in the following files: 
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java
Starting at line 70 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java

					if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
						list.add(moveSq);

					}
				}
			}
		}
	}
	
	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing){
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 161 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 188 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 270 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 297 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 324 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 351 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 145 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 172 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 254 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 281 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 308 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 335 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

			} else if (this.getChessboard().getSquares()[s.getPozX()][i].piece.getPlayer() != this.getPlayer()) // if
			// isn't
			// our
			// piece
			{
				if (this.getChessboard().getSquares()[s.getPozX()][i].piece.getName().equals("Rook")
=====================================================================
Found a 9 line (30 tokens) duplication in the following files: 
Starting at line 167 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 194 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 357 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 151 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 178 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 341 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

						|| this.getChessboard().getSquares()[s.getPozX()][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}
=====================================================================
Found a 11 line (30 tokens) duplication in the following files: 
Starting at line 167 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 194 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 248 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 151 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 178 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 232 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

						|| this.getChessboard().getSquares()[s.getPozX()][i].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int i = s.getPozY() - 1; i >= 0; --i) // down
=====================================================================
Found a 11 line (30 tokens) duplication in the following files: 
Starting at line 221 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 276 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 303 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 330 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 205 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 260 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 287 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 314 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

						|| this.getChessboard().getSquares()[i][s.getPozY()].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}

		for (int i = s.getPozX() + 1; i <= 7; ++i) // right
=====================================================================
Found a 9 line (30 tokens) duplication in the following files: 
Starting at line 233 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 262 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 214 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java
Starting at line 238 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

                clientPlayer2.output.writeUTF("#errorConnection");
                clientPlayer2.output.flush();
            }

            if (canObserversJoin())
            {
                for (SClient observer : clientObservers)
                {
                    observer.output.writeUTF("#errorConnection");
=====================================================================
Found a 2 line (29 tokens) duplication in the following files: 
Starting at line 309 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 341 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 309 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 341 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java

		moveBackItem.setAccelerator(
				javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
=====================================================================
Found a 2 line (29 tokens) duplication in the following files: 
Starting at line 325 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 352 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 325 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 352 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java

		moveForwardItem.setAccelerator(
				javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 540 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 74 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\SClient.java
Starting at line 501 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 68 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\SClient.java

                    if(in.equals("#message"))//new message
                    {
                        String str = input.readUTF();

                        table.sendMessageToAll(nick + ": " + str);
                    }
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 107 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 119 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 102 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 107 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 110 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java

            catch (ConnectException ex)
            {
                Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
                return false;
            }
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 72 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\GUI.java
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\GUI.java

			url = JChessApp.class.getResource(imageLink);
			img = tk.getImage(url);

		} catch (Exception e) {
			//System.out.println("some error loading image!");
			LogToFile.log(null,"INFO", "some error loading image!");
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 127 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 150 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 164 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 169 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 136 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java
Starting at line 175 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java
Starting at line 188 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java
Starting at line 192 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java

                            .addComponent(vendorLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 128 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 31 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KingMoves.java
Starting at line 125 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 79 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KingMoves.java
Starting at line 69 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java
Starting at line 110 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 141 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 31 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KingMoves.java
Starting at line 125 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 79 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KingMoves.java
Starting at line 67 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java
Starting at line 101 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

			}
		}
	}
	
	public ArrayList<Square> getMoves(Piece piece, boolean ignoreKing){
		ArrayList<Square> list = new ArrayList<>();
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 54 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 54 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

	private static void forwardVerticalMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
		for (int i = y + 1; i <= 5; i++) {// up
=====================================================================
Found a 7 line (29 tokens) duplication in the following files: 
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 83 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

            if (piece.pieceBehaviour.checkPiece(i, y))
            {//if on this square isn't piece


				Square newMove = piece.getChessboard().getSquares()[i][y];
                
                if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove))
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

            if (piece.pieceBehaviour.checkPiece(i, piece.getSquare().getPozY()))
            {//if on this square isn't piece
            	Square newMove= piece.getChessboard().getSquares()[i][y];
                
                if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove))
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 144 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 190 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 210 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 139 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java
Starting at line 178 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java
Starting at line 193 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

        if (sender == clientPlayer1 || sender == clientPlayer2) //only player1 and player2 can move
        {
            SClient receiver = (clientPlayer1 == sender) ? clientPlayer2 : clientPlayer1;
            receiver.output.writeUTF("#move");
=====================================================================
Found a 8 line (29 tokens) duplication in the following files: 
Starting at line 151 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 193 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 148 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java
Starting at line 180 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

            receiver.output.writeInt(endY);
            receiver.output.flush();
            
            if (canObserversJoin())
            {
                for (SClient observer : clientObservers)
                {
                    observer.output.writeUTF("#move");
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 233 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 241 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 226 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java
Starting at line 231 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

            for (int i = 1; i <= 8; i++)
            {
                uDL2D.drawString(new Integer(i).toString(), 3 + (labelHeight / 3), (square_height * (i - 1)) + addX);
=====================================================================
Found a 7 line (29 tokens) duplication in the following files: 
Starting at line 173 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardInitialization.java
Starting at line 123 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardInitialization.java
Starting at line 171 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardInitialization.java

			getSquares()[x][i].setPiece(new Pawn(board, player, pawnMoves));
		}
	}

	public Square[][] getSquares() {
		return squares;
	}
=====================================================================
Found a 2 line (28 tokens) duplication in the following files: 
Starting at line 313 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 329 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 313 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 329 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java

		moveBackItem.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
=====================================================================
Found a 2 line (28 tokens) duplication in the following files: 
Starting at line 318 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 334 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 345 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 356 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 318 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 334 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 345 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 356 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java

		moveBackItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 424 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 455 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 424 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 455 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java

	private void moveBackItemActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_moveBackItemActionPerformed
	{// GEN-HEADEREND:event_moveBackItemActionPerformed
		if (gui != null && gui.game != null) {
			gui.game.undo();
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Connection_info.java
Starting at line 47 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 23 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Connection_info.java

    {
        all_is_ok(0),
        err_bad_table_ID(1),
        err_table_is_full(2),
        err_game_without_observer(3),
        err_bad_password(4);

        private int value;
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 326 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 87 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 300 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 84 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

                observerSettings.playerBlack.setType(playerTypes.networkUser);
                observerSettings.gameType = Settings.gameTypes.network;
                observerSettings.upsideDown = true;
            }
        }

        public void sendSettingsToAll() throws IOException //send generated settings to all clients on this table
        {
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 75 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardInitialization.java
Starting at line 80 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardInitialization.java

	private void drawPieces(Graphics g) {
		for (int i = 0; i < 24; i++) // drawPiecesOnSquares
		{
			for (int y = 0; y < 6; y++) {
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 156 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Game.java
Starting at line 214 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Game.java
Starting at line 155 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Game.java
Starting at line 211 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Game.java

			fileR = new FileReader(file);
		} catch (java.io.IOException exc) {
			// System.out.println("Something wrong reading file: " + exc);
			LogToFile.log(exc, "Error", "Something wrong reading file: " + exc.getMessage());
=====================================================================
Found a 11 line (28 tokens) duplication in the following files: 
Starting at line 390 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Game.java
Starting at line 404 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Game.java
Starting at line 384 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Game.java
Starting at line 398 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Game.java

			while (chessboard.undo()) {
				result = true;
			}
		} else {
			throw new UnsupportedOperationException(Settings.lang("operation_supported_only_in_local_game"));
		}

		return result;
	}

	public boolean rewindToEnd() throws UnsupportedOperationException {
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 105 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\GameClock.java
Starting at line 138 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\GameClock.java
Starting at line 105 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\GameClock.java
Starting at line 138 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\GameClock.java

        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                RenderingHints.VALUE_ANTIALIAS_ON);
        Font font = new Font("Serif", Font.ITALIC, 20);

        g2d.setColor(Color.WHITE);
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 119 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawNetworkSettings.java
Starting at line 320 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawNetworkSettings.java
Starting at line 120 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawNetworkSettings.java
Starting at line 319 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawNetworkSettings.java

        this.add(radioClient);

        this.gbc.gridx = 0;
        this.gbc.gridy = 1;
        this.gbc.gridwidth = 2;
        this.gbl.setConstraints(labelGameID, gbc);
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 78 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

		for (int h = x - 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

		for (int h = x + 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); ++h, ++i) // right-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 78 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

		for (int h = x + 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); ++h, --i) // right-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 69 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 95 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java

			Square newMove = piece.getChessboard().getSquares()[newX][newY];
			if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
				list.add(newMove);
			}
=====================================================================
Found a 1 line (28 tokens) duplication in the following files: 
Starting at line 166 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 167 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 193 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 194 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 150 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 151 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 177 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 178 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

				if (this.getChessboard().getSquares()[s.getPozX()][i].piece.getName().equals("Rook")
=====================================================================
Found a 1 line (28 tokens) duplication in the following files: 
Starting at line 220 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 221 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 247 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 248 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 204 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 205 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 231 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 232 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

				if (this.getChessboard().getSquares()[i][s.getPozY()].piece.getName().equals("Rook")
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 132 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardInitialization.java
Starting at line 141 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardInitialization.java

	private void drawPieces(Graphics g) {
		for (int i = 0; i < 8; i++) //drawPiecesOnSquares
        {
            for (int y = 0; y < 8; y++)
            {
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java
Starting at line 16 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 63 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 89 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

			Square newMove = piece.getChessboard().getSquares()[newX][newY];
			if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
				list.add(newMove);
			}
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 380 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 222 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 353 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 203 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

            print("running function: sendMoveToOther("+sender.nick+", "+beginX+", "+beginY+", "+endX+", "+endY+")");

            if(sender == clientPlayer1 || sender == clientPlayer2) //only player1 and player2 can move
            {
                if(clientPlayer1 != sender)
                {
                    clientPlayer1.output.writeUTF("#move");
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 54 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 92 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 95 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

	public void paintComponent(Graphics g) {
		Graphics2D g2d = (Graphics2D) g;
		g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
=====================================================================
Found a 2 line (27 tokens) duplication in the following files: 
Starting at line 98 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardInitialization.java
Starting at line 100 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardInitialization.java
Starting at line 99 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardInitialization.java
Starting at line 101 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardInitialization.java

			squares[i + 3][j].setPiece(kingWhite=new King(board, player, kingMoves));
		} else if (player.getColor().equals(Player.colors.black)) {
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 160 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 240 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 299 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 145 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 213 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 258 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java

                    catch (ClassNotFoundException ex)
                    {
                        Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
                    }
=====================================================================
Found a 1 line (27 tokens) duplication in the following files: 
Starting at line 241 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\MovesTable.java
Starting at line 245 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\MovesTable.java
Starting at line 241 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\MovesTable.java
Starting at line 245 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\MovesTable.java

		if ((!this.enterBlack && this.game.getChessboard().getKing(game.getSettings().playerBlack).isChecked())
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 128 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 158 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 138 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java
Starting at line 181 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java

                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 97 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java

			}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
				list.add(newMove);
			}
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 17 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 48 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 63 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 26 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java
Starting at line 45 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\PawnMoves.java

			} else if (moveSq.piece == null && piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), moveSq)) {
				list.add(moveSq);

			}
		}
	}
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 14 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 90 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 115 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 106 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

	public int isCheckmatedOrStalematedOld() {
		/*
		 * returns: 0-nothing, 1-checkmate, 2-stalemate
		 */
		if (this.allMoves(false).size() == 0) {
			for (int i = 0; i < 8; ++i) {
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 161 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 188 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 215 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 242 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 270 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 297 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 324 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 351 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 145 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 172 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 199 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 226 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 254 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 281 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 308 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 335 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

			} else if (this.getChessboard().getSquares()[s.getPozX()][i].piece.getPlayer() != this.getPlayer()) // if
			// isn't
			// our
			// piece
			{
				if (this.getChessboard().getSquares()[s.getPozX()][i].piece.getName().equals("Rook")
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 221 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 248 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 357 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 205 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 232 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 341 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

						|| this.getChessboard().getSquares()[i][s.getPozY()].piece.getName().equals("Queen")) {
					return false;
				} else {
					break;
				}
			} else {
				break;
			}
		}
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 104 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 152 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 194 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Table.java
Starting at line 103 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java
Starting at line 149 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java
Starting at line 181 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Table.java

        clientPlayer2.output.flush();

        if (canObserversJoin())
        {
            for (SClient observer : clientObservers)
            {
                observer.output.writeUTF("#settings");
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 91 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

			} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
				list.add(newMove);
			}
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 53 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 70 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\PawnMoves.java

			} else if (moveSq.piece == null && piece.myKing().willBeSafeAfterMove(piece.getSquare(), moveSq)) {

				list.add(moveSq);

			}
		}
	}
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 14 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

				} else if (piece.myKing().willBeSafeAfterMove(piece.getSquare(), newMove)) {
					list.add(newMove);
				}
=====================================================================
Found a 8 line (27 tokens) duplication in the following files: 
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\test\java\PieceBehaviourTest.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\test\java\PieceBehaviourTest.java

		boolean expected = true; // The piece is OUT
		boolean obtained = pieceBehaviour.isout(x, y);
		assertEquals(expected, obtained);
		
	}

	@Test
	public final void testIsout_1() {
=====================================================================
Found a 8 line (27 tokens) duplication in the following files: 
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\test\java\PieceBehaviourTest.java
Starting at line 73 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\test\java\PieceBehaviourTest.java

		boolean expected = false; // The piece is NOT out
		boolean obtained = pieceBehaviour.isout(x, y);
		assertEquals(expected, obtained);
		
	}
	
	@Test
	public final void testIsout_2() {
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 474 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 488 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\JChessView.java
Starting at line 474 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java
Starting at line 488 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\JChessView.java

	private void rewindToBeginActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_rewindToBeginActionPerformed
	{// GEN-HEADEREND:event_rewindToBeginActionPerformed
		try {
			Game activeGame = this.getActiveTabGame();
			if (!activeGame.rewindToBegin()) {
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 87 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\LogToFile.java
Starting at line 110 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\LogToFile.java
Starting at line 92 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\LogToFile.java
Starting at line 115 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\LogToFile.java

			String yymmdd = "ProcessLog_V2_" + srvDate.substring(6, 10) + srvDate.substring(3, 5)
					+ srvDate.substring(0, 2);
=====================================================================
Found a 7 line (26 tokens) duplication in the following files: 
Starting at line 160 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 110 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Server.java
Starting at line 144 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 100 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Server.java

                    output.writeInt(connection_info.err_bad_table_ID.getValue());
                    output.flush();
                    continue;
                }
                Table table = tables.get(tableID);

                if(!table.password.equals(password))
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 203 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 233 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 207 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 226 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

		for (int i = 8; i > 0; i--, j++) {
			uDL2D.drawString(new Integer(i).toString(), 3 + (labelHeight / 3), (square_height2 * (j - 1)) + addX);
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 107 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 119 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 160 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 240 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 299 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 102 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 107 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 110 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 145 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 213 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 258 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java

            catch (ConnectException ex)
            {
                Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 123 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Game.java
Starting at line 139 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Game.java
Starting at line 123 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Game.java
Starting at line 138 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Game.java

			LogToFile.log(exc, "Error", "error creating fileWriter: " + exc.getMessage());
			JOptionPane.showMessageDialog(this, Settings.lang("error_writing_to_file") + ": " + exc);
			return;
		}
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 386 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Game.java
Starting at line 400 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Game.java
Starting at line 380 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Game.java
Starting at line 394 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Game.java

	public boolean rewindToBegin() {
		boolean result = false;

		if (this.getSettings().gameType == Settings.gameTypes.local) {
			while (chessboard.undo()) {
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 173 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\MovesTable.java
Starting at line 209 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\MovesTable.java
Starting at line 173 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\MovesTable.java
Starting at line 209 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\MovesTable.java

		if (game.getSettings().upsideDown) {
			locMove += Character.toString((char) ((SquareBoard.bottom - begin.getPozX()) + 97));// add
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 241 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\MovesTable.java
Starting at line 245 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\MovesTable.java
Starting at line 241 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\MovesTable.java
Starting at line 246 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\MovesTable.java

		if ((!this.enterBlack && this.game.getChessboard().getKing(game.getSettings().playerBlack).isChecked())
				|| (this.enterBlack && this.game.getChessboard().getKing(game.getSettings().playerWhite).isChecked())) {// if
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 140 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\NewGameWindow.java
Starting at line 170 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java
Starting at line 62 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\NewGameWindow.java

                                .addComponent(appHomepageLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 194, Short.MAX_VALUE)
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 102 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\BishopMoves.java
Starting at line 98 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 113 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 54 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 88 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 24 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 82 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\BishopMoves.java
Starting at line 106 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 121 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 60 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 54 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 76 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 33 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 79 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

	private static void backwardRightMoves(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int x = piece.getSquare().getPozX(), y = piece.getSquare().getPozY();
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 74 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 74 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java

		newX = piece.getSquare().getPozX() + 2;
		newY = piece.getSquare().getPozY() - 1;

		LMove(piece, newX, newY, list, ignoreKing);
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\PawnMoves.java
Starting at line 11 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java
Starting at line 44 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\PawnMoves.java

	public void regularMoveBeforeCenter(Piece piece, ArrayList<Square> list, boolean ignoreKing) {
		int newY = piece.getSquare().getPozY() + 1;
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\RookMoves.java
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 43 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 91 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

				}else if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove)) {
					list.add(newMove);
				}

				if (piece.pieceBehaviour.otherOwner(x, i)) {
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 97 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\RookMoves.java
Starting at line 20 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\RookMoves.java
Starting at line 18 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\RookMoves.java

                if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), newMove))
                {
                    list.add(newMove);
                }

                if (piece.pieceBehaviour.otherOwner(i, y))
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 486 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 503 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 489 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java
Starting at line 506 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java

					this.initial.getSquares()[end.getPozX()][end.getPozY()].piece = null;
				}
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 140 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardInitialization.java
Starting at line 148 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardInitialization.java
Starting at line 138 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardInitialization.java
Starting at line 146 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardInitialization.java

				getSquares()[3][i].setPiece(kingWhite = new King(board, player, kingMoves));
			} else {
				getSquares()[3][i].setPiece(kingBlack = new King(board, player, kingMoves));
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\Server.java
Starting at line 38 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\server\Server.java
Starting at line 42 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\Server.java
Starting at line 37 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\server\Server.java

    private static Map<Integer, Table> tables;
    public static int port=4449;
    private static ServerSocket ss;
    private static boolean isRunning=false;

    public static enum connection_info
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 175 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 198 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardDisplay.java
Starting at line 191 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 227 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardDisplay.java
Starting at line 179 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 202 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardDisplay.java
Starting at line 194 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java
Starting at line 221 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardDisplay.java

		uDL2D.fillRect(0, 0, labelWidth + min_label_height, labelHeight);
		uDL2D.setColor(Color.black);
		uDL2D.setFont(new Font("Arial", Font.BOLD, 12));
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\circleBoard\CircleBoardInitialization.java
Starting at line 130 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoardInitialization.java
Starting at line 94 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\circleBoard\CircleBoardInitialization.java
Starting at line 128 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoardInitialization.java

		squares[i + 4][j].setPiece(new Queen(board, player, queenMoves));
		
		ArrayList <IMove> kingMoves = new ArrayList<>();
		kingMoves.add(new KingMoves());
		if (player.getColor().equals(Player.colors.white)) {
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 211 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 242 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 301 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\game\Client.java
Starting at line 182 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 214 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java
Starting at line 259 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\game\Client.java

                Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 109 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawLocalSettings.java
Starting at line 408 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\DrawLocalSettings.java
Starting at line 107 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawLocalSettings.java
Starting at line 383 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\DrawLocalSettings.java

					temp.setText(temp.getText(0, 7));
				} catch (BadLocationException exc) {
					LogToFile.log(exc, "Error", "Something wrong in editables: \n" + exc.getMessage());
				}
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 122 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 130 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\gui\JChessAboutBox.java
Starting at line 129 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java
Starting at line 141 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\gui\JChessAboutBox.java

                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(versionLabel)
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 9 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

public class KnightMoves implements IMove {
	public static void LMove(Piece piece, int newX, int newY, ArrayList<Square> list, boolean ignoreKing) {
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 29 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 23 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 29 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 71 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 23 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java
Starting at line 64 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

		ArrayList<Square> list = new ArrayList<>();

		// 1
		newX = piece.getSquare().getPozX() - 2;
		newY = piece.getSquare().getPozY() + 1;
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 58 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 58 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 2
		newX = piece.getSquare().getPozX() - 1;
		newY = piece.getSquare().getPozY() + 2;
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 41 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 52 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 3
		newX = piece.getSquare().getPozX() + 1;
		newY = piece.getSquare().getPozY() + 2;
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 47 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 47 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 46 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 4
		newX = piece.getSquare().getPozX() + 2;
		newY = piece.getSquare().getPozY() + 1;
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 51 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 57 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 51 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 57 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java

		newY = piece.getSquare().getPozY() + 1;

		LMove(piece, newX, newY, list, ignoreKing);

		// 5
		newX = piece.getSquare().getPozX() + 2;
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 53 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 53 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 40 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 5
		newX = piece.getSquare().getPozX() + 2;
		newY = piece.getSquare().getPozY() - 1;
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 59 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 59 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 34 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 6
		newX = piece.getSquare().getPozX() + 1;
		newY = piece.getSquare().getPozY() - 2;
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInCircleBoard\KnightMoves.java
Starting at line 28 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\KnightMoves.java
Starting at line 65 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInCircleBoard\KnightMoves.java
Starting at line 28 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\KnightMoves.java

		LMove(piece, newX, newY, list, ignoreKing);

		// 7
		newX = piece.getSquare().getPozX() - 1;
		newY = piece.getSquare().getPozY() - 2;
=====================================================================
Found a 7 line (25 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 35 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 78 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

		for (int h = x - 1, i = y + 1; !piece.pieceBehaviour.isout(h, i); --h, ++i) // left-up
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't
														// piece
			{
				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(),
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 78 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\movesInSquareBoard\BishopMoves.java
Starting at line 13 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java
Starting at line 56 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\movesInSquareBoard\BishopMoves.java

		for (int h = x - 1, i = y - 1; !piece.pieceBehaviour.isout(h, i); --h, --i) // left-down
		{
			if (piece.pieceBehaviour.checkPiece(h, i)) // if on this square
														// isn't piece
			{
				if (piece.myKing().willBeSafeWhenMoveOtherPiece(piece.getSquare(), piece.getChessboard().getSquares()[h][i])) {
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 150 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 161 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 177 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 188 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 134 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 145 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 161 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 172 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		for (int i = s.getPozY() + 1; i <= 7; ++i) // up
		{
			if (this.getChessboard().getSquares()[s.getPozX()][i].piece == null
=====================================================================
Found a 9 line (25 tokens) duplication in the following files: 
Starting at line 153 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 180 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 262 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 289 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 316 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 343 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 137 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 164 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 246 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 273 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 300 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 327 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

					|| this.getChessboard().getSquares()[s.getPozX()][i].piece == this) // if
			// on
			// this
			// sqhuare
			// isn't
			// piece
			{
				continue;
			} else if (this.getChessboard().getSquares()[s.getPozX()][i].piece.getPlayer() != this.getPlayer()) // if
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 204 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 215 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 231 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 242 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\King.java
Starting at line 188 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 199 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 215 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java
Starting at line 226 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\King.java

		for (int i = s.getPozX() - 1; i >= 0; --i) // left
		{
			if (this.getChessboard().getSquares()[i][s.getPozY()].piece == null
=====================================================================
Found a 11 line (25 tokens) duplication in the following files: 
Starting at line 98 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Piece.java
Starting at line 109 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceBehaviour.java
Starting at line 102 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Piece.java

	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getSymbol() {
=====================================================================
Found a 12 line (25 tokens) duplication in the following files: 
Starting at line 114 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Piece.java
Starting at line 101 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceBehaviour.java
Starting at line 118 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Piece.java

	}

	public Player getPlayer() {
		return player;
	}

	public void setPlayer(Player player) {
		this.player = player;
	}

	
	public Square getSquare() {
=====================================================================
Found a 14 line (25 tokens) duplication in the following files: 
Starting at line 122 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\Piece.java
Starting at line 93 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceBehaviour.java
Starting at line 126 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\Piece.java

	}

	
	public Square getSquare() {
		return square;
	}

	public void setSquare(Square square) {
		this.square = square;
	}

	

	public PieceLayout getLayout() {
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 70 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceDisplay.java
Starting at line 123 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\pieces\PieceDisplay.java
Starting at line 68 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\PieceDisplay.java
Starting at line 121 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\pieces\PieceDisplay.java

				if (layout.image != null && g != null) {
					Image tempImage = layout.orgImage;

					BufferedImage resized = new BufferedImage(hi, hi, BufferedImage.TYPE_INT_ARGB_PRE);
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 271 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 279 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 272 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java
Starting at line 280 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java

				move(initial.getSquares()[7][begin.getPozY()], initial.getSquares()[end.getPozX() - 1][begin.getPozY()],
						false, false);
				ifWasCastling = end.piece; // for undo
				wasCastling = MovesTable.castling.shortCastling;
=====================================================================
Found a 1 line (25 tokens) duplication in the following files: 
Starting at line 463 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 466 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 466 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java
Starting at line 469 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java

						rook = this.initial.getSquares()[end.getPozX() - 1][end.getPozY()].piece;
=====================================================================
Found a 1 line (25 tokens) duplication in the following files: 
Starting at line 468 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 471 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 471 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java
Starting at line 474 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java

						rook = this.initial.getSquares()[end.getPozX() + 1][end.getPozY()].piece;
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 499 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 502 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\build\resources\test\java\squareBoard\SquareBoard.java
Starting at line 502 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java
Starting at line 505 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\main\java\squareBoard\SquareBoard.java

				if (taken != null && !last.wasEnPassant()) {
					this.initial.getSquares()[end.getPozX()][end.getPozY()].piece = taken;
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 53 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\test\java\PieceBehaviourTest.java
Starting at line 67 of C:\Users\vivian cadena\Documents\OVGU\Clean Code Development\Exercise 1\jOpenChess\jopenchess\src\test\java\PieceBehaviourTest.java

	public final void testIsout_2() {
		// Branch 2: The piece is OUT, SquareBoard
		SquareBoard boardSquare = mock(SquareBoard.class);

		PieceBehaviour pieceBehaviour = new PieceBehaviour(boardSquare, p1);
		int x = 8; 
